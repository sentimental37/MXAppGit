<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfDataForm.iOS</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.iOS.DataForm.ConverterAttribute">
            <summary>
            Specifies the converter <see cref="T:Syncfusion.iOS.DataForm.IPropertyValueConverter"/> for the data field to convert the value before reading and saving in DataForm. 
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ConverterAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.ConverterAttribute"/> class.
            </summary>
            <param name="converter">
            The type of <see cref="T:Syncfusion.iOS.DataForm.IPropertyValueConverter"/> for data field.
            </param>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ConverterAttribute.ConverterType">
            <summary>
            Gets the <see cref="T:Syncfusion.iOS.DataForm.IPropertyValueConverter"/> type.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DateRangeAttribute">
            <summary>
            Specifies the date range constraints for the value of a data field. 
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DateRangeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.DateRangeAttribute"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DateRangeAttribute.MaxDay">
            <summary>
            Gets or sets the maximum day of a date.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DateRangeAttribute.MaxMonth">
            <summary>
            Gets or sets the maximum month of a date.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DateRangeAttribute.MaxYear">
            <summary>
            Gets or sets the maximum year of a date.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DateRangeAttribute.MinDay">
            <summary>
            Gets or sets the minimum day of a date.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DateRangeAttribute.MinMonth">
            <summary>
            Gets or sets the minimum month of a date.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DateRangeAttribute.MinYear">
            <summary>
            Gets or sets the minimum year of a date.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DateRangeAttribute.IsValid(System.Object)">
            <summary>
            Checks that the value of the data field is in the specified range.
            </summary>
            <param name="value">
            The data field value to validate.
            </param>
            <returns>
            true if the specified value is in the range; otherwise, false.
            </returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DisplayOptionsAttribute">
            <summary>
            Provides a attribute that lets you specify the the display settings for a data field in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DisplayOptionsAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.DisplayOptionsAttribute"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DisplayOptionsAttribute.ColumnSpan">
            <summary>
            Gets or sets the value that indicates number columns the data field can span in view when <see cref="P:Syncfusion.iOS.DataForm.SfDataForm.ColumnCount"/> is set.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DisplayOptionsAttribute.ImageSource">
            <summary>
            Gets or sets the image to show in the place of label.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DisplayOptionsAttribute.RowSpan">
            <summary>
            Gets or sets the row span value of data field in view during layout.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DisplayOptionsAttribute.ShowLabel">
            <summary>
            Gets or sets a value that indicates whether to show label in view or not.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DisplayOptionsAttribute.ValidMessage">
            <summary>
            Gets or sets a string which will get displayed when user enters valid value for the data field as success message. 
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.SfDataForm">
            <summary>
            DataForm control provides UI for editing all the public properties 
            of data object with appropriate editors based on type of property.  
            DataForm control provides options to control editing, validation of data 
            and customization of layout. 
            </summary>       
        </member>
        <member name="E:Syncfusion.iOS.DataForm.SfDataForm.AutoGeneratingDataFormItem">
            <summary>
             Occurs for each <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/> or <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/> generated for the public properties of data object.         
             </summary>
             <remarks>
             You can cancel the event for particular property to stop it from showing in display.
             Also you can customize the settings using <see cref="P:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs.DataFormItem"/> or <see cref="P:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs.DataFormGroupItem"/>.
             </remarks>
        </member>
        <member name="E:Syncfusion.iOS.DataForm.SfDataForm.GroupItemExpanding">
            <summary>
             Occurs when user try expand a group. You can cancel the user action using this event. 
             </summary>
             <remarks>
             You can cancel the user action by using <see cref="T:Syncfusion.iOS.DataForm.GroupItemExpandingEventArgs"/>.
             </remarks>
        </member>
        <member name="E:Syncfusion.iOS.DataForm.SfDataForm.GroupItemExpanded">
            <summary>
             Occurs when group expanded by user.        
             </summary>        
        </member>
        <member name="E:Syncfusion.iOS.DataForm.SfDataForm.GroupItemCollapsing">
            <summary>
             Occurs when user try collapse a group. You can cancel the user action using this event. 
             </summary>
             <remarks>
             You can cancel the user action by using <see cref="T:Syncfusion.iOS.DataForm.GroupItemCollapsingEventArgs"/>.
             </remarks>
        </member>
        <member name="E:Syncfusion.iOS.DataForm.SfDataForm.GroupItemCollapsed">
            <summary>
             Occurs when group gets collapsed by user.             
             </summary>
        </member>
        <member name="E:Syncfusion.iOS.DataForm.SfDataForm.Validating">
            <summary>
            Occurs when <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/> validates the user input.
            </summary>
        </member>
        <member name="E:Syncfusion.iOS.DataForm.SfDataForm.Validated">
            <summary>
            Occurs after completion of user input validation.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.LayoutManager">
            <summary>
            Gets or sets the reference to the <see cref="!:Syncfusion.SfDataForm.DataFormLayoutManager"/> instance which layouts labels and editors in <see cref="T:Syncfusion.iOS.DataForm.DataFormItemView"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.ItemManager">
            <summary>
            Gets the reference to the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemManager"/> instance which generates <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/> with default settings based on attribute setting. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.SourceProvider">
            <summary>
            Gets or sets the reference to the <see cref="T:Syncfusion.iOS.DataForm.SourceProvider"/> instance which is used to get the source for picker type editors.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.DataObject">
            <summary>
            Gets or sets a data object to view or edit the properties.
            DataForm generates the editors and labels from the public properties of data object. 
            </summary>
            <value>
            The default value is <b>null</b>.
            </value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.CommitMode">
            <summary>
            Gets or sets the value that determines, when the value entered by user should be saved to the data object. 
            </summary>
            <value>
            The default value is <see cref="F:Syncfusion.iOS.DataForm.CommitMode.LostFocus"/>.
            </value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.ColumnCount">
            <summary>
            Gets or sets the value denotes the number of editor to be arranged per row. 
            Be default one editor for one property arranged with label. 
            </summary>
            <value>
            The default value is one.
            </value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.ValidationMode">
            <summary>
            Gets or sets a value that denotes when the user input should be validated 
            based on <see cref="T:System.ComponentModel.IDataErrorInfo"/> and <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>.
            </summary>  
            <value>
            One of the <see cref="T:Syncfusion.iOS.DataForm.ValidationMode"/> enum.
            The default value is <see cref="F:Syncfusion.iOS.DataForm.ValidationMode.LostFocus"/>.
            </value>       
            <remarks>
            The <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/> process the built-in validations when data object implements 
            <see cref="T:System.ComponentModel.IDataErrorInfo"/> or property defined with <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/>.
            The validation can be performed explicitly by handling <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.Validating"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.LabelPosition">
            <summary>
            Gets or sets the value denotes how to layout the label associated with editor. 
            Label's can be positioned either at the top or left side of editor.
            </summary>
            <value>
            The default value is <see cref="F:Syncfusion.iOS.DataForm.LabelPosition.Left"/>.
            </value>        
        </member>
        <member name="P:Syncfusion.iOS.DataForm.SfDataForm.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether editors enabled for editing. 
            </summary>       
            <value>
            The default value is false.
            </value>
            <remarks>
            <see cref="P:Syncfusion.iOS.DataForm.DataFormItem.IsReadOnly"/> takes higher priority when explicit defined. 
            Editors can be enabled or disabled for particular property by setting <see cref="P:Syncfusion.iOS.DataForm.DataFormItem.IsReadOnly"/> in <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.AutoGeneratingDataFormItem"/>.
            Editors can be enabled or disabled for particular property by setting <see cref="P:System.ComponentModel.DataAnnotations.EditableAttribute.AllowEdit"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.LayoutSubviews">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RegisterEditor(System.Type,System.String)">
            <summary>
            Registers editor for property type.
            </summary>
            <param name="type">The type to have editor.</param>
            <param name="editor">The editor that loaded for type.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RegisterEditor(System.String,System.String)">
            <summary>
            Registers editor for property name.
            </summary>
            <param name="propertyName">The propertyName to have editor.</param>
            <param name="editor">The editor that loaded for property name.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RegisterEditor(System.String,Syncfusion.iOS.DataForm.Editors.DataFormEditorBase)">
            <summary>
            Register custom editor with editor name.
            </summary>
            <param name="editorName">The editorName to use the CustomEditor for the property.</param>
            <param name="dataFormEditor">The custom dataFormEditor to load the customized editor for property.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.Commit">
            <summary>
            Commits all property values in data form items.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.Commit(System.String)">
            <summary>
            Commits the value of the specific property.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.Validate">
            <summary>
            Validates all property values of data form items.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.Validate(System.String)">
            <summary>
            Validates the value of the specific property.
            </summary>
            <param name="propertyName">The property to be validated.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.UpdateEditor(System.String)">
            <summary>
            Updates the value of the specific property in corresponding editor.
            </summary>
            <param name="propertyName">The property to be updated.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.ExpandGroup(System.String)">
            <summary>
            Expands group by group name.
            </summary>
            <param name="groupName">The name of the group.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.CollapseGroup(System.String)">
            <summary>
            Collapse group by group name.
            </summary>
            <param name="groupName">The name of the group.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.GetGroupExpanderIcon">
            <summary>
            Gets the group expander icon.
            </summary>
            <returns>The UIImage for the group expander icon.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.GetGroupCollapseIcon">
            <summary>
            Gets the group collapse icon.
            </summary>
            <returns>The UIImage for the group collapse icon.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RefreshLayout(System.Boolean)">
            <summary>
            Loads more fields when the user wants to generate the fields that was canceled.
            </summary>
            <param name="generateAllItems">
            <b>True</b> to regenerate all the items from the committed data object. <b>false</b> only generate the field that was canceled initially.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.SetSourceItem(System.Object)">
            <summary>
            Sets data object to ItemManager.SourceItem and generates DataFormItems.
            </summary>
            <param name="source">The DataObject.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.GenerateFormItemProperties">
            <summary>
            Generates DataFormItems.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RaiseAutoGeneratingEvent(Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs)">
            <summary>
            Raises the auto generating event.
            </summary>
            <returns>The auto generating event args.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RaiseExpandingEvent(Syncfusion.iOS.DataForm.GroupItemExpandingEventArgs)">
            <summary>
            Raises the DataFormgroupItem expanding event.
            </summary>
            <returns>The expanding event args.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RaiseExpandedEvent(Syncfusion.iOS.DataForm.GroupItemExpandedEventArgs)">
            <summary>
            Raises the DataFormgroupItem expanded event.
            </summary>
            <returns>The expanded event args.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RaiseCollapsingEvent(Syncfusion.iOS.DataForm.GroupItemCollapsingEventArgs)">
            <summary>
             Raises the DataFormgroupItem collapsing event.
            </summary>
            <returns>The collapsing event args.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RaiseCollapsedEvent(Syncfusion.iOS.DataForm.GroupItemCollapsedEventArgs)">
            <summary>
             Raises the DataFormgroupItem collapsed event.
            </summary>
            <returns>The collapsed event args.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RaiseDataFormItemValidatingEvent(Syncfusion.iOS.DataForm.ValidatingEventArgs)">
            <summary>
            Raises the DataFormItemValidating event.
            </summary>
            <returns>The DataFormItemValidating args.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.RaiseDataFormItemValidatedEvent(Syncfusion.iOS.DataForm.ValidatedEventArgs)">
            <summary>
            Raises the DataFormItemValidated event.
            </summary>
            <returns>The DataFormItemValidated args.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/> class.
            </summary>
            <param name="disposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.OnDataObjectChanged(System.Object,System.Object)">
            <summary>
            Callback for DataObject property
            </summary>
            <param name="oldValue">The oldValue of the property before the change.</param>
            <param name="newValue">the newValue of the property after the change</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.Setup">
            <summary>
            Setup the SfDataForm initialization.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataForm.FormLoaded">
            <summary>
            Initialize the DataForm's item manager, layout manager.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormGroupItemView">
            <summary>
            Represent a layout that displays group of the <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            Group consists of expander and label. Expander denotes the expand collapse status of group in View.
            Label display group name in View.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItemView.DataFormGroupItem">
            <summary>
            Gets the <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/> associated with this layout.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItemView.IsExpanded">
            <summary>
            Gets a value that indicates whether the group is expanded. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItemView.TapGesture">
            <summary>
            Gesture to handle the tap event.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItemView.GroupIcon">
            <summary>
            Gets or sets the group icon to show the expander in left.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItemView.GroupHeader">
            <summary>
            Gets or sets the group icon to show GroupName in the DataFormGroupItemView.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormGroupItemView.HandleTapGesture(UIKit.UITapGestureRecognizer)">
            <summary>
            Handles tapGesture to expand and collapse the DataFormGroupItemView and its DataFormItems.
            </summary>
            <param name="gesture">The tapGesture.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormGroupItemView.OnIsExpandedChanged">
            <summary>
            IsExpanded call back to change the expander icon.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormGroupItemView.SetIsExpanded(System.Boolean)">
            <summary>
            Sets IsExpanded flag to change the expander.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormGroupItemView.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItemView"/> class.
            </summary>
            <param name="isDisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormGroupItemView.SetupGestures">
            <summary>
            Sets the TapGestureRecognizer to taGesture.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormItemView">
            <summary>
            Represents a layout that displays editor for data field of the <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            DataFormItemView consists of label shows the caption of data field,
            editor for editing the data field value, label for showing validation error message. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemView.Editor">
            <summary>
            Gets the <see cref="T:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase"/> that creates, updates the editor and also handles editing of data field associated with <see cref="T:Syncfusion.iOS.DataForm.DataFormItemView"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemView.DataFormItem">
            <summary>
            Gets <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/> associated with this layout.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemView.EditorView">
            <summary>
            Gets the editor loaded for data field.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemView.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemView"/> class.
            </summary>
            <param name="isDisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormLayoutManager">
            <summary>
            Represent a class to creates <see cref="T:Syncfusion.iOS.DataForm.DataFormItemView"/>  and <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItemView"/> its sub views for <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.#ctor(Syncfusion.iOS.DataForm.SfDataForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.DataFormLayoutManager"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormLayoutManager.DataForm">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>        
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormLayoutManager"/> class.
            </summary> 
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.MoveToNextFocusableEditor(Syncfusion.iOS.DataForm.DataFormItem)">
            <returns>Return true to close the soft key board. False to remain key board and move to next editor.</returns>        
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetChildrenSpacing">
            <summary>
            Change Label Height Whether the LabelPosition is Top
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.MoveNextFocusableEditor(Syncfusion.iOS.DataForm.DataFormItem)">
            <returns>Return true to close the soft key board. False to remain key board and move to next editor.</returns>        
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.CreateItemView(System.Int32,System.Int32)">
            <summary>
            Generates DataFormItem or DataFormGroupItem.
            </summary>
            <param name="rowIndex">The rowIndex of view.</param>
            <param name="columnIndex">The columnIndex of view.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GenerateViewForEditor(Syncfusion.iOS.DataForm.Editors.DataFormEditorBase,Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Generates editor to edit the data object.
            </summary>
            <param name="editor">The editor class that handle the editor operation.</param>
            <param name="dataFormItem">The DataFormItem to get the property information.</param>
            <returns>
            Returns UIView.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetItemViewSpacing">
            <summary>
            Gets a value that indicates the spacing between the DataFormItemView.
            </summary>        
            <returns>Returns the space.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.LayoutLabel(Syncfusion.iOS.DataForm.DataFormItemView,CoreGraphics.CGRect)">
            <param name="frame"></param>            
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.LayoutValidationLabel(Syncfusion.iOS.DataForm.DataFormItemView,CoreGraphics.CGRect)">
            <param name="frame"></param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.LayoutEditor(Syncfusion.iOS.DataForm.DataFormItemView,CoreGraphics.CGRect)">
            <param name="frame"></param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.CreateNativeDataFormItemView(System.Int32,System.Int32)">
            <summary>
            Creates the DataFormItemView and populates its sub view for specified index.
            </summary>
            <param name="rowIndex">The rowIndex to create the DataFormItemView</param>
            <param name="columnIndex">The columnIndex to create the DataFormItemView.</param>
            <returns>Returns the created DataFormItemView</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.CreateNativeDataFormGroupItemView(System.Int32,System.Int32)">
            <summary>
            Creates DataFormGroupItemView and populates its sub view for specified index.
            </summary>
            <param name="rowIndex">The rowIndex to create the DataFormGroupItemView.</param>
            <param name="columnIndex">The columnIndex to create the DataFormGroupItemView.</param>
            <returns>Returns DataFormGroupItenView.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GenerateViewForNativeLabel(Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Generates label to show the label text. 
            </summary>
            <param name="dataFormItem">The DataFormItem to get label properties.</param>
            <returns>
            Returns UILabel.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GenerateNativeViewForGroupHeader(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Generates label to show the GroupHeader.
            </summary>
            <param name="dataFormGroupItem">The DataFormGroupItem to get the group information.</param>
            <returns>Returns UILabel.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.CreateDataFormItemView(System.Int32,System.Int32)">
            <summary>
            Creates the DataFormItemView and populates its sub view for specified index.
            </summary>
            <param name="rowIndex">The rowIndex to create the DataFormItemView</param>
            <param name="columnIndex">The columnIndex to create the DataFormItemView.</param>
            <returns>Returns the created DataFormItemView</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.CreateDataFormGroupItemView(System.Int32,System.Int32)">
            <summary>
            Creates DataFormGroupItemView and populates its sub view for specified index.
            </summary>
            <param name="rowIndex">The rowIndex to create the DataFormGroupItemView.</param>
            <param name="columnIndex">The columnIndex to create the DataFormGroupItemView.</param>
            <returns>Returns DataFormGroupItenView.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetGroupExpanderIcon(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Gets group expander icon for group.
            </summary>
            <param name="dataFormGroupItem">The DataFormGroupItem.</param>
            <returns>Returns ExpanderIcon</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetGroupCollapseIcon(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Gets group collapse icon for group.
            </summary>
            <param name="dataFormGroupItem">The DataFormGroupItem.</param>
            <returns>Returns CollapseIcon</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetLeftPaddingForLabel(Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Gets left start offset for label.
            </summary>
            <param name="dataFormItem"></param>
            <returns>Returns left padding value for label.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetLeftPaddingForGroupIcon(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Gets left start offset for group icon.
            </summary>
            <param name="dataFormGroupItem"></param>
            <returns>Returns Left padding for group icon.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetLeftPaddingForGroupHeader(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Gets left start offset for group header.
            </summary>
            <param name="dataFormGroupItem"></param>
            <returns>Returns left padding for group header.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetLeftPaddingForEditor(Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Gets left start offset for editor.
            </summary>
            <param name="dataFormItem"></param>
            <returns>Returns left padding for editor.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetLabelWidth(Syncfusion.iOS.DataForm.DataFormItem,System.nfloat)">
            <summary>
            Gets label width based on available width.
            </summary>
            <param name="dataFormItem"></param>
            <param name="availableWidth"></param>
            <returns>Returns label width.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetEditorWidth(Syncfusion.iOS.DataForm.DataFormItem,System.nfloat)">
            <summary>
            Gets editor width based on available width.
            </summary>
            <param name="dataFormItem"></param>
            <param name="availableWidth"></param>
            <returns>Returns editor width.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetLeftPaddingForValidationLabel(Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Gets start offset for validation label.
            </summary>
            <param name="dataFormItem"></param>
            <returns>Returns left padding for validation label.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GetValidationLabelWidth(Syncfusion.iOS.DataForm.DataFormItem,System.nfloat)">
            <summary>
            Gets validation label width based on available width.
            </summary>
            <param name="dataFormItem"></param>
            <param name="availableWidth"></param>
            <returns>Returns validation label width.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GenerateViewForLabel(Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Generates label to show the label text. 
            </summary>
            <param name="dataFormItem">The DataFormItem to get label properties.</param>
            <returns>
            Returns UILabel.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.OnEditorCreated(Syncfusion.iOS.DataForm.DataFormItem,UIKit.UIView)">
            <summary>
            Raises after editor has created.
            </summary>
            <param name="dataFormItem">The DataFormItem.</param>
            <param name="editor">The Editor.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GenerateViewForGroupHeader(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Generates label to show the GroupHeader.
            </summary>
            <param name="dataFormGroupItem">The DataFormGroupItem to get the group information.</param>
            <returns>Returns UILabel.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GenerateViewForGroupIcon(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Generates image to show the expander icon in DataFormGroupItemView.
            </summary>
            <returns>
            Returns UIImageView.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormLayoutManager"/> class.
            </summary>
            <param name="disposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormLayoutManager.GenerateViewForValidation(Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Generates label to show the validation message. 
            </summary>
            <returns>
            Returns UILabel.
            </returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormItemViewBase">
            <summary>
            Represents a base layout for displaying group,  label and editor of data field for <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormGroupItem">
            <summary>
            Represents the class to encapsulates the group settings and <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/> settings for group of data field's appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormGroupItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItem.ColumnCount">
            <summary>
            Gets or sets the value denotes the number of editor to be arranged per row. Be default one editor for one property arranged with label. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItem.DataFormItems">
            <summary>
            Gets or sets the value that indicates the items that are grouped under the group.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItem.IsExpanded">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/> is expanded or not.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItem.AllowExpandCollapse">
            <summary>
            Gets or sets a value that indicates whether user can expand or collapse the group.
            </summary>
            <remarks>
            <b>True</b> if user can expand or collapse .Otherwise <b>False</b>.
            </remarks>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItem.GroupName">
            <summary>
            Gets or sets the caption of group.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormGroupItem.HasExpanded">
            <summary>
            The get items count.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormGroupItem.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="!:SfDataForm.DataFormItem"/> class.
            </summary>
            <param name="isDisposing"> Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormItems">
            <summary>
            Represents a collection that maintains the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemBase"/> which encapsulates the layout and editor setting for a data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItems.Count">
            <summary>
            Returns the total count of items including groups and its inner items.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItems.Item(System.String)">
            <summary>
            Returns the <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/> associated with data field. 
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItems.Item(System.Int32,System.Int32)">
            <summary>
            Returns the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemBase"/> based on row and column index.
            </summary>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItems.Item(System.Int32)">
            <summary>
            Returns the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemBase"/> for the index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItems.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItems"/> class.
            </summary>        
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItems.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItems"/> class.
            </summary>
            <param name="isDisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormItemsEnumerator">
            <summary>
            Represents the class that process the enumerator of items. 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemsEnumerator.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper"/> class.
            </summary>     
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemsEnumerator.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper"/> class.
            </summary>
            <param name="disposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper">
            <summary>
            Represents a class to handle the traverse with Items.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper"/> class.
            </summary>     
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper.GetNext(Syncfusion.iOS.DataForm.DataFormItemBase,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the next data form item.
            </summary>
            <param name="dataFormItem">current dataFormItem.</param>
            <param name="columnCount">If current data form item is in group, its column colunt.Else,dataForm's column count.</param>
            <param name="rowIndex">row index</param>
            <param name="columnIndex">column index </param>
            <returns>item to be returned.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper.GetPrevious(Syncfusion.iOS.DataForm.DataFormItemBase,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the previous data form item.
            </summary>
            <param name="dataFormItem">current dataFormItem.</param>
            <param name="columnCount">If current data form item is in group, its column colunt.Else,dataForm's column count.</param>
            <param name="rowIndex">row index</param>
            <param name="columnIndex">column index </param>
            <returns>item to be returned.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper"/> class.
            </summary>
            <param name="disposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemsTraversalHelper.GetTotalSpan(System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Gets the total column span of the particular row until specific column index.
            </summary>
            <param name="rowIndex">row index.</param>
            <param name="columnIndex">column Index </param>
            <param name="hasItem">whether there is any item next to specified column index.</param>
            <returns>total span</returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.CommitMode">
            <summary>
            Defines the constants for <see cref="P:Syncfusion.iOS.DataForm.SfDataForm.CommitMode"/> that specifies when the value entered by user should be saved to the data object. 
            </summary>
        </member>
        <member name="F:Syncfusion.iOS.DataForm.CommitMode.LostFocus">
            <summary>
            Commits the value when the editor lost it's focus.
            </summary>
        </member>
        <member name="F:Syncfusion.iOS.DataForm.CommitMode.PropertyChanged">
            <summary>
            Commits the value immediately when the value is changed.
            </summary>
        </member>
        <member name="F:Syncfusion.iOS.DataForm.CommitMode.Explicit">
            <summary> 
            Commits the value manually by calling <see cref="M:Syncfusion.iOS.DataForm.SfDataForm.Commit"/> or <see cref="M:Syncfusion.iOS.DataForm.SfDataForm.Commit(System.String)"/> method.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.ValidationMode">
            <summary>
            Defines the constants for <see cref="P:Syncfusion.iOS.DataForm.SfDataForm.ValidationMode"/> that specifies when the user input should be validated for data object.
            </summary>
        </member>
        <member name="F:Syncfusion.iOS.DataForm.ValidationMode.LostFocus">
            <summary>
            Validates the value when editor focus changed to another editor. 
            </summary>
        </member>
        <member name="F:Syncfusion.iOS.DataForm.ValidationMode.PropertyChanged">
            <summary>
            Validates the value immediately after the property value is changed.
            </summary>
        </member>
        <member name="F:Syncfusion.iOS.DataForm.ValidationMode.Explicit">
            <summary> 
            Validation will be performed explicitly by calling <see cref="M:Syncfusion.iOS.DataForm.SfDataForm.Validate"/> or <see cref="M:Syncfusion.iOS.DataForm.SfDataForm.Validate(System.String)"/> method.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.LabelPosition">
            <summary>
            Defines the constants for <see cref="P:Syncfusion.iOS.DataForm.SfDataForm.LabelPosition"/> that specifies whether to layout the label at left or top of editor.
            </summary>
        </member>
        <member name="F:Syncfusion.iOS.DataForm.LabelPosition.Left">
            <summary>
            Layout the label at the left of editor.
            </summary>
        </member>
        <member name="F:Syncfusion.iOS.DataForm.LabelPosition.Top">
            <summary>
            Layout the label at the top of editor.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormItemBase">
            <summary>
            Represents the base class that encapsulates the layout, group and editor setting for a data fields appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemBase.IsGroup">
            <summary>
            Gets a value indicating whether the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemBase"/> is group (<see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/>) or not.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemBase.IsVisible">
            <summary>
            Gets or sets a value indicating whether to show the data field for editing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemBase.ItemManager">
            <summary>
            Gets the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemManager"/> which creates DataFormItem's for for the date fileds appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemBase.View">
            <summary>
            Gets a value that indicates the rendering item in view.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemBase.ColumnIndex">
            <summary>
            Gets or sets the column position of data field in View.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemBase.ColumnSpan">
            <summary>
            Gets or sets the value that decides the width of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemBase.RowIndex">
            <summary>
            Gets or sets the row position of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemBase.RowSpan">
            <summary>
            Gets or sets a value that decides the height of the item.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemBase.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemBase"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemBase.CanFocus">
            <summary>
            Returns the whether the editor loaded for data field allows focus when moving by keyboard Go action.
            </summary>
            <returns>Return true to set the focus to editor.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemBase.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemBase"/>.
            </summary>
            <param name="isDisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.AutoGeneratingDataFormItem"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs.#ctor(Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs"/> class.
            </summary>
            <param name="dataFormItem">
            The data form item.
            </param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs.#ctor(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs"/> class.
            </summary>
            <param name="dataFormGroupItem">
            The data form group item.
            </param>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs.DataFormGroupItem">
            <summary>
            Gets or sets the auto generated <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.AutoGeneratingDataFormItemEventArgs.DataFormItem">
            <summary>
            Gets or sets the auto generated <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.GroupItemExpandingEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.GroupItemExpanding"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.GroupItemExpandingEventArgs.#ctor(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.GroupItemExpandingEventArgs"/> class.
            </summary>
            <param name="dataFormGroupItem">
            The data form group item.
            </param>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.GroupItemExpandingEventArgs.DataFormGroupItem">
            <summary>
            Gets the expanding <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.GroupItemExpandedEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.GroupItemExpanded"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.GroupItemExpandedEventArgs.#ctor(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.GroupItemExpandedEventArgs"/> class.
            </summary>
            <param name="dataFormGroupItem">
            The data form group item.
            </param>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.GroupItemExpandedEventArgs.DataFormGroupItem">
            <summary>
            Gets the expanded <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.GroupItemCollapsingEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.GroupItemCollapsing"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.GroupItemCollapsingEventArgs.#ctor(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.GroupItemCollapsingEventArgs"/> class.
            </summary>
            <param name="dataFormGroupItem">
            The data form group item.
            </param>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.GroupItemCollapsingEventArgs.DataFormGroupItem">
            <summary>
            Gets the collapsing <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.GroupItemCollapsedEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.GroupItemCollapsed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.GroupItemCollapsedEventArgs.#ctor(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.GroupItemCollapsedEventArgs"/> class.
            </summary>
            <param name="dataFormGroupItem">
            The data form group item.
            </param>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.GroupItemCollapsedEventArgs.DataFormGroupItem">
            <summary>
            Gets the collapsed <see cref="T:Syncfusion.iOS.DataForm.DataFormGroupItem"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.ValidatingEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.Validating"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ValidatingEventArgs.ErrorMessage">
            <summary>
            Gets or sets a error message of <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/> in case of invalid data.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ValidatingEventArgs.IsValid">
            <summary>
            Gets or sets a value indicating whether the data form item is valid or not.
            </summary>
            <value><c>true</c> if is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ValidatingEventArgs.PropertyName">
            <summary>
            Gets a name of the <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/>.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ValidatingEventArgs.Value">
            <summary>
            Gets a value of data field validating.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.ValidatedEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.iOS.DataForm.SfDataForm.Validated"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ValidatedEventArgs.ErrorMessage">
            <summary>
            Gets a error message of DataFormItem in case of invalid data.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ValidatedEventArgs.IsValid">
            <summary>
            Gets a value indicating whether the data form item is valid or not.
            </summary>
            <value><c>true</c> if is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ValidatedEventArgs.PropertyName">
            <summary>
            Gets a name of the <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/>.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ValidatedEventArgs.Value">
            <summary>
            Gets a value of data field validating.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormDateEditor">
            <summary>
            Represents a class to handle the DateTime type property editor with <see cref="T:Syncfusion.iOS.DataForm.Editors.SfDatePicker"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase">
            <summary>
            Represent an class that creates editor for data field and handles commit and validation.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.#ctor(Syncfusion.iOS.DataForm.SfDataForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase"/>.
            </summary>
            <param name="dataForm"></param>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.DataForm">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>        
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.CreateEditorView">
            <summary>
            Create and return it for DataFormItemView�s sub view.
            </summary>
            <returns>
            Returns corresponding EditorView.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.InitializeView(Syncfusion.iOS.DataForm.DataFormItem,UIKit.UIView)">
            <summary>
            Initialize View with DataFormItemView.DataFormItem property info.
            </summary>
            <param name="dataFormItem">The dataFormItem is property info of Editor</param> 
            <param name="view">The UIview.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.Layout(Syncfusion.iOS.DataForm.DataFormItem,CoreGraphics.CGRect)">
            <summary>
            Layouts the editor.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.UpdateReadOnly(Syncfusion.iOS.DataForm.DataFormItem,UIKit.UIView)">
            <summary>
            Update value of ReadOnly property in editor's view.
            </summary>
            <param name="dataFormItem">The corresponding DataFormItem.</param>    
            <param name="view">the editor.</param>       
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.GetReadOnly(Syncfusion.iOS.DataForm.DataFormItemView)">
            <summary>
            Get ReadOnly value for editor's view.
            </summary>        
            <param name="view">DataFormItemView.</param>     
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.Measure(Syncfusion.iOS.DataForm.DataFormItem,System.Int32,System.Int32)">
            <summary>
            Measures the editor.
            </summary>
            <param name="dataFormItem"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.UnWireEvents(Syncfusion.iOS.DataForm.DataFormItem,UIKit.UIView)">
            <summary>
            UnWires events for DataFormItemView's editor view.
            </summary>
            <param name="view">The view to wire the events.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.UpdateValue(Syncfusion.iOS.DataForm.DataFormItem,UIKit.UIView)">
            <summary>
            Updates the value of the specific editor to the corresponding property.
            </summary>
            <param name="dataFormItem">the corresponding DataFormItem.</param>
            <param name="view">the editor.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.WireEvents(Syncfusion.iOS.DataForm.DataFormItem,UIKit.UIView)">
            <summary>
            Wires events for DataFormItemView's editor view.
            </summary>
            <param name="view">The view to wire the events.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.CommitValue(UIKit.UIView)">
            <summary>
            Commits the value of the specific editor to corresponding property of data object.
            </summary>
            <param name="view">the editor.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.ValidateValue(UIKit.UIView)">
            <summary>
            Validates the value of the editor.
            </summary>
            <param name="view">the editor.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditorBase.RequestFocus(UIKit.UIView)">
            <summary>
            Requests focus for the view.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1">
            <summary>
            Represent a class to handle the UIView specific initialization, wiring and un wiring.
            </summary>
            <typeparam name="EditorView"></typeparam>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.CommitValue(UIKit.UIView)">
            <summary>
            Commits the value of the specific editor to corresponding property in the business object.
            </summary>
            <param name="view">the editor.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.GetReadOnly(Syncfusion.iOS.DataForm.DataFormItemView)">
            <summary>
            Get ReadOnly value for editor's view.
            </summary>        
            <param name="view">DataFormItemView.</param>     
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnUpdateValue(Syncfusion.iOS.DataForm.DataFormItem,`0)">
            <summary>        
            Updates the value of the specific editor to corresponding property in the business object.
            </summary>
            <param name="view">the editor.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnUpdateSettings(Syncfusion.iOS.DataForm.DataFormItem,`0)">
            <summary>
            Updates the editor settings.
            </summary>
            <param name="dataFormItem"></param>
            <param name="view"></param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.ConvertValue(Syncfusion.iOS.DataForm.DataFormItem,System.Object)">
            <summary>
            Convert value specified by <see cref="T:Syncfusion.iOS.DataForm.ConverterAttribute"/>
            </summary>
            <param name="dataFormItem"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.ConvertBack(Syncfusion.iOS.DataForm.DataFormItem,System.Object)">
            <summary>
            Convert back to value by <see cref="T:Syncfusion.iOS.DataForm.ConverterAttribute"/>
            </summary>
            <param name="dataFormItem"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnRequestFocus(`0)">
            <summary>
            Requests focus for particular editor.
            </summary>
            <param name="view">The view to be fcoused.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnUpdateReadOnly(Syncfusion.iOS.DataForm.DataFormItem,`0)">
            <summary>
            Update value of ReadOnly property in editor's view.
            </summary>        
            <param name="dataFormItem">The corresponding DataFormItem.</param>    
            <param name="view">the editor.</param>    
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnCreateEditorView">
            <summary>
            Create and return it for DataFormItemView�s sub view.
            </summary>
            <returns>
            Returns corresponding EditorView.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnLayout(`0,CoreGraphics.CGRect)">
            <summary>
            Layouts the editor.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnInitializeView(Syncfusion.iOS.DataForm.DataFormItem,`0)">
            <summary>
            Initialize View with DataFormItemView.DataFormItem property info.
            </summary>
            <param name="dataFormItem">The dataFormItem is property info of Editor</param>   
            <param name="view">The UIview.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnWireEvents(`0)">
            <summary>
            Wires events for DataFormItemView's editor view.
            </summary>
            <param name="view">The view to wire the events.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnValidateValue(`0)">
            <summary>        
            Validates the value of the specific editor to corresponding property in the business object.
            </summary>
            <param name="view">the editor.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnCommitValue(`0)">
            <summary>        
            Commits the value of the specific editor to corresponding property in the business object.
            </summary>
            <param name="view">the editor.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormEditor`1.OnUnWireEvents(`0)">
            <summary>
            UnWires events for DataFormItemView's editor view.
            </summary>
            <param name="view">The view to unwire the events</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormMultiLineTextEditor">
            <summary>
            Represents a class to handle multiline text editor with UITextField.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormNumericEditor">
            <summary>
            Represents a class to handle the numeric type property editor with NumericTextBoxView.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormPickerEditor">
            <summary>
            Represents a class to handle list of items with SfPicker.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormSegmentedEditor">
            <summary>
            Represents a class to handle the enum type property editor with UISegmenenedControl.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.DataFormSegmentedEditor.OnUpdateReadOnly(Syncfusion.iOS.DataForm.DataFormItem,UIKit.UISegmentedControl)">
            <summary>
            Update the IsEnabled property in runtime whether to allow user to edit or not.
            </summary>
            <param name="dataFormItem">The corresponding DataFormItem</param>
            <param name="view">The UIView</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormSwitchEditor">
            <summary>
            Represents a class to handle the bool type property editor with UISwitch.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormTextEditor">
            <summary>
            Represents a class to handle the string type property editor with UITextField.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormTextEditor.UITextFieldDelegateExt">
            <summary>
            Represents a class to handle the KeyBoard return behavior.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormTimeEditor">
            <summary>
            Represents a class to handle the date time type property editor with SfTimePicker.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.DataFormNumericUpDownEditor">
            <summary>
            Represents a class to handle the numeric type property editor with SfNumericUpDownView.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.SfDatePicker">
             <summary>
             A customized view that allows date picking. ​
            </summary>
        </member>
        <member name="E:Syncfusion.iOS.DataForm.Editors.SfDatePicker.DateChanged">
            <summary>
             Occurs when date value is changed.         
             </summary>
        </member>
        <member name="E:Syncfusion.iOS.DataForm.Editors.SfDatePicker.EditingCompleted">
            <summary>
             Occurs when editing is completed.
             </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfDatePicker.MinimumDate">
            <summary>
            Gets or sets the minimum date.
            </summary>
            <value>The MinimumDate.</value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfDatePicker.Hint">
            <summary>
            Gets or sets the hint to be displayed in date picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfDatePicker.MaximumDate">
            <summary>
            Gets or sets the maximum date.
            </summary>        
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfDatePicker.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfDatePicker.Format">
            <summary>
            Gets or sets the date format.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfDatePicker.TextColor">
            <summary>
            Gets or sets the text color of the picker.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfDatePicker.LayoutSubviews">
            <summary>
             Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfDatePicker.ResignFirstResponder">
            <summary>
            Called when this UIResponder has been asked to resign its first responder status.
            </summary>
            <returns>true if the UIKit.UIResponder resigned first responder status.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfDatePicker.BecomeFirstResponder">
            <summary>
            Request the object to become the first responder.
            </summary>
            <returns>Returns true if the object accepts becoming the first responder, or false if it does not. The default is to accept.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfDatePicker.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.SfPicker">
             <summary>
             A customized view for picking an element in a list. 
            </summary>
        </member>
        <member name="E:Syncfusion.iOS.DataForm.Editors.SfPicker.EditingCompleted">
            <summary>
             Occurs when editing is completed.
             </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfPicker.TextAlignment">
            <summary>
            Gets or sets the text alignment of the picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfPicker.TextSize">
            <summary>
            Gets or sets the text size of the picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfPicker.TextColor">
            <summary>
            Gets or sets the text color of the picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfPicker.SelectedItem">
            <summary>
            Gets or sets the selected item of the picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfPicker.SelectedIndex">
            <summary>
            Gets or sets the selected index of the picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfPicker.ItemsSource">
            <summary>
            Gets or sets the ItemsSource of the picker.
            </summary>
            <value>The data source for the picker.</value>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfPicker.DisplayMemberPath">
            <summary>
            Gets or sets the display member path of the picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfPicker.ValueMemberPath">
            <summary>
            Gets or sets the value member path of the picker.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfPicker.LayoutSubviews">
            <summary>
             Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfPicker.ResignFirstResponder">
            <summary>
            Called when this UIResponder has been asked to resign its first responder status.
            </summary>
            <returns>true if the UIKit.UIResponder resigned first responder status.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfPicker.BecomeFirstResponder">
            <summary>
            Request the object to become the first responder.
            </summary>
            <returns>Returns true if the object accepts becoming the first responder, or false if it does not. The default is to accept.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfPicker.WillMoveToWindow(UIKit.UIWindow)">
             <summary>
            This method is called by the runtime when assigning a new UIKit.UIWindow to the
            UIKit.UIView's view hierarchy. This method will be called on all UIKit.UIViews
            in the hierarchy, not just the top-level UIKit.UIView.
            By default, this method does nothing. Application developers can override the
            method in order to perform additional processing.
             </summary>
             <param name="window"> Called before the window at the root of the UIKit.UIView's view hierarchy changes.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfPicker.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfPicker.RefreshItems">
            <summary>
            Items will be added and picker view will be initiated here.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Editors.SfTimePicker">
             <summary>
             A customized view that allows time picking. ​
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfTimePicker.Hour">
            <summary>
            Gets or sets the Hour.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfTimePicker.Minute">
            <summary>
            Gets or sets the Minute.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfTimePicker.Format">
            <summary>
            Gets or sets the date format.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfTimePicker.TextColor">
            <summary>
            Gets or sets the text color of the picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfTimePicker.Hint">
            <summary>
            Gets or sets the hint to be displayed in time picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.Editors.SfTimePicker.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfTimePicker.LayoutSubviews">
            <summary>
             Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfTimePicker.ResignFirstResponder">
            <summary>
            Called when this UIResponder has been asked to resign its first responder status.
            </summary>
            <returns>true if the UIKit.UIResponder resigned first responder status.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfTimePicker.BecomeFirstResponder">
            <summary>
            Request the object to become the first responder.
            </summary>
            <returns>Returns true if the object accepts becoming the first responder, or false if it does not. The default is to accept.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Editors.SfTimePicker.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.IPropertyValueConverter">
            <summary>
            Represents the interface to provide the method for converting the value.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.IPropertyValueConverter.Convert(System.Object)">
            <summary>
            Converts a value to type which is compatible for specific editor.
            </summary>
            <param name="value">the value.</param>
            <returns>converted value.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.IPropertyValueConverter.ConvertBack(System.Object)">
            <summary>
            Converts a value to underlying type.
            </summary>
            <param name="value">the value.</param>
            <returns>converted value.</returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.NullableHelperInternal">
            <summary>
            A framework independent utility class for the new Nullable type in .NET Framework 2.0
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.NullableHelperInternal.IsComplexType(System.Type)">
            <summary>
            Indicates whether the specified Type has nested properties.
            </summary>
            <param name="t">The Type to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.NullableHelperInternal.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Use this method instead of Convert.ChangeType. Makes Convert.ChangeType work with Nullable types.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.NullableHelperInternal.FixDbNUllasNull(System.Object,System.Type)">
            <summary>
            Returns null if value is DBNull and specified type is a Nullable type. Otherwise the value is returned unchanged.
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.NullableHelperInternal.GetUnderlyingType(System.Type)">
            <summary>
            Returns the underlying type of a Nullable type. For .NET 1.0 and 1.1 this method will always return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.NullableHelperInternal.TypeConverterHelper">
            <exclude/>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.ValueConvert">
            <summary>
            <see cref="T:Syncfusion.iOS.DataForm.ValueConvert"/> provides conversion routines for values
            to convert them to another type and routines for formatting values.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <overload>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </overload>
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ValueConvert.ChangeType(System.Object,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Converts value from one type to another using an optional <see cref="T:System.IFormatProvider"/>.
            </summary>
            <param name="value">The original value.</param>
            <param name="type">The target type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value.</param>
            <param name="format">Format string.</param>
            <param name="returnDbNUllIfNotValid">Indicates whether exceptions should be avoided or catched and return value should be DBNull if
            it cannot be converted to the target type.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ValueConvert.Parse(System.String,System.Type,System.IFormatProvider,System.String,System.Boolean)">
            <summary>
            Parse the given text using the resultTypes "Parse" method or using a type converter.
            </summary>
            <param name="s">The text to parse.</param>
            <param name="resultType">The requested result type.</param>
            <param name="provider">A <see cref="T:System.IFormatProvider"/> used to format or parse the value. Can be NULL.</param>
            <param name="format">A format string used in a <see cref="M:System.Object.ToString"/> call. Right now
            format is only interpreted to enable roundtripping for formatted dates.
            </param>
            <param name="returnDbNUllIfNotValid">Indicates whether DbNull should be returned if value cannot be parsed. Otherwise an exception is thrown.</param>
            <returns>The new value in the target type.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ValueConvert.IsEmpty(System.String)">
            <summary>
            Indicates whether string is null or empty.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.QueryableExtensions">
            <summary>
            Provides extension methods for Queryable source. 
            <para></para>
            <para></para>
            <para>var fonts = FontFamily.Families.AsQueryable(); </para>
            <para></para>
            <para></para>
            <para>We would normally write Expressions as, </para>
            <para></para>
            <code lang="C#">var names = new string[] {&quot;Tony&quot;, &quot;Al&quot;,
            &quot;Sean&quot;, &quot;Elia&quot;}.AsQueryable();
            names.OrderBy(n=&gt;n);</code>
            <para></para>
            <para></para>
            <para>This would sort the names based on alphabetical order. Like so, the
            Queryable extensions are a set of extension methods that define functions which
            will generate expressions based on the supplied values to the functions.</para>
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.QueryableExtensions.GetValueExpression(System.Linq.Expressions.ParameterExpression,System.String,System.Type)">
            <summary>
            Generate expression from simple and complex property
            </summary>        
            <param name="propertyName"></param>
            <param name="sourceType"></param>
            <param name="paramExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.QueryableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Iterates over a generic IEnumerable instance to a delegated function
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.QueryableExtensions.Select(System.Linq.IQueryable,System.String,System.Type)">
            <summary>
            Generates a Select query for a single property value.
            </summary>
            <param name="source"></param>
            <param name="propertyName"></param>
            <param name="sourceType">Type</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.ScrollPanel">
            <summary>
            UIView to layout the DataFormItemView.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ScrollPanel.RowHeight">
            <summary>
            Gets a value that indicates the height of the EditorPanel
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ScrollPanel.RowCount">
            <summary>
            Gets or sets the value that indicates the number of rows in a DataForm.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.ScrollPanel.LayoutManager">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.iOS.DataForm.DataFormLayoutManager"/> instance to handle the DataFormItemView collection.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.OnDataObjectChanged">
            <summary>
            Disposing and remove DataFormItemViews from ScrollViewer.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.GetTotalHeight(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the extended height of the panel.
            </summary>
            <param name="heightPixels">available height</param>
            <param name="startIndex">start index</param>
            <param name="endIndex">end Index</param>
            <returns>the extended height.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.RegisterForKeyboardNotifications">
            <summary>
            Register a keyboard notification to handle scrolling and lift the currently focused item to view.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.GetLastFocusedElement(System.Int32,System.Int32)">
            <summary>
            Gets the last focused element in particular column. 
            </summary>        
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.GetFocusedChild(UIKit.UIView)">
            <summary>
            Gets the focused child of the specific view.
            </summary>
            <param name="view">the view.</param>        
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.GenerateItems(System.Int32,System.Int32@,System.Int32)">
            <summary>
            Generates items.
            </summary>
            <param name="actualStartIndex">The start index to start creating item for Items.</param>
            <param name="actualEndIndex">The end index to end the item creation for Items.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.Indexer(System.Int32,System.Int32)">
            <summary>
            Gets the DataFormItemView for specified index.
            </summary>
            <param name="index">The index of DataFormItemView</param>
            <param name="columnIndex">The columnIndex of DataFormItemView.</param>
            <returns>Returns the DataFormItem of specified index.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.GetTotalSpan(System.Int32)">
            <summary>
            Get total span of the particular row.
            </summary>
            <param name="rowIndex">row index.</param>        
            <returns>row span.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.GetHeight(System.Int32)">
            <summary>
            Gets the height for DataFormItemView based on valdiation, row span and label height.
            </summary>
            <returns>The height.</returns>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.GetHeightForValidation(System.Collections.Generic.List{Syncfusion.iOS.DataForm.DataFormItemBase},System.Int32)">
            <summary>
            Gets height for validation label.
            </summary>
            <param name="dataFormItems">The lsit of data form items.</param>
            <param name="rowIndex">The row index for dataformitem</param>
            <returns>Returns height</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.ScrollPanel.GetHeightForLabel(System.Collections.Generic.List{Syncfusion.iOS.DataForm.DataFormItemBase},System.Int32)">
            <summary>
            Gets the height for label.
            </summary>
            <returns>The height for label.</returns>
            <param name="dataFormItems">Data form items.</param>
            <param name="rowIndex">Row index.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.FormUtil.IsComplexType(System.Type)">
            <summary>
            Gets the given type is complex type or not.
            </summary>
            <param name="t">The type.</param>
            <returns>
            Returns true if the type if complex.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.PropertyDescriptorExtensions.GetComplexPropertyValue(System.String[],System.ComponentModel.PropertyDescriptorCollection,System.Object)">
            <summary>
            Return the value of the given record and complex property column.
            </summary>        
        </member>
        <member name="M:Syncfusion.iOS.DataForm.PropertyDescriptorExtensions.SetComplexPropertyValue(System.String[],System.ComponentModel.PropertyDescriptorCollection,System.Object,System.Object)">
            <summary>
            Set the value to complex property column with the given record.
            </summary>        
        </member>
        <member name="M:Syncfusion.iOS.DataForm.PropertyDescriptorExtensions.GetPropertyDescriptor(System.ComponentModel.PropertyDescriptorCollection,System.String)">
            <summary>
            Generate the Property Descriptor for corresponding Property it may be simple or complex property
            </summary>
            <param name="pdc"></param>
            <param name="columnName"></param>
            <param name="columnType"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormItem">
            <summary>
            Represents the class that encapsulates the layout and editor setting for a data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            DataForm layouts caption labels, editors and validation error message based on the property settings of this class.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.Editor">
            <summary>
            Gets or sets the editor names which denotes the renderer associated with editor.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.GroupName">
            <summary>
            Gets or sets the group name of data field that is used to group properties in View.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.ImageSource">
            <summary>
            Gets or sets the image to show in place of label.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.IsReadOnly">
            <summary>
            Gets or sets the value that indicates whether to allow user to edit or not.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.LabelText">
            <summary>
            Gets or sets the data field caption for the editor in View. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.Name">
            <summary>
            Gets or sets the name of the property.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.Order">
            <summary>
            Gets or sets the order of the editor in a view. Based on this value data fields will be arrange on order by <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.PlaceHolderText">
            <summary>
            Gets or sets the water mark for the editor to provide hint for users.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.PropertyInfo">
            <summary>
            Gets or the meta data of property.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.ShowLabel">
            <summary>
            Gets or sets a value that indicates whether to show label or not.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.IsDirty">
            <summary>
            Helps to recalculate the validation label height when needed.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.ValidationLabelHeight">
            <summary>
            Holds height of validation label.
            </summary>
            <remarks>
            Has measured text size in case invalid data this will hold height based on negative message. 
            In-case of valid data, this will hold height based on positive message if it was defined.
            </remarks>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItem.IsFocused">
            <summary>
            Gets or sets a value that indicates the focused item.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItem.UpdateViewForValidation">
            <summary>
            Updates the validation label text with positive or negative value based on the validation.
            </summary>
            <param name="dataFormItem">The datFormItem to update the validation label text.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItem.HasMessage">
            <summary>
            Checks there is a positive message with dataFormItem.
            </summary>
            <param name="dataFormItem">The dataFormItem to get the positive message.</param>
            <returns>Returns true when the label has the same text as positive message.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItem.CanFocus">
            <summary>
            Returns the whether the editor loaded for data field allows focus.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItem.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.iOS.DataForm.DataFormItem"/> class.
            </summary>
            <param name="isDisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormNumericItem">
            <summary>
            Represents the class that encapsulates the layout and numeric editor setting for a data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericItem.ParsingMode">
            <summary>
            Gets or sets a value that decides whether to parse the value as decimal or double.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericItem.PercentDisplayMode">
            <summary>
            Gets or sets a value which specifies how to display numeric value in percent mode.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormNumericItemBase">
            <summary>
            Represents the base class that encapsulates the layout and numeric editor setting for a data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericItemBase.AllowNull">
            <summary>
            Gets or sets a value that indicates whether null value should be allowed for data field or not.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericItemBase.EnableGroupSeparator">
            <summary>
            Gets or sets a value that indicates whether display group separator or not.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericItemBase.CultureInfo">
            <summary>
            Gets or sets the culture info for formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericItemBase.FormatString">
            <summary>
            Gets or sets the format string to format the value.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericItemBase.MaximumNumberDecimalDigits">
            <summary>
            Gets or sets the maximum number decimal digits should be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericItemBase.InputAccessoryView">
            <summary>
            Gets or sets the custom keyboard view to display when the editor becomes the first responder.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormDateItem">
            <summary>
            Represents the class that encapsulates the layout and date picker editor settings for a data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormDateItem.Format">
            <summary>
            Gets or sets the date format.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormDateItem.MaximumDate">
            <summary>
            Gets or sets the maximum allowable date.
            </summary> 
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormDateItem.MinimumDate">
            <summary>
            Gets or sets the minimum allowable date.
            </summary>        
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormTimeItem">
            <summary>
            Represents the class that encapsulates the layout and time picker editor setting for type data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormTimeItem.Format">
            <summary>
            Gets or sets the time format used in time picker.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormPickerItem">
            <summary>
            Represents the class that encapsulates the layout and picker editor settigs for data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormPickerItem.DisplayMemberPath">
            <summary>
            Gets or sets a path to a value on the source object that will get displayed in picker.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormPickerItem.ItemsSource">
            <summary>
            Gets or sets the collection which will get displayed in drop-down of picker where user can select from available items.
            </summary>      
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormPickerItem.ValueMemberPath">
            <summary>
            Gets or sets a path to a value on the source object which will get saved to data field.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormNumericUpDownItem">
            <summary>
            Represents the class that encapsulates the layout and numeric updown editor setting for data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericUpDownItem.AutoReverse">
            <summary>
            Gets or sets the value which indicates autoReverse should be enabled in numeric up down.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericUpDownItem.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericUpDownItem.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericUpDownItem.SpinButtonAlignment">
            <summary>
            Gets or sets the Spin Button Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericUpDownItem.PercentDisplayMode">
            <summary>
            Gets or sets a value which specifies how to display numeric data in percent mode.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericUpDownItem.ParsingMode">
            <summary>
            Gets or sets a value that decides whether the user can parse decimal or double value.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormNumericUpDownItem.StepValue">
            <summary>
            Gets or sets the Step Value.
            </summary>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormTextItem">
            <summary>
            Represents the class that encapsulates the layout and text editor setting for a data field appearing in <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/>. 
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormTextItem.KeyBoardType">
            <summary>
            Gets or sets the type of keyboard to display for the text editor.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormTextItem.InputAccessoryView">
            <summary>
            Gets or sets the custom view to display when the editor becomes the first responder.
            </summary>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormTextItem.AutocapitalizationType">
            <summary>
            Gets or sets the property which decides at what time the shift key should be automatically pressed, thereby making the typed character as a capital letter.
            </summary>
            <seealso cref="T:UIKit.UITextAutocapitalizationType"/>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormTextItem.SpellCheckingType">
            <summary>
            Gets or sets the spell-checking behavior of the editor.
            </summary>
            <seealso cref="T:UIKit.UITextSpellCheckingType"/>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormTextItem.AutocorrectionType">
            <summary>
            Gets or sets the auto correction behavior of the editor.
            </summary>
            <seealso cref="T:UIKit.UITextAutocorrectionType"/>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.DataFormItemManager">
            <summary>
            Represents a class that creates DataFormItems collection and item properties
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.#ctor(Syncfusion.iOS.DataForm.SfDataForm)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.iOS.DataForm.DataFormItemManager"/> class.
            </summary>
            <param name="dataForm">
            The data form.
            </param>
        </member>
        <member name="P:Syncfusion.iOS.DataForm.DataFormItemManager.DataFormItems">
            <summary>
            Gets or sets the list contains the underlying properties as DataFormItems.
            </summary>     
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.Dispose">
            <summary>
            Disposes all the resources used by the <see cref="P:Syncfusion.iOS.DataForm.SfDataForm.ItemManager"/> class.
            </summary>        
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GetValue(Syncfusion.iOS.DataForm.DataFormItem)">
            <summary>
            Gets a value for property.
            </summary>
            <param name="dataFormItem">The DataFormItem to get a value.</param>
            <returns>
            Returns value.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.SetValue(Syncfusion.iOS.DataForm.DataFormItem,System.Object)">
            <summary>
            Sets a value to property.
            </summary>
            <param name="dataFormItem">The DataFormItem to get a value.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GetEditor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets editor name for DataFormItem to get DataFormEditor for DataFormItemView.
            </summary>
            <param name="propertyInfo">The descriptor of property.</param>
            <returns>
            Returns editor name to get DataFormEditor for DataFormItemView.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.ValidateDataFormItemOnINotifyDataErrorInfo(Syncfusion.iOS.DataForm.DataFormItem,System.Object,System.String)">
            <summary>
            Validates the <see cref="P:Syncfusion.iOS.DataForm.SfDataForm.DataObject"/> when it implements <see cref="T:System.ComponentModel.INotifyDataErrorInfo"/>
            </summary>
            <param name="dataFormItem">The DataFormItem to be validated.</param>
            <param name="dataObject">The data object to validate. </param>
            <param name="propertyName">The PropertyName.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.ValidateDataFormItemOnIDataErrorInfo(Syncfusion.iOS.DataForm.DataFormItem,System.Object,System.String)">
            <summary>
            Validates the <see cref="P:Syncfusion.iOS.DataForm.SfDataForm.DataObject"/> when it implements <see cref="T:System.ComponentModel.IDataErrorInfo"/>
            </summary>
            <param name="dataFormItem">The DataFormItem.</param>
            <param name="dataObject">The data object.</param>
            <param name="propertyName">The property name.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.ValidateDataFormItem(Syncfusion.iOS.DataForm.DataFormItem,System.Object,System.Boolean)">
            <summary>
            Validates the data form item.
            </summary>
            <returns><c>true</c>, if data form item was validated, <c>false</c> otherwise.</returns>
            <param name="dataFormItem">Data form item.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GetNextFocusedElement(System.Int32,System.Int32)">
            <summary>
            Gets the next focusable element to set the focus when press next key.
            </summary>
            <param name="rowIdnex">The rowIndex of current item.</param>        
            <returns></returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.SetItemProperties(System.Object)">
            <summary>
            Sets ItemProperties from specified dataSource.
            </summary>
            <param name="sourceItem">The bound dataSource.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GetItemProperties">
            <summary>
            Returns the default System.ComponentModel.PropertyDescriptorCollection.
            </summary>
            <returns>A collection of property descriptor.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.SetSourceItem(System.Object)">
            <summary>
            The set source item.
            </summary>
            <param name="dataObject">
            The data object.
            </param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GenerateDataFormItems">
            <summary>
            Generates DataFormItems from PropertyInfoCollection.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GetPickerSource(System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            The get picker source.
            </summary>
            <param name="propertyInfo">
            The property info.
            </param>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:System.Collections.IList"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.RegisterPropertyEditor(System.String,System.String)">
            <summary>
            Adds editor for property in editorPropertyRegistry.
            </summary>
            <param name="propertyName">The propertyName to have editor.</param>
            <param name="editor">The editor that loaded for property name.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.RegisterTypeEditor(System.Type,System.String)">
            <summary>
            Adds editor for property in editorTypeRegistry.
            </summary>
            <param name="type">The type to have editor.</param>
            <param name="editor">The editor that loaded for type.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.ExpandGroup(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Expands specified DataFormGroupItem by increasing RowIndex with its count.
            </summary>
            <param name="dataFormGroupItem">The dataFormGroupItem.</param>
            <returns>
            Returns true to expand in UI.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.CollapseGroup(Syncfusion.iOS.DataForm.DataFormGroupItem)">
            <summary>
            Collapse specified DataFormGroupItem by decreasing RowIndex its count.
            </summary>
            <param name="dataFormGroupItem">The dataFormGroupItem.</param>
            <returns>
            Returns true to collapse in UI.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GenerateDataFormItems(System.ComponentModel.PropertyDescriptorCollection,System.Collections.Generic.List{Syncfusion.iOS.DataForm.DataFormItemBase})">
            <summary>
             Generates DataFormItems from PropertyInfoCollection.
            </summary>
            <param name="itemProperties">the item properties.</param>
            <param name="dataFormItems">list of data form items.</param>
            <returns>list of generated data form items</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="P:Syncfusion.iOS.DataForm.SfDataForm.ItemManager"/> class.
            </summary>
            <param name="isDisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GenerateDataFormLayoutItems">
            <summary>
            Generates DataFormLayoutItems from DataFormItems.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GenerateDataFormItems(System.ComponentModel.PropertyDescriptorCollection,System.Collections.Generic.List{Syncfusion.iOS.DataForm.DataFormItemBase},System.String)">
            <summary>
            Generates DataFormItems from property info collection.
            </summary>
            <param name="propertyCollection">The DataFormItemProeprties from propertyInfoCollection.</param>
            <param name="dataFormItems">The list of DataFormItem.</param>
            <param name="parentPropertyName">The complex property class name.</param>
            <returns>Returns DataFormItems.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GenerateDataFormItemswithComplexProperties(System.ComponentModel.PropertyDescriptor,System.Collections.Generic.List{Syncfusion.iOS.DataForm.DataFormItemBase},System.String)">
            <summary>
            Generates DataFormItems from property info collection.
            </summary>
            <param name="propertyinfo">The propertyInfo to generate the complex properties DataFormItems</param>
            <param name="dataFormItems">The list of DataFormItem.</param>
            <param name="parentpropertyname">The complex property class name.</param>
            <returns>Returns DataFormItems.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.CreateDataFormItem(System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Creates DataFormItem from property descriptor.
            </summary>
            <param name="propertyInfo">
            The property descriptor.
            </param>
            <param name="name">
            The name.
            </param>
            <returns>
            Returns DataFormItem.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.GetDataFormGroupItem(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,Syncfusion.iOS.DataForm.DataFormItemBase}},System.Collections.Generic.List{Syncfusion.iOS.DataForm.DataFormItemBase},System.String)">
            <summary>
            Gets the DataFormGroupItem if already exist with the groupName or creates the new DataFormGroupItem with the same.
            </summary>
            <param name="groupName">The groupName to get or create DataFormGroupitme.</param>
            <returns>Returns DataFormrGoupItem.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.CreateDataFormGroupItem(System.String)">
            <summary>
            Creates DataFormGroupItem with specified groupName.
            </summary>
            <param name="groupName">The groupName to create DataFormGroupItem.</param>
            <returns>
            Returns DataFormGroupItem.
            </returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.DataFormItemManager.UpdatesLayout(Syncfusion.iOS.DataForm.DataFormItem,System.Boolean)">
            <summary>
            Updates the layout.
            </summary>
            <param name="dataFormItem"></param>
            <param name="isValid"></param>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.SfDataFormHelpers">
            <summary>
            Represents an extension class that provides helper methods for <see cref="T:Syncfusion.iOS.DataForm.SfDataForm"/> control.
            </summary>	    
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataFormHelpers.CalculateHeight(Syncfusion.iOS.DataForm.SfDataForm,Syncfusion.iOS.DataForm.DataFormItem,CoreGraphics.CGRect)">
            <returns>Returns the calculated height.</returns>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SfDataFormHelpers.GetItems(System.Collections.Generic.IList{Syncfusion.iOS.DataForm.DataFormItemBase},System.Int32)">
            <summary>
            Gets the list of items from DataFormItems list with specified rowIndex.
            </summary>
            <param name="dataFormItems">DataFormItems list</param>
            <param name="rowIndex">row index.</param>
            <returns>list of items matches rowIndex</returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.Imagehelper">
            <summary>
            Represents a class to handle image source
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.Imagehelper.ToUIImage(System.Byte[])">
            <summary>
            Converts byte memory stream to image.
            </summary>
            <param name="image">The memory stream</param>
            <returns>Returns image.</returns>
        </member>
        <member name="T:Syncfusion.iOS.DataForm.SourceProvider">
            <summary>
            Represents the class to provide override method to get the source for picker type properties.
            </summary>
        </member>
        <member name="M:Syncfusion.iOS.DataForm.SourceProvider.GetSource(System.String)">
            <summary>
            Get the source list for picket editor based on data field name.
            </summary>
            <param name="sourceName">The data field name to get the list.</param>
            <returns>
            Returns the source list based on specified data field name.
            </returns>
        </member>
    </members>
</doc>
