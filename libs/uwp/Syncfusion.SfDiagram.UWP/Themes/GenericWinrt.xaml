<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Syncfusion.UI.Xaml.Diagram"
    xmlns:localControls="using:Syncfusion.UI.Xaml.Diagram.Controls"
    xmlns:panels="using:Syncfusion.UI.Xaml.Diagram.Panels"
    xmlns:util="using:Syncfusion.UI.Xaml.Diagram.Utility"
    xmlns:printing="using:Syncfusion.UI.Xaml.Diagram.Controls"
    xmlns:stencil="using:Syncfusion.UI.Xaml.Diagram.Stencil">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="ms-appx:///Syncfusion.SfDiagram.UWP/Themes/WinRTResource.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <util:PathConverter x:Key="PathConverter"/>
  <util:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
    <util:NullToVisibityConverter x:Key="NullToVisibityConverter"/>
    <util:VisibilityToBoolConverter x:Key="VisibilityToBoolConverter"/>
   
    <!--<Stencil>-->
    <SolidColorBrush x:Key="SymbolFilterBackgroundBrush" Color="#ffffff" />
    <SolidColorBrush x:Key="SymbolFilterBorderBrush" Color="LightGray" />
    <SolidColorBrush x:Key="SymbolFilterTextblockForegroundBrush" Color="Black" />

    <!--<Stencil:Symbol>-->
    <SolidColorBrush x:Key="SymbolBorderBrush" Color="#FF7F7F7F" />
    <SolidColorBrush x:Key="SymbolBackgroundBrush" Color="#FFDDDDDD" />
    <!--<RuntimeConnectionIndicator>-->
    <SolidColorBrush x:Key="ConnectionIndicatorFillBrush" Color="#FF09388C" />

    <Style TargetType="local:Node">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      <Setter Property="Template">
        <Setter.Value>
                <ControlTemplate TargetType="local:Node">
                    <Border Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}">
              <Grid>
                            <Path x:Name="Path" Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Shape, Converter={StaticResource PathConverter}}"
      RenderTransformOrigin="0.5,0.5"
      Style="{TemplateBinding ShapeStyle}"/>
                            <ContentPresenter Content="{TemplateBinding Content}" x:Name="ContentPresenter" RenderTransformOrigin="0.5,0.5"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <panels:AnnotationPanel x:Name="PART_Annotations"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="local:PortBase" >
        <Setter Property="ShapeStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
                    <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
                    <Setter Property="Width" Value="{StaticResource PortThemeWidth}"/>
                    <Setter Property="Height" Value="{StaticResource PortThemeHeight}"/>
                </Style>
            </Setter.Value>
        </Setter>
      <Setter Property="Template">
        <Setter.Value>
                <ControlTemplate TargetType="local:PortBase">
                    <Border x:Name="port"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
              <Grid>
                            <Path Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Shape, Converter={StaticResource PathConverter}}"
        Style="{TemplateBinding ShapeStyle}"/>
                            <ContentPresenter Content="{TemplateBinding Content}"
HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <!--ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>-->
                            <!--<Rectangle Fill="LightSeaGreen" Stretch="Fill"></Rectangle>-->
              </Grid>
              <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="State">
                                <VisualState x:Name="Collapse">
                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
             Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                                <VisualState x:Name="Visible">
                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
             Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="local:DockPort" >
        <Setter Property="ShapeStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Stroke" Value="Red"/>
                    <Setter Property="StrokeThickness" Value="2"/>

                </Style>
            </Setter.Value>
        </Setter>
      <Setter Property="Template">
        <Setter.Value>
                <ControlTemplate TargetType="local:DockPort">
                    <Border x:Name="port" IsHitTestVisible="True"
    
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
               <Grid>
                            <!--<Path Margin="15,15,15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Shape, Converter={StaticResource PathConverter}}"
        Stretch="Fill" Stroke="Blue" StrokeThickness="2" Fill="Transparent" />
                            <Path Margin="-15,-15,-15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Shape, Converter={StaticResource PathConverter}}"
        Stretch="Fill" Stroke="Yellow" StrokeThickness="2" Fill="Transparent" />-->
                            <Path x:Name="Path" Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Shape, Converter={StaticResource PathConverter}}"
        Style="{TemplateBinding ShapeStyle}" Stretch="{TemplateBinding Stretch}"/>
              </Grid>
              <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="State">
                                <VisualState x:Name="Collapse">
                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
             Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                                <VisualState x:Name="Visible">
                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
             Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
            </Border>

          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="local:DynamicPort">
        <Setter Property="ShapeStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
                    <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
                    <Setter Property="Width" Value="{StaticResource PortThemeWidth}"/>
                    <Setter Property="Height" Value="{StaticResource PortThemeHeight}"/>
                </Style>
            </Setter.Value>
        </Setter>
    <Setter Property="Template">
      <Setter.Value>
                <ControlTemplate TargetType="local:DynamicPort">
                    <Border x:Name="port"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                            <Path Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Shape, Converter={StaticResource PathConverter}}"
        Style="{TemplateBinding ShapeStyle}"/>
                            <ContentPresenter Content="{TemplateBinding Content}"
HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <!--ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>-->
                            <!--<Rectangle Fill="LightSeaGreen" Stretch="Fill"></Rectangle>-->
            </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="State">
                                <VisualState x:Name="Collapse">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
             Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
             Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    <Style TargetType="local:NodePort">
        <Setter Property="ShapeStyle">
      <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
                    <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
                    <Setter Property="Width" Value="{StaticResource PortThemeWidth}"/>
                    <Setter Property="Height" Value="{StaticResource PortThemeHeight}"/>
                </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
                <ControlTemplate TargetType="local:NodePort">
                    <Border x:Name="port"
    Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                            <Path Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Shape, Converter={StaticResource PathConverter}}"
      Style="{TemplateBinding ShapeStyle}"/>
                            <ContentPresenter Content="{TemplateBinding Content}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <!--ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>-->
                            <!--<Rectangle Fill="LightSeaGreen" Stretch="Fill"></Rectangle>-->
            </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="State">
                                <VisualState x:Name="Collapse">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
             Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
             Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  

    <Style TargetType="local:ConnectorPort">
    <Setter Property="ShapeStyle">
      <Setter.Value>
        <Style TargetType="Path">
          <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
          <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
          <Setter Property="Width" Value="{StaticResource PortThemeWidth}"/>
          <Setter Property="Height" Value="{StaticResource PortThemeHeight}"/>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
                <ControlTemplate TargetType="local:ConnectorPort">
                    <Border x:Name="port"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Path Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Shape, Converter={StaticResource PathConverter}}"
        Style="{TemplateBinding ShapeStyle}"/>
              <ContentPresenter Content="{TemplateBinding Content}"
HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
ContentTemplate="{TemplateBinding ContentTemplate}"/>
              <!--ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>-->
              <!--<Rectangle Fill="LightSeaGreen" Stretch="Fill"></Rectangle>-->
            </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="State">
                                <VisualState x:Name="Collapse">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
                                 Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="port"
                                 Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:Connector">
    <Setter Property="ConnectorGeometryStyle">
      <Setter.Value>
        <Style TargetType="Path">
          <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
          <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="SourceDecoratorStyle">
      <Setter.Value>
        <Style TargetType="Path">
          <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
          <Setter Property="Fill" Value="{StaticResource PathStrokeThemeBrush}"/>
          <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
          <Setter Property="Width" Value="{StaticResource ConnectorDecoratorThemeWidth}"/>
          <Setter Property="Height" Value="{StaticResource ConnectorDecoratorThemeHeight}"/>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="TargetDecoratorStyle">
      <Setter.Value>
        <Style TargetType="Path">
          <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
          <Setter Property="Fill" Value="{StaticResource PathStrokeThemeBrush}"/>
          <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
          <Setter Property="Width" Value="{StaticResource ConnectorDecoratorThemeWidth}"/>
          <Setter Property="Height" Value="{StaticResource ConnectorDecoratorThemeHeight}"/>
        </Style>
      </Setter.Value>
    </Setter>
        <Setter Property="SegmentDecoratorStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
                    <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
                    <Setter Property="Width" Value="{StaticResource ConnectorDecoratorThemeWidth}"/>
                    <Setter Property="Height" Value="{StaticResource ConnectorDecoratorThemeHeight}"/>
                </Style>
            </Setter.Value>
        </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Connector">
          <Border
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
            <Canvas>
              <Path Style="{TemplateBinding ConnectorGeometryStyle}"
      Data="{TemplateBinding Geometry}"/>
                            <Path StrokeThickness="{TemplateBinding HitPadding}" StrokeLineJoin="Bevel" Stroke="Transparent"
      Data="{TemplateBinding TransparentGeometry}"/>
              <Path x:Name="PART_SourceDecorator" Style="{TemplateBinding SourceDecoratorStyle}"
      Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SourceDecorator, Converter={StaticResource PathConverter}}"/>
              <Path x:Name="PART_TargetDecorator" Style="{TemplateBinding TargetDecoratorStyle}"
      Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TargetDecorator, Converter={StaticResource PathConverter}}"/>
                            <Canvas x:Name="PART_SegmentDecorators">

                            </Canvas>
              <panels:AnnotationPanel x:Name="PART_Annotations">
              </panels:AnnotationPanel>
            </Canvas>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:Group">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Group">
          <Border
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Canvas x:Name="PART_Ports">
              </Canvas>
              <panels:AnnotationPanel x:Name="PART_Annotations">
              </panels:AnnotationPanel>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="stencil:Stencil">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="stencil:Stencil">
          <Border
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
              </Grid.RowDefinitions>
              <Border>
                 <ComboBox Padding="10" IsEnabled="{Binding Path=SymbolFilters, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource NullToBooleanConverter}}"
                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource NullToVisibityConverter}}"
                          Background="{StaticResource SymbolFilterBackgroundBrush}" BorderBrush="{StaticResource SymbolFilterBorderBrush}" BorderThickness="{StaticResource SymbolFilterBorderThickness}"
          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
          ItemsSource="{TemplateBinding SymbolFilters}"
          SelectedItem="{Binding Path=SelectedFilter, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="{StaticResource SymbolFilterTextblockForegroundBrush}" Text="{Binding Content}" />
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
              </Border>
              <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <stencil:SymbolGroup ItemsSource="{TemplateBinding SymbolGroup}">
                  <stencil:SymbolGroup.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel/>
                    </ItemsPanelTemplate>
                  </stencil:SymbolGroup.ItemsPanel>
                  <stencil:SymbolGroup.HeaderTemplate>
                    <DataTemplate/>
                  </stencil:SymbolGroup.HeaderTemplate>
                  <stencil:SymbolGroup.Template>
                    <ControlTemplate TargetType="stencil:SymbolGroup">
                      <Border
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                      </Border>
                    </ControlTemplate>
                  </stencil:SymbolGroup.Template>
                </stencil:SymbolGroup>
              </ScrollViewer>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="stencil:Symbol">
   <Setter Property="BorderThickness" Value="{StaticResource SymbolBorderThickness}"/>
    <Setter Property="BorderBrush" Value="{StaticResource SymbolBorderBrush}"/>
    <Setter Property="Background" Value="{StaticResource SymbolBackgroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="stencil:Symbol">
          <Grid Background="Transparent">
            <Border x:Name="symbolborder"
  Padding="{TemplateBinding Padding}"
  Background="{TemplateBinding Background}"
  BorderBrush="{TemplateBinding BorderBrush}"
  BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter Content="{TemplateBinding Content}"
  ContentTemplate="{TemplateBinding ContentTemplate}"/>
            </Border>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="symbolborder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SymbolPressedBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <Style TargetType="localControls:AnnotationEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="localControls:AnnotationEditor">
                    <Border
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <ContentPresenter x:Name="PART_ContentPresenter" Content="{Binding}" RenderTransformOrigin="{TemplateBinding RenderTransformOrigin}">
                                <ContentPresenter.RenderTransform>
                                    <RotateTransform Angle="{Binding Path=InternalRotateAngle, 
                                                  RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="localControls:Ruler">
    <Setter Property="Foreground" Value="{StaticResource RulerForegroundThemeBrush}"/>
    <Setter Property="Background" Value="{StaticResource RulerBackgroundThemeBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="localControls:Ruler">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        Background="{TemplateBinding Background}">
            <Canvas x:Name="Part_RulerPanel">
            </Canvas>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="localControls:RulerSegment">
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="localControls:RulerSegment">
          <Canvas x:Name="Part_RulerSegmentPanel">
            <Canvas.Resources>
              <localControls:LabelConverter x:Key="LabelConverter"/>
            </Canvas.Resources>
            <TextBlock x:Name="PART_Label" Padding="0"
           Text="{Binding Path=StartValue, 
                                                  RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                                  Converter={StaticResource LabelConverter}}"/>
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="localControls:RunTimeConnectionIndicator">
    <Setter Property="Width" Value="100"></Setter>
    <Setter Property="Height" Value="100"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="localControls:RunTimeConnectionIndicator">
          <Grid>
            <Path x:Name="path0" Data="F1M311.832,302.7778L278.832,302.7778L278.832,316.4448L311.832,316.4448L311.832,349.4448L325.498,349.4448L325.498,316.4448L325.498,302.7778z"
                  Fill="{StaticResource ConnectionIndicatorFillBrush}" Height="30" Stretch="Fill" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="30" RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <TranslateTransform/>
              </Path.RenderTransform>
            </Path>
            <Path x:Name="path1" Data="F1M386.502,302.7778L353.502,302.7778L339.836,302.7778L339.836,316.4448L339.836,349.4448L353.502,349.4448L353.502,316.4448L386.502,316.4448z"
                  Fill="{StaticResource ConnectionIndicatorFillBrush}" Height="30" Stretch="Fill" Width="30" HorizontalAlignment="Right"  VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <TranslateTransform/>
              </Path.RenderTransform>
            </Path>
            <Path x:Name="path2" Data="F1M311.832,242.105L311.832,275.105L278.832,275.105L278.832,288.772L311.832,288.772L325.498,288.772L325.498,275.105L325.498,242.105z"
                  Fill="{StaticResource ConnectionIndicatorFillBrush}" Height="30" Stretch="Fill"  VerticalAlignment="Top" HorizontalAlignment="Left" Width="30" RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <TranslateTransform/>
              </Path.RenderTransform>
            </Path>
            <Path x:Name="path3" Data="F1M353.502,275.105L353.502,242.105L339.836,242.105L339.836,275.105L339.836,288.772L353.502,288.772L386.502,288.772L386.502,275.105z"
                  Fill="{StaticResource ConnectionIndicatorFillBrush}" Height="30" Stretch="Fill" Width="30" HorizontalAlignment="Right" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <TranslateTransform/>
              </Path.RenderTransform>
            </Path>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="connectionIndication">
                <VisualState x:Name="Connecting">
                  <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="path0">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-30"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="18"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="path0">
                      <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-19"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-21"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="path1">
                      <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-19"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-21"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="path1">
                      <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-19"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-21"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="path2">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-30"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="18"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="path2">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-30"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="18"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="path3">
                      <EasingDoubleKeyFrame KeyTime="0" Value="30"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-19"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-21"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="path3">
                      <EasingDoubleKeyFrame KeyTime="0" Value="-30"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="18"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path0">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path1">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path2">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path3">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal">
                  <Storyboard></Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    
    
</ResourceDictionary>
