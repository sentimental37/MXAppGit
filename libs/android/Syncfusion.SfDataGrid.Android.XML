<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfDataGrid.Android</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer">
            <summary>
            GridCellDateTimeRenderer is a class for cell renderer that displays <see cref="T:Android.Widget.TextView"/> in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            Upon editing it displays <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/> for editing values.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellDateTimeRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.TextView"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Android.Widget.TextView"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.OnCreateEditUIView">
            <summary>
            Creates a new view for the edit mode of cell.
            </summary>
            <returns>
            Returns the new view for edit mode of cell. 
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.OnInitializeEditView(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.Renderers.SfDatePicker)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.SetControlValue(System.Object)">
            <summary>
            Sets the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.Renderers.SfDatePicker)">
            <summary>
            Updates the style of edit view. 
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellDateTimeRenderer.InitializeEditBinding(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.Renderers.SfDatePicker)">
            <summary>
            Initialize the edit binding
            </summary>
            <param name="dataColumn">current data column</param>
            <param name="view">current view</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Renderers.NamespaceDoc">
            <summary>
            Provides classes and interface for all cell renderer that manages the creation of cells 
            view objects when the cell is scrolled into view and also unloading of the views. 
            Contains logics to place the UIElement inside cells in display and edit mode. It also contains the custom 
            views that are created for rendering in the grid.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer">
            <summary>
            GridCellNumericRenderer is a class for cell renderer that displays <see cref="T:Android.Widget.TextView"/> in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            Upon editing it displays <see cref="T:Com.Syncfusion.Numerictextbox.SfNumericTextBox"/> for editing values.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellNumericRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.OnInitializeEditView(Syncfusion.SfDataGrid.DataColumnBase,Com.Syncfusion.Numerictextbox.SfNumericTextBox)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.TextView"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Android.Widget.TextView"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.OnCreateEditUIView">
            <summary>
            Creates a new view for the edit mode of cell.
            </summary>
            <returns>
            Returns the new view for edit mode of cell. 
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.DataColumnBase,Com.Syncfusion.Numerictextbox.SfNumericTextBox)">
            <summary>
            Updates the cell style of the edit element in a grid cell.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view hosted inside a column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellNumericRenderer.SetFocus(Android.Views.View,System.Boolean)">
            <summary>
            Sets the focus for the editing view.
            </summary>
            <param name="view">Current cell renderer element</param>
            <param name="needToFocus">Returns whether focus has to be set or not. </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer">
            <summary>
            GridCellPickerRenderer is a class for cell renderer that displays <see cref="T:Android.Widget.TextView"/> in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            Upon editing it displays <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> for editing values.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellPickerRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.TextView"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Android.Widget.TextView"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.OnCreateEditUIView">
            <summary>
            Creates a new view for the edit mode of cell.
            </summary>
            <returns>
            Returns the new view for edit mode of cell. 
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.OnInitializeEditView(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.Renderers.GridPicker)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.Renderers.GridPicker)">
            <summary>
            Updates the cell style of the edit element in a grid cell.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view hosted inside a column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridCellPickerRenderer.InitializeEditBinding(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.Renderers.GridPicker)">
            <summary>
            Initialize the edit view and it's properties.
            </summary>
            <param name="dataColumn">The data column</param>
            <param name="view">current view</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Renderers.GridPicker">
             <summary>
             A customized view for picking an element in a list. 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.#ctor(Android.Content.Context)">
             <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> class.
             </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/></param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the def style.</param>
        </member>
        <member name="E:Syncfusion.SfDataGrid.Renderers.GridPicker.SelectedIndexChanged">
            <summary>
            Occurs when the selected index of the picker is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.TextAlignment">
            <summary>
            Gets or sets the text alignment of the picker.
            </summary>
            <value>The text alignment of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.TextSize">
            <summary>
            Gets or sets the text size of the picker.
            </summary>
            <value>The text size of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.TextColor">
            <summary>
            Gets or sets the text color of the picker.
            </summary>
            <value>The text color of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.SelectedItem">
            <summary>
            Gets or sets the selected item of the picker.
            </summary>
            <value>The selected item of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.SelectedIndex">
            <summary>
            Gets or sets the selected index of the picker.
            </summary>
            <value>The selected index of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.ItemsSource">
            <summary>
            Gets or sets the items source of the picker.
            </summary>
            <value>The data source for the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.DisplayMemberPath">
            <summary>
            Gets or sets the display member path of the picker.
            </summary>
            <value>The display member path of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.ValueMemberPath">
            <summary>
            Gets or sets the value member path of the picker.
            </summary>
            <value>The value member path of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.Title">
            <summary>
            Gets or sets the title of the picker.
            </summary>
            <value>The title of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.Items">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.SfDataGrid.DataRow"/> objects in a <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> control.
            </summary>
            <value>The collection of <see cref="T:Syncfusion.SfDataGrid.DataRow"/> objects in a <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.IsComplexType">
            <summary>
            Gets or sets a value indicating whether the collection is a simple or complex collection
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.GridPicker.PropertyDescriptorCollection">
            <summary>
            Gets or sets the individual properties in the collection
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.Initialize">
            <summary>
            Initializes a new instance of the properties of <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.LoadPicker">
            <summary>
            Loads the ItemsSource for <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.RefreshItems">
            <summary>
            Items will be added and picker view will be initiated here.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.UpdatePicker">
            <summary>
            Updates the picker properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnItemsSourceChanged(System.Collections.IEnumerable)">
            <summary>
            Occurs when the GridPicker's <see cref="P:Syncfusion.SfDataGrid.Renderers.GridPicker.ItemsSource"/> property is changed
            </summary>
            <param name="oldVaue">The oldvalue</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnPickerCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when Picker collection property is changed.
            </summary>
            <param name="sender">GridPicker instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnSelectedIndexChanged">
            <summary>
            Occurs when Selected index property is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnSelectedItemChanged(System.Object,System.Object)">
            <summary>
            Callback for the <see cref="P:Syncfusion.SfDataGrid.Renderers.GridPicker.SelectedItem"/> property.
            </summary>
            <param name="oldvalue">The old value</param>
            <param name="newvalue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">Left position, relative to parent</param>
            <param name="top">Top position, relative to parent</param>
            <param name="right">Right position, relative to parent</param>
            <param name="bottom">Bottom position, relative to parent</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.SetPadding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the padding for the child view.
            </summary>
            <param name="left">The padding to be applied from the left position, relative to child.</param>
            <param name="top">The padding to be applied from the top position, relative to child.</param>
            <param name="right">The padding to be applied from the right position, relative to child.</param>
            <param name="bottom">The padding to be applied from the bottom position, relative to child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnClick(Android.Views.View)">
            <summary>
            This method arises when the picker is clicked.
            </summary>
            <param name="v">The view which is clicked.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnAttachedToWindow">
            <summary>
            Notifies when view is attached to window.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.OnDetachedFromWindow">
            <summary>
            Notifies when view is detached from window.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.FindFocus">
            <summary>
            Find the view in the hierarchy rooted at this view that currently has focus.
            </summary>
            <returns>The view in the hierarchy rooted at this view that currently has focus.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.GridPicker.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker">
             <summary>
             A customized view that allows date picking. ​
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.Renderers.SfDatePicker.textSize">
            <summary>
            Represents the size of the text in the picker.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/> class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/></param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the SfDatePicker class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the SfDatePicker class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the SfDatePicker class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="E:Syncfusion.SfDataGrid.Renderers.SfDatePicker.DateChanged">
            <summary>
            Occurs when the date is changed in the date picker.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.MinimumDate">
            <summary>
            Gets or sets the minimum date to be available in the <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/>.
            </summary>
            <value>The minimum date to be available in the <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/>.</value>
            <remarks>
            The <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/> enables you to scroll through a list of dates between the <see cref="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.MinimumDate"/> 
            and <see cref="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.MaximumDate"/> and select one from it.
            </remarks>        
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.MaximumDate">
            <summary>
            Gets or sets the maximum date to be available in the <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/>.
            </summary>
            <value>The maximum date to be available in the <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/>.</value>
            <remarks>
            The <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/> enables you to scroll through a list of dates between the <see cref="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.MinimumDate"/> 
            and <see cref="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.MaximumDate"/> and select one from it.
            </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.TextAlignment">
            <summary>
            Gets or sets the text alignment of the date picker.
            </summary>
            <value>The text alignment of the date picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.TextSize">
            <summary>
            Gets or sets the font size of the text in the date picker.
            </summary>
            <value>The font size of the text in the date picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.Date">
            <summary>
            Gets or sets the date to be displayed in the SfDatePicker.
            </summary>
            <value>The date to be displayed in the SfDatePicker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.Format">
            <summary>
            Gets or sets the format to be applied to the date in the date picker.
            </summary>
            <value>The format applied to the date in the date picker.</value>        
        </member>
        <member name="P:Syncfusion.SfDataGrid.Renderers.SfDatePicker.TextColor">
            <summary>
            Gets or sets the text color of the date picker.
            </summary>
            <value>The text color of the date picker.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.Initialize">
            <summary>
            Initializes a new instance of the properties of the <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.UpdatePicker">
            <summary>
            Updates the properties of <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.OnDatePickerValueChanged(System.Object,Android.App.DatePickerDialog.DateSetEventArgs)">
            <summary>
            Callback for the <see cref="T:Syncfusion.SfDataGrid.Renderers.PickerTextView"/> property
            </summary>
            <param name="sender">SfDatePicker instance</param>
            <param name="e">DateSetEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.UpdateMaximumAndMinimumDate">
            <summary>
            Updates the maximum and minimum date.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">Left position, relative to parent</param>
            <param name="top">Top position, relative to parent</param>
            <param name="right">Right position, relative to parent</param>
            <param name="bottom">Bottom position, relative to parent</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.OnClick(Android.Views.View)">
            <summary>
            This method arises when the date picker is clicked.
            </summary>
            <param name="v">The view which is clicked.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.FindFocus">
            <summary>
            Find the view in the hierarchy rooted at this view that currently has focus.
            </summary>
            <returns>The view in the hierarchy rooted at this view that currently has focus.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.SetPadding(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the padding for the child view.
            </summary>
            <param name="left">The padding to be applied from the left position, relative to child.</param>
            <param name="top">The padding to be applied from the top position, relative to child.</param>
            <param name="right">The padding to be applied from the right position, relative to child.</param>
            <param name="bottom">The padding to be applied from the bottom position, relative to child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.OnDetachedFromWindow">
            <summary>
            Notifies when view is detached from window.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.SfDatePicker.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Renderers.PickerTextView">
            <summary>
            Initializes the PickerTextView Class
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.PickerTextView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.PickerTextView"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.PickerTextView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.PickerTextView"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.PickerTextView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.PickerTextView"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.PickerTextView.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Renderers.PickerTextView"/> class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/></param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.PickerTextView.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Renderers.PickerTextView.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">Left position, relative to parent</param>
            <param name="top">Top position, relative to parent</param>
            <param name="right">Right position, relative to parent</param>
            <param name="bottom">Bottom position, relative to parent</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCellSwitchRenderer">
            <summary>
            GridCellSwitchRenderer is a class for cell renderer that displays <see cref="T:Android.Widget.CheckBox"/> in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellSwitchRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellSwitchRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellSwitchRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.CheckBox)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.CheckBox"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Android.Widget.CheckBox"/> view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellSwitchRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.CheckBox)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.CheckBox"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Android.Widget.CheckBox"/> to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellSwitchRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.CheckBox"/> view.
            </summary>
            <returns>A new <see cref="T:Android.Widget.CheckBox"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellSwitchRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the toggle value of the <see cref="T:Android.Widget.CheckBox"/>.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellSwitchRenderer.OnUnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.DataColumnBase)"/> after a cell is scrolled out of view.
            <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2"/> overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether <see cref="P:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.AllowRecycle"/> was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellSwitchRenderer.OnCheckedChanged(System.Object,Android.Widget.CompoundButton.CheckedChangeEventArgs)">
            <summary>
            Gets a value indicating whether switch column is checked.
            </summary>
            <param name="sender">SfSwitch instance</param>
            <param name="e">CheckedChangeEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellSwitchRenderer.CreateOrRecycleDisplayUIView">
            <summary>
            Creates a new view or reuses the existing view if reusing can be applied here
            </summary>
            <returns>Returns a created new view or reuses the existing view if reusing can be applied here</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridImageCellRenderer">
            <summary>
            GridImageCellRenderer is a class for cell renderer that displays <see cref="T:Android.Widget.ImageView"/> in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridImageCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridImageCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridImageCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.ImageView)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.ImageView"/> and the required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Android.Widget.ImageView"/> to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridImageCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.ImageView)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.ImageView"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Android.Widget.ImageView"/> to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridImageCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.ImageView"/>.
            </summary>
            <returns>A new <see cref="T:Android.Widget.ImageView"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridImageCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer">
            <summary>
            GridUnboundCellTextBoxRenderer is a class for cell renderer that displays the unbound column value in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridUnboundCellTextBoxRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.TextView"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Android.Widget.TextView"/> view object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.TextView"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Android.Widget.TextView"/> view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.TextView"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Android.Widget.TextView"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundCellTextBoxRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="dataColumnBase">The corresponding column for which the binding update should be determined.</param>
            <returns>
            <b>True</b> if the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CultureConverter">
            <summary>
            A converter to apply different culture for the GridColumns.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CultureConverter.#ctor(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Initializes a new instance of the CultureConverter class.
            </summary>
            <param name="column">The GridColumn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CultureConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats the given value based on the CultureInfo of the cacheColumn.
            </summary>
            <param name="value">The value to be formatted.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info based on which the given value is to be formatted.</param>
            <returns>Returns the formatted value based on the CultureInfo of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CultureConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back the given formatted value to the actual value.
            </summary>
            <param name="value">The formatted value.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info based on which the given value is formatted.</param>
            <returns>Returns the actual value from the formatted value.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridNumericColumnConverter">
            <summary>
            A converter to apply for numeric column.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridNumericColumnConverter.#ctor(Syncfusion.SfDataGrid.GridNumericColumn)">
            <summary>
            Initializes a new instance of the GridNumericColumnConverter class.
            </summary>
            <param name="column">The <see cref="T:Syncfusion.SfDataGrid.GridNumericColumn"/> which holds numeric Content in its cells.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridNumericColumnConverter.ConvertToFormat(Syncfusion.SfDataGrid.GridColumn,System.Decimal)">
            <summary>
            Convert column value to numeric format.
            </summary>
            <param name="column">The numeric column</param>
            <param name="columnValue">The column value.</param>
            <returns>The numeric format of the given column value.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridEditorColumnConverter">
            <summary>
            A converter to apply for editor columns.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditorColumnConverter.#ctor(Syncfusion.SfDataGrid.GridEditorColumn)">
            <summary>
            Initializes a new instance of the GridEditorColumnConverter class.
            </summary>
            <param name="column">The <see cref="T:Syncfusion.SfDataGrid.GridEditorColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditorColumnConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats the given value based on the CultureInfo of the cacheColumn.
            </summary>
            <param name="value">The value to be formatted.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info based on which the given value is to be formatted.</param>
            <returns>Returns the formatted value based on the CultureInfo of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditorColumnConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back the given formatted value to the actual value.
            </summary>
            <param name="value">The formatted value.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info based on which the given value is formatted.</param>
            <returns>Returns the actual value from the formatted value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditorColumnConverter.ConvertToFormat(Syncfusion.SfDataGrid.GridColumn,System.Decimal)">
            <summary>
            Convert column value to string format.
            </summary>
            <param name="column">The column</param>
            <param name="columnValue">The column value.</param>
            <returns>The string value of the given column value.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DisplayMemberConverter">
            <summary>
            Derived from <see cref="T:Syncfusion.Data.IValueConverter"/> which returns display text by reflection data based on the DisplayMemberPath and SelectedValuePath.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DisplayMemberConverter.dynamicHelper">
            <summary>
            Helper to reflect dynamic types. This maintains the cache for faster reflection
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisplayMemberConverter.#ctor(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DisplayMemberConverter"/> class.
            </summary>
            <param name="column">The GridColumn which has to undergo conversion.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisplayMemberConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts given value to display member path.
            </summary>
            <param name="value">The value to be converted.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info of the column.</param>
            <returns>Returns the display value based on the value of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisplayMemberConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back the display value to the actual value.
            </summary>
            <param name="value">The converted value.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info of the column.</param>
            <returns>Returns the actual value from the display value of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisplayMemberConverter.Convert(System.Object)">
            <summary>
            Converts selected value to display member path.
            </summary>
            <param name="selectedValue">Selected Value</param>
            <returns>Display value</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisplayMemberConverter.Dispose">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisplayMemberConverter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCurrentCellBeginEditEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.CurrentCellBeginEdit"/> event.
            </summary>
            <param name="sender">
            The source of the event.
            </param>
            <param name="e">
            A <see cref="T:Syncfusion.SfDataGrid.GridCurrentCellBeginEditEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCurrentCellEndEditEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.CurrentCellEndEdit"/> event.
            </summary>
            <param name="sender">
            The source of the event.
            </param>
            <param name="e">
            A <see cref="T:Syncfusion.SfDataGrid.GridCurrentCellEndEditEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCurrentCellBeginEditEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.CurrentCellBeginEdit"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCurrentCellBeginEditEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridCurrentCellBeginEditEventArgs class.
            </summary>
            <param name="originalSource">The source of the event. </param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCurrentCellBeginEditEventArgs.RowColumnIndex">
            <summary>
            Gets the <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the current cell being edited.
            </summary>
            <value>
            The corresponding <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the current cell being edited.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCurrentCellBeginEditEventArgs.Column">
            <summary>
            Gets the grid column of the current cell being edited.
            </summary>
            <value>
            The corresponding <see cref="!:SfDataGrid.GridColumn"/> that contains the cell to be edited.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCurrentCellEndEditEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.CurrentCellEndEdit"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCurrentCellEndEditEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridCurrentCellEndEditEventArgs class.
            </summary>
            <param name="originalSource">
            The original source that triggers the event.
            </param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCurrentCellEndEditEventArgs.RowColumnIndex">
            <summary>
            Gets the <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the current cell in which editing is ended.
            </summary>
            <value>
            The corresponding <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the current cell in which editing is ended.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCurrentCellEndEditEventArgs.NewValue">
            <summary>
            Gets the new cell value of the edited cell.
            </summary>
            <value>An object that represents new cell value of edited cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCurrentCellEndEditEventArgs.OldValue">
            <summary>
            Gets the old cell value of the edited cell.
            </summary>
            <value>An object that represents old cell value of edited cell.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridResizingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.ColumnResizing"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.GridResizingEventArgs"/> that contains the event data.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.GridResizingEventArgs"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridResizingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.ColumnResizing"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingEventArgs.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridResizingEventArgs class with the given DataGrid.
            </summary>
            <param name="dataGrid">The source of the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingEventArgs.Index">
            <summary>
            Gets the index of the column that is being resized.    
            </summary>
            <value>
            An index of the column being resized.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingEventArgs.NewValue">
            <summary>
            Gets the width of the column that is being resized.    
            </summary>
            <value>
            The width of the column being resized.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingEventArgs.ResizingState">
            <summary>
            Gets the current status (starting or progressing or completed) when performing resizing operation.
            </summary>
            <value>
            Returns the <see cref="T:Syncfusion.SfDataGrid.ProgressStates"/> that specifies the current status (starting or progressing or completed) when performing resizing operation.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryUnboundColumnValueHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryUnboundColumnValue"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.GridUnboundColumnEventArgs"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridUnboundColumnEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryUnboundColumnValue"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumnEventArgs.#ctor(Syncfusion.SfDataGrid.UnboundActions,System.Object,Syncfusion.SfDataGrid.GridColumn,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the GridUnboundColumnEventArgs class with the specified values.
            </summary>
            <param name="action">Represents the <see cref="T:Syncfusion.SfDataGrid.UnboundActions"/> that specifies the possible actions (commit data or query data or paste 
            data) performed in the unbound column.</param>
            <param name="value">The cell value of the unbound Column.</param>
            <param name="column">The grid column of the cell that triggers the event.</param>
            <param name="record">The underlying data of the row.</param>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryUnboundColumnValue"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.#ctor(Syncfusion.SfDataGrid.UnboundActions,System.Object,Syncfusion.SfDataGrid.GridColumn,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the GridUnboundColumnEventsArgs class with the specified values.
            </summary>
            <param name="action">Represents the <see cref="T:Syncfusion.SfDataGrid.UnboundActions"/> that specifies the possible actions (commit data or query data or paste 
            data) performed in the unbound column.</param>
            <param name="value">The cell value of the unbound Column.</param>
            <param name="column">The grid column of the cell that triggers the event.</param>
            <param name="record">The underlying data of the row.</param>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.Column">
            <summary>
            Gets the grid column of the cell triggers this event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.Value">
            <summary>
            Gets or sets the value for the grid unbound column's cell based on the possible actions (commit data or query data or paste 
            data) performed in the unbound column.
            </summary>
            <value>
            An object that contains the cell value for the grid unbound column.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.Record">
            <summary>        
            Gets the data object associated with the row which has the grid cell triggered this event.
            </summary>
            <value>
            The data object associated with the row which has the grid cell triggered this event.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.UnboundAction">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.UnboundActions"/> that specifies the possible actions (commit data or query data or paste data) performed in the 
            unbound column.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfDataGrid.UnboundActions"/> that specifies the possible actions (commit data or query data or paste data) performed in the 
            unbound column.
            </value>
            <remarks>The UnboundAction – QueryData denotes, the event is raised to get or query the value for cell and the UnboundAction - CommitData denotes, the event is raised to notify or commit the edited value.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.CellType">
            <summary>        
            Gets or sets the cell type of the unbound cell.
            </summary>
            <value>
            A string that specifies the cell type of unbound cell.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumnEventsArgs.RowColumnIndex">
            <summary>
            Gets or sets the row column index of the unbound cell which triggers this event.
            </summary>
            <value>
            The row column index of the unbound cell which triggers this event.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XamarinExtentions">
            <summary>
            Represents a class that contains the extension methods of Xamarin.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.AddChild(Android.Views.ViewGroup,Android.Views.View)">
            <summary>
            Add the current child to the specified view.
            </summary>
            <param name="view">view instance</param>
            <param name="child">child needs to be add</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.RaiseChild(Android.Views.ViewGroup,Android.Views.View)">
            <summary>
            Raise the child to the top of the view
            </summary>
            <param name="view">view instance</param>
            <param name="child">child needs to be add</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.LowerChild(Android.Views.ViewGroup,Android.Views.View)">
            <summary>
            Lower the current child to the specified view.
            </summary>
            <param name="view">view instance</param>
            <param name="child">child needs to be add</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.ShowKeyboard(Android.Widget.EditText)">
            <summary>
            Shows the keyboard
            </summary>
            <param name="inputView">edit text value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.HideKeyboard(Android.Widget.EditText)">
            <summary>
            Hides the keyboard
            </summary>
            <param name="inputView">edit text value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.RemoveChild(Android.Views.ViewGroup,Android.Views.View)">
            <summary>
            Removes the current child from the specified view.
            </summary>
            <param name="view">view instance</param>
            <param name="child">child needs to be add</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.Hide(Android.Views.View)">
            <summary>
            Sets the visibility of given view.
            </summary>
            <param name="view">current view instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.Show(Android.Views.View)">
            <summary>
            Sets the visibility of given view to true.
            </summary>
            <param name="view">current view instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.IsVisible(Android.Views.View)">
            <summary>
            Gets a boolean value indicating whether visibility is set.
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns a boolean value indicating whether visibility is set.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.GetWidth(Android.Views.View)">
            <summary>
            Gets the width of the current column in the view.
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns the width of the current column in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.GetHeight(Android.Views.View)">
            <summary>
            Gets the height of the current column in the view.
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns the height of the current column in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.Focus(Android.Views.View)">
            <summary>
            Sets focus to the view.
            </summary>
            <param name="view">Current view instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.Unfocus(Android.Views.View)">
            <summary>
             Remove focus from the view.
            </summary>
            <param name="view">View instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.IsFocused(Android.Views.View)">
            <summary>
            Gets a boolean value indicating whether the view is focused
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns a boolean value indicating whether the view is focused</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.HasChild(Android.Views.View)">
            <summary>
            Gets a boolean value indicating whether the view has child
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns a boolean value indicating whether the view has child</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.GetLeftPadding(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the left padding value of the SfDataGrid
            </summary>
            <param name="grid">SfDataGrid instance</param>
            <returns>Returns the left padding value of the SfDataGrid</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.GetRightPadding(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the right padding value of the SfDataGrid
            </summary>
             <param name="grid">SfDataGrid instance</param>
            <returns>Returns the right padding value of the SfDataGrid</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.GetTopPadding(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the top padding value of the SfDataGrid
            </summary>
            <param name="grid">SfDataGrid instance</param>
            <returns>Returns the top padding value of the SfDataGrid</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XamarinExtentions.GetBottomPadding(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the bottom padding value of the SfDataGrid
            </summary>
            <param name="grid">SfDataGrid instance</param>
            <returns>Returns the bottom padding value of the SfDataGrid</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryColumnDragging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryColumnDragging"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs"/> class.
            </summary>
            <param name="dataGrid">The source of the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.From">
            <summary>
            Gets the index of the column that is being dragged.    
            </summary>
            <value>
            An index of the column being dragged.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.To">
            <summary>
            Gets the index of the column that the drag view is currently placed over or dropped.
            </summary>
            <value>
            An index of the column that the drag view is currently placed over or dropped.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.DraggingPosition">
            <summary>
            Gets the position of drag and drop view during a column drag-and-drop operation.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Point"/> that represents the position of drag and drop view during the column drag-and-drop operation.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs.Reason">
            <summary>
            Gets the current status (drag started or dragging or drag ended) when performing column drag-and-drop operation.
            </summary>
            <value>
            Returns the <see cref="T:Syncfusion.SfDataGrid.QueryColumnDraggingReason"/> that specifies the current status (drag started or dragging or drag ended) when performing column drag-and-drop operation.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryRowDraggingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowDragging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowDragging"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the QueryRowDraggingEventArgs class.
            </summary>
            <param name="dataGrid">The source of the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.From">
            <summary>
            Gets the index of the row that is being dragged.    
            </summary>
            <value>
            An index of the row being dragged.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.To">
            <summary>
            Gets the index of the row that the drag view is currently placed over or dropped.
            </summary>
            <value>
            The index of the row that the drag view is currently placed over or dropped.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.RowData">
            <summary>
            Gets the underlying data of the row being dragged.
            </summary>
            <value>The underlying data of the row being dragged.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.CurrentRowData">
            <summary>
            Gets the underlying data of the current row over which the drag view is placed.
            </summary>
            <value>The underlying data of the current row over which the drag view is placed.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.Position">
            <summary>
            Gets the current position of the drag and drop view in a SfDataGrid.
            </summary>
            <value>The current position of the drag and drop view in a SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs.Reason">
            <summary>
            Gets the current status (drag started or dragging or drag ended) when performing row drag-and-drop operation.
            </summary>
            <value>
            Returns the <see cref="T:Syncfusion.SfDataGrid.QueryRowDraggingReason"/> that specifies the current status (drag started or dragging or drag ended) when performing row drag-and-drop operation.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridColumnDragDropController">
            <summary>
            Provides the base implementation for column drag-and-drop operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the drag-and-drop operation.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridColumnDragDropController"/> class.
            </summary>
            <param name="dataGrid">The reference of the SfDatagrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridColumnDragDropController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.OnDragStarted">
            <summary>
            This method is called when colum drag and drop operation is started
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.OnDragging(System.Double,System.Double)">
            <summary>
            This method is called when colum drag and drop operation is on going
            </summary>
            <param name="draggedX">X position</param>
            <param name="draggedY">Y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.OnDragEnded">
            <summary>
            This method is called when colum drag and drop operation is ended
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.InitializeDragViews">
            <summary>
            Initialize the drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.RemoveDragViews">
            <summary>
            Removes the drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.EndDragging">
            <summary>
            Call this method to end drag and drop
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.CanShowIndicationAtlast(System.Boolean)">
            <summary>
            Gets a value indicating whether the indication arrow can be shown in the last column
            </summary>
            <param name="isLastVisibleIndex">value indicates whether the index is last visible index</param>
            <returns>Returns a value indicating whether the indication value can be shown in the last column</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.CanShowErrorIndicator">
            <summary>
            Gets a value indicating whether the error indication icon can be shown
            </summary>
            <returns>Returns a value indicating whether the error indication icon can be shown</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.CanShowIndication">
            <summary>
            Gets a value indicating whether the indication arrow can be shown
            </summary>
            <returns>Returns a value indicating whether the error indication arrow can be shown</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.CalculateWidthAndHeight">
            <summary>
            Calculates the height and width of column drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.IndexToPoint(System.Int32)">
            <summary>
            Gets the starting point of the given column index
            </summary>
            <param name="columnIndex">current column index</param>
            <returns>Returns the starting point of the given column index</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.PointToColumnIndex(System.Int32,System.Int32)">
            <summary>
            Gets the column index at the given coordinates point
            </summary>
            <param name="x">X position</param>
            <param name="y">Y position</param>
            <returns>Returns the column index at the given coordinates point</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.GetColumnWidth(System.Int32)">
            <summary>
            Gets the column width
            </summary>
            <param name="index">current index</param>
            <returns>Returns the column width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.AutoScroll(System.Boolean)">
            <summary>
            Call this method to perform auto scroll during column drag and drop
            </summary>
            <param name="towardsRight">value indicates whether dragging is towards right</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.ResolveToStartIndex">
            <summary>
            Gets the start index based on the row header visibility
            </summary>
            <returns>Returns the start index based on the row header visibility</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.GetHiddenColumnCount(System.Int32,System.Int32)">
            <summary>
            Gets the hidden column count
            </summary>
            <param name="startIndex">start index</param>
            <param name="endIndex">end index</param>
            <returns>Returns the hidden column count</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.GetEndIndex">
            <summary>
            Method which return the current end index while the column is in dragging/dropping.
            </summary>
            <returns>Return the current end index while the column is in dragging/dropping.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnDragDropController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridColumnResizingController">
            <summary>
            Provides the base implementation for column resizing operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of methods and properties to perform the resizing operation.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridColumnResizingController"/> class.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridColumnResizingController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.GetHitTest(System.Double,System.Int32)">
            <summary>
            Returns the VisibleLine on the touch point
            </summary>
            <param name="x">The x value of the touch point</param>
            <param name="columnIndex">The column index based on the touch point</param>
            <returns>The VisibleLine information based on the point</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.InitializeResizingIndicator">
            <summary>
            Adds the ColumnResizingIndicator as the child of the SfDataGrid and sets its visibility to true.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.OnResizingStarted(Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo)">
            <summary>
            Performs the necessary operations when resizing is started for the column
            </summary>
            <param name="resizingLine">The line information to be resized</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.OnResizing(System.Double)">
            <summary>
            Layouts the resizing cursor and alters the width of the resizing column
            </summary>
            <param name="draggedX">The change in x value from the initial touch point</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.OnResizingEnded">
            <summary>
            Performs the necessary operations when resizing is completed for the column
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.LayoutResizingIndicator(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layouts the ColumnResizingIndicator with respect to the bounds provided in parameter
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.UpdateResizingIndicatorVisibility(System.Boolean)">
            <summary>
            Hides or shows the ColumnResizingIndicator based on the value passed as parameter
            </summary>
            <param name="isVisible">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.SetResizingColumnWidth(System.Double)">
            <summary>
            Sets width to the column currently being resized with the width value passed as parameter
            </summary>
            <param name="width">width of the column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnResizingController.UpdateResizingColumnWidth(System.Double)">
            <summary>
            Updates width value to the column currently being resized with the value passed as parameter when the resizing mode is OnTouchUp
            </summary>
            <param name="width">width of the column</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDragDropController">
            <summary>
            Provides the base implementation for  drag-and-drop operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the drag-and-drop operation.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDragDropController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridDragDropController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDragDropController.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridDragDropController"/> class.
            </summary>
            <param name="grid">The reference for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DataGrid">
             <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DataColumn">
            <summary>
            Gets or sets the data column
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.IsDragCancelled">
            <summary>
            Gets or sets a value indicating whether drag is cancelled
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.StartIndex">
            <summary>
            Gets or sets the start index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.EndIndex">
            <summary>
            Gets or sets the end index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragViewMaxWidth">
             <summary>
            Gets or sets the maximum width of the drag view.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragViewMaxHeight">
            <summary>
            Gets or sets the maximum height of the drag view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragViewMinWidth">
             <summary>
            Gets or sets the minimum width of the drag view.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragViewMinHeight">
            <summary>
            Gets or sets the minimum height of the drag view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.CanAutoScroll">
            <summary>
            Gets or sets a value indicating whether to auto scroll the grid when dragging.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.IsDragging">
            <summary>
            Gets or sets a value indicating whether dragging is in progress or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.DragThreshold">
            <summary>
            Gets or sets the drag threshold value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDragDropController.IsAttainedDragThreshold">
            <summary>
            Gets or sets a value indicating whether drag threshold is reached.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDragDropController.UpdateErrorIconVisiblity(System.Boolean,Syncfusion.SfDataGrid.BorderView)">
            <summary>
            Updates the error icon visibility
            </summary>
            <param name="isVisible">boolean value</param>
            <param name="dragView">border view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDragDropController.OnDragStarted">
            <summary>
            This method is called when drag and drop operation is started
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDragDropController.OnDragging(System.Double,System.Double)">
            <summary>
            This method is called when drag and drop operation is on going
            </summary>
            <param name="draggedX">X position</param>
            <param name="draggedY">Y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDragDropController.OnDragEnded">
            <summary>
            This method is called when colum drag and drop operation is ended
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDragDropController.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDragDropController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridEditingController">
            <summary>
            Provides the  implementation for editing operations in SfDataGrid.
            </summary>
            <remarks>It provides the set of public properties and methods to handle the editing operation.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridEditingController"/> class.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridEditingController"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditingController.DataGrid">
            <summary>
            Gets or sets an instance for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditingController.CurrentDataColumn">
            <summary>
            Gets or sets the current data column
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditingController.HasCurrentCell">
            <summary>
            Gets a value indicating whether the current cell is in view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditingController.CurrentRowColumnIndex">
            <summary>
            Gets or sets the current row and column index
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.HandlePointerOperation(Syncfusion.SfDataGrid.GridPointerEventArgs,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the <see cref="!:Syncfusion.SfDataGrid.XForms.PointerOperation"/> and initiate editing if it is not in progress.
            Or ends the current editing
            </summary>
            <param name="args">GridPointerEvent srguments</param>
            <param name="rowColumnIndex">Specifies the current row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.ProcessOnTapped(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Process the tap action and begins editing if edit mode is set as OnTap
            </summary>
            <param name="currentRowColumnIndex">The tapped row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.ProcessOnDoubleTapped(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Process the double tap action and begins editing if edit mode is set as OnDoubleTap
            </summary>
            <param name="rowColumnIndex">The double tapped row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.ProcessCurrentCellSelection(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Removes the previous current cell and sets the new current cell.
            </summary>
            <param name="newRowColumnIndex">New row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.GetValueProperty(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Returns the current value property.
            </summary>
            <param name="column">The current column</param>
            <returns>current value property</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.SetOldCellValue(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Stores the current cell value in a backing field.
            </summary>
            <param name="dataColumn">Specifies the current <see cref="!:Syncfusion.SfDataGrid.XForms.DataColumnBase"/>. </param>
            <param name="rowColumnIndex">The new row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.RaiseBeginEditingEvent">
            <summary>
            Raise the RaiseBeginEditingEvent method in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <returns>Returns whether editing can be canceled or not </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.RaiseEndEditingEvent(System.Boolean)">
            <summary>
            Raise the RaiseEndEditingEvent method in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="cancelEdit">A Boolean which returns whether editing can be canceled or not </param>
            <returns>Returns whether value can be canceled or not </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.RemoveCurrentCell(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Removes the current cell.
            </summary>
            <param name="rowColumnIndex">The current row column  index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.SelectCurrentCell(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Sets the current cell.
            </summary>
            <param name="rowColumnIndex">The new row column index</param>
            <param name="setFocus">Returns whether focus has to be set for edit view or not</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.BeginEdit">
            <summary>
            Initiates the editing process.
            </summary>
            <returns>Returns whether editing has been begin or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.EndEdit(System.Boolean,System.Boolean)">
            <summary>
            Ends the editing.
            </summary>
            <param name="canCommit">Returns whether edited value can be commit or not</param>
            <param name="cancelEdit">A Boolean which returns whether editing can be canceled or not</param>
            <returns>Returns whether editing has ended or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.SetCurrentRowColumnIndex(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Sets the current row and column index.
            </summary>
            <param name="rowColumnIndex">current row and column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.ResetCurrentRowColumnIndex">
            <summary>
            Resets the current row and column index.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.UpdatePreviousIndex">
            <summary>
            Updates the previous index
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.SetCurrentRowIndex(System.Int32)">
            <summary>
            Sets the current row index.
            </summary>
            <param name="rowIndex">current row index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.SetCurrentColumnIndex(System.Int32)">
            <summary>
            Sets the current column index.
            </summary>
            <param name="columnIndex">column index value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.CommitCellValue(System.Boolean)">
            <summary>
            Commits the cell value to the underlying collection.
            </summary>
            <param name="isNewValue">Returns whether value is new or not</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.UpdateEditingRowColumnIndex(System.String,System.Int32)">
            <summary>
            Update the CurrentRowColumnIndex if column is added/removed/reset.
            </summary>
            <param name="action">Denotes the action performed</param>
            <param name="columnIndex">Modified column's index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditingController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="canDispose"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridResizingControllerBase">
            <summary>
            Provides the base implementation for column resizing operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the resizing operation.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridResizingControllerBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridResizingControllerBase"/> class.
            </summary>
            <param name="grid">The reference for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingControllerBase.DataGrid">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingControllerBase.CurrentResizingColumn">
            <summary>
            Gets or sets the current column being resized.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingControllerBase.IsResizing">
            <summary>
            Gets or sets a value indicating whether the column is currently being resized or not
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingControllerBase.IsHitTestPassed">
            <summary>
            Gets or sets a value indicating whether hit test is passed or not
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingControllerBase.DataColumn">
            <summary>
            Gets or sets the current DataColumn for resizing
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridResizingControllerBase.ResizingLine">
            <summary>
            Gets or sets the line information based on touch point
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.InitializeResizingIndicator">
            <summary>
            Adds the ResizingIndicator as the child of the SfDataGrid and sets its visibility to true.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.OnResizingStarted(Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo)">
            <summary>
            Performs the necessary operations when resizing is started for the column
            </summary>
            <param name="resizingLine">The line information to be resized</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.OnResizing(System.Double)">
            <summary>
            Layouts the resizing cursor and alters the width of the resizing column
            </summary>
            <param name="draggedX">The change in x value from the initial touch point</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.OnResizingEnded">
            <summary>
            Performs the necessary operations when resizing is completed for the column
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.LayoutResizingIndicator(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layouts the ResizingIndicator with respect to the bounds provided in parameter
            </summary>
            <param name="x">A value that represents the x coordinate of the resizing indicator.</param>
            <param name="y">A value that represents the y coordinate of the resizing indicator.</param>
            <param name="width">A value that represents the width of the resizing indicator.</param>
            <param name="height">A value that represents the height of the resizing indicator.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.UpdateResizingIndicatorVisibility(System.Boolean)">
            <summary>
            Hides or shows the ColumnResizingIndicator based on the value passed as parameter
            </summary>
            <param name="isVisible">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.Dispose">
            <summary>
            Disposes the objects that are holding memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridResizingControllerBase.Dispose(System.Boolean)">
            <summary>
            Disposes the objects that are holding memory 
            </summary>
            <param name="isDisposing">boolean value denotes whether to dispose the objects</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridRowDragDropController">
            <summary>
            Provides the base implementation for row drag-and-drop operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the drag-and-drop operation.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridRowDragDropController"/> class.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridRowDragDropController"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowDragDropController.IsGroupDragging">
            <summary>
            Gets a value indicating whether the dragging row is a caption summary row or not
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowDragDropController.RowCount">
            <summary>
            Gets the row count
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.OnDragStarted">
            <summary>
            This method is called when colum drag and drop operation is started
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.OnDragging(System.Double,System.Double)">
            <summary>
            This method is called when colum drag and drop operation is on going
            </summary>
            <param name="draggedX">X position</param>
            <param name="draggedY">Y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.OnDragEnded">
            <summary>
            This method is called when colum drag and drop operation is ended
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.InitializeDragViews">
            <summary>
            Initialize the drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.RemoveDragViews">
            <summary>
            Removes the drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.EndDragging">
            <summary>
            Call this method to end drag and drop
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.RemoveParentGroups(Syncfusion.Data.Group)">
            <summary>
            Removes parent group from top level group if doesn't have group or records.
            </summary>
            <param name="group">The group.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.IsDraggingReachedBottom">
            <summary>
            Gets a value indicating whether the dragging bottom is reached or not
            </summary>
            <returns>Returns a boolean value indicating whether the dragging bottom is reached or not</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.CanShowIndicatorView">
            <summary>
            Gets a value indicating whether to show indicator view or not.
            </summary>
            <returns>Returns  a value indicating whether to show indicator view or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.IsNextGroup">
            <summary>
            Checks whether current group is next group of dragged group.
            </summary>
            <returns>Returns a boolean value indicating whether current group is next group of dragged group.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.IsPreviousGroup">
            <summary>
            Checks whether current group is previous group of dragged group.
            </summary>
            <returns>Returns a boolean value indicating whether current group is previous group of dragged group.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.UpdateDragViewText(System.Double)">
            <summary>
            Updates the text of drag view while dragging a row
            </summary>
            <param name="indicationY">y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.GetRowDragViewX">
            <summary>
            Gets the X point of the RowDragView.
            </summary>
            <returns>Returns the X point of the RowDragView.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.GetDragViewVerticalLimit(System.Double)">
            <summary>
            Gets the maximum Y extent the RowDragView can be layout to.
            </summary>
            <param name="draggedY">The maximum y position.</param>
            <returns>Returns the maximum Y extent the RowDragView can be layout to.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.CalculateWidthAndHeight">
            <summary>
            Calculates the height and width of row drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.AutoScroll(System.Boolean)">
            <summary>
            Auto scrolls the data grid when the drag and drop operation is performed.
            </summary>
            <param name="towardsBottom">A boolean value specifying whether to scroll towards bottom.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.IndexToPoint(System.Int32)">
            <summary>
            Converts the given row index to point.
            </summary>
            <param name="rowIndex">Corresponding row index for which the point is to be obtained.</param>
            <returns>The point for the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.PointToRowIndex(System.Int32,System.Int32)">
            <summary>
            Converts the given point to the row index.
            </summary>
            <param name="x">The "x" co-ordinate of the point.</param>
            <param name="y">The "y" co-ordinate of the point.</param>
            <returns>The row index for the given point.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowDragDropController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridColumnSizer">
            <summary>
            Represents a class that handles the sizing for all the GridColumns in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridColumnSizer class using the specified datagrid instance,.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.#ctor">
            <summary>
            Initializes a new instance of the GridColumnSizer class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumnSizer.DataGrid">
            <summary>
            Gets the current instance of the SfDataGrid.
            </summary>
            <value>The current instance of the SfDataGrid.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.OnColumnPropertyChanged(Syncfusion.SfDataGrid.GridColumn,System.String)">
            <summary>
            Represents the method that will handle the property changes in grid columns.
            </summary>
            <param name="column">A <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/> object.</param>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.ResetAutoWidth(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Resets the auto width for the specified column.
            </summary>
            <param name="column">The corresponding column to reset the auto width.</param>
            <remarks>The column width is reset to <b>double.Nan</b>, if the column sizing needs to be recalculate based on the data.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the column is null.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetAutoWidth(Syncfusion.SfDataGrid.GridColumn,System.Double)">
            <summary>
            Sets the width for the specified column based on <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer.Auto"/> column sizer.
            </summary>
            <param name="column">The corresponding column to set Auto width.</param>
            <param name="width">The corresponding width set as Auto width.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the column is null.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.Refresh(System.Boolean)">
            <summary>
            Refreshes the GridColumns in the view.
            </summary>
            <param name="needsLayout">A boolean value specifying whether layout is needed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetAutoRowHeight(System.Int32,Syncfusion.SfDataGrid.GridRowSizingOptions)">
            <summary>
            Gets the height for the specified row based on the row data Content.
            </summary>
            <param name="rowIndex">The corresponding row to set Auto height.</param>
            <param name="options">The RowSizingOptions.</param>
            <returns>Returns the height for the specified row based on the row data Content</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.InitializeGridColumnSizer(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initialize the Grid column sizer.
            </summary>
            <param name="grid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.WireEvent">
            <summary>
            Wires the events associated with <see cref="T:Syncfusion.SfDataGrid.GridColumnSizer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.UnWireEvent">
            <summary>
            UnWires the events associated with <see cref="T:Syncfusion.SfDataGrid.GridColumnSizer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.RefreshColumnSizer(System.Double)">
            <summary>
            Refreshes the GridColumns in the view with respect to the given view size.
            </summary>
            <param name="viewSize">size the SfDataGrid is rendered for</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetColumnWidth(Syncfusion.SfDataGrid.GridColumn,System.Double)">
            <summary>
            Sets the given width to the specified <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/>.
            </summary>
            <param name="column">A <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/> object.</param>
            <param name="width">The width for the column.</param>
            <returns>Returns the actual width of the <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.RefreshDataRowsBounds">
            <summary>
            Refresh the data row bounds
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetFinalWidth(Syncfusion.SfDataGrid.GridColumn,System.Double)">
            <summary>
            Gets the final width after comparing the minimum, maximum and actual width of the column
            </summary>
            <param name="column">current column</param>
            <param name="width">current width</param>
            <returns>Returns the final width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetColumnToFill">
            <summary>
            Gets the column to fill the remaining view port size based on column sizer.
            </summary>
            <returns>the column to fill.</returns>        
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.Refresh(System.Double)">
            <summary>
            Refreshes the GridColumns in the view with respect to the given view size.
            </summary>
            <param name="viewSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateColumnSizerWidth(System.Double)">
            <summary>
            Calculates the width for the <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> in a <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="viewSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.IsFillOrAutoFillColumn(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Gets a value indicating whether the current column has column sizer auto fill
            </summary>
            <param name="column">current column</param>
            <returns>Returns a value indicating whether auto fill column is set for current column</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetColumnWidthBasedOnGridColumnSizer(System.Double,System.Collections.Generic.List{Syncfusion.SfDataGrid.GridColumn},Syncfusion.SfDataGrid.GridColumn,System.Double)">
            <summary>
            Sets the width for the GridColumns based on the <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer"/>.
            </summary>
            <param name="totalColumnsSize">The total size of the columns.</param>
            <param name="calculatedColumns">The list of calculated columns.</param>
            <param name="lastColumn">The last column.</param>
            <param name="viewSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateAutoFitWidth(Syncfusion.SfDataGrid.GridColumn,System.Boolean)">
            <summary>
            Calculates and returns the auto width of the header cell and grid cell
            </summary>
            <param name="column">current column</param>
            <param name="isAuto">checks whether columnsizer is auto</param>
            <returns>Returns the auto width of the header cell and grid cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetColumnWidth(Syncfusion.SfDataGrid.GridColumn,System.Double)">
            <summary>
            Gets the column width
            </summary>
            <param name="column">current column</param>
            <param name="columnWidth">current width</param>
            <returns>Returns the column width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateHeaderWidth(Syncfusion.SfDataGrid.GridColumn,System.Boolean)">
            <summary>
            Calculates the header width
            </summary>
            <param name="column">current column</param>
            <param name="setWidth">current width</param>
            <returns>Returns the header width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetHeaderCellWidth(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Gets the header cell width
            </summary>
            <param name="column">current column</param>
            <returns>Returns the header cell width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateCellWidth(Syncfusion.SfDataGrid.GridColumn,System.Boolean)">
            <summary>
            Calculates the width of the grid cell
            </summary>
            <param name="column">current column</param>
            <param name="setWidth">Indicates whether the calculated width can be set to the column</param>
            <returns>Returns the width of the grid cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetCellWidth(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Gets the cell width
            </summary>
            <param name="column">current column</param>
            <returns>Returns the cell width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateResultWidth(Syncfusion.SfDataGrid.GridColumn,System.Object,System.Double,System.Double)">
            <summary>
            Calculates and returns the greatest width among the default column width, measured width and the actual width
            </summary>
            <param name="column">current column</param>
            <param name="data">row data</param>
            <param name="resultWidth">The final width</param>
            <param name="measuredWidth">measured width</param>
            <returns>Returns the greatest width among the default column width, measured width and the actual width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateCellSize(System.Drawing.Size,Syncfusion.SfDataGrid.GridColumn,System.Object,Syncfusion.SfDataGrid.GridQueryBounds,System.Double)">
            <summary>
            Gets the size of the cell to measure the width of the specified column.
            </summary>
            <param name="cellSize">size of the cell</param>
            <param name="column">
            The corresponding column to measure its cell size.
            </param>
            <param name="data">
            The corresponding data to measure cathe text size in cell.
            </param>
            <param name="bounds">Indicates a value whether to measure width or height</param>
            <param name="measuredWidth">Measured width</param>
            <returns>
            Returns the size of the cell.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetDisplayText(Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Gets the display text of cell for the specified column and record.
            </summary>
            <param name="column">
            The corresponding column to get the display text of cell.
            </param>
            <param name="record">
            The corresponding record to get the display text.
            </param>
            <returns>
            Returns the display text of the corresponding column.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.GetControl(System.Type)">
            <summary>
            Gets the content control to measure the template when column sizer is Auto.
            </summary>
            <param name="type">type of the view</param>
            <returns>Instance of the view as object</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.MeasureTemplate(Syncfusion.SfDataGrid.GridColumn,System.Object,Syncfusion.SfDataGrid.GridQueryBounds)">
            <summary>
            Measures the size of the template when the column sizer is <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer.Auto"/>.
            </summary>        
            <param name="column">
            The corresponding column to measure the template.
            </param>        
            <param name="rowData">Row data vaue</param>
            <param name="bounds">GridQueryBounds instance</param>
            <returns>
            Returns the size of template.
            </returns>       
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.MeasureHeaderTemplate(Syncfusion.SfDataGrid.GridColumn,Syncfusion.SfDataGrid.GridQueryBounds)">
            <summary>
            Measures the size of the template when the column sizer is <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer.Auto"/>.
            </summary>        
            <param name="column">
            The corresponding column to measure the template.
            </param> 
            <param name="bounds">Indicates a value whether to measure width or height</param>
            <returns>
            Returns the size of template.
            </returns>       
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetStarWidthForColumns(System.Double,System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.GridColumn})">
            <summary>
            Sets star width for the remaining columns for which the widths are yet to be assigned.
            </summary>
            <param name="columnsWidth">The width of the columns.</param>
            <param name="columns">The collection of remaining <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.SetColumnWidthForRemainingColumns(System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.GridColumn})">
            <summary>
            Sets the default column width for the columns that are yet to be assigned width after applying column sizer calculations.
            </summary>
            <param name="remainingColumns">The collection of remaining <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateWidth(System.String,System.Single,Android.Graphics.Typeface,Syncfusion.SfDataGrid.Thickness)">
            <summary>
            Measures the width of the text based on size, font and padding
            </summary>
            <param name="text">the text to be measured</param>
            <param name="textSize">size of the font</param>
            <param name="font">applied font style</param>
            <param name="padding">applied padding</param>
            <returns>Returns the width of the text based on size, font and padding</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.CalculateHeight(System.String,Syncfusion.SfDataGrid.GridColumn,System.Int32,System.Double)">
            <summary>
            Calculates the height of the given column based on the padding and text
            </summary>
            <param name="text">cell value</param>
            <param name="column">current column</param>
            <param name="rowIndex">row index</param>
            <param name="padding">current padding</param>
            <returns>Returns the height of the given column based on the padding and text</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.MeasureTextWidth(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.SfDataGrid.GridColumn,System.String)">
            <summary>
            Measures and returns the text width based on the cell value
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="column">current column</param>
            <param name="text">current column text</param>
            <returns>Returns the text width based on the cell value</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumnSizer.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSummaryRow">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.Data.ISummaryRow"/> that contains properties exposed through ISummaryRow
            for getting information on the summary values to be computed for the Groups in <see cref="T:Syncfusion.Data.TopLevelGroup"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSummaryRow.#ctor">
            <summary>
            Initializes a new instance of the GridSummaryRow class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryRow.Name">
            <summary>
            Gets or sets the name of the summary row.
            </summary>
            <value>The name of the summary row.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.Name = "CaptionSummary";
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow">
            <summary>
            Gets or sets a value indicating whether to show summary in row. By setting the <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> to true, you can display the 
            summary information in the row, by defining the <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.Title"/> based on <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.Name"/>.
            </summary>
            <value><b>True</b> if show summary in row, otherwise <b>false</b>.</value>
            <remarks>The caption of the summary can be displayed either in the summary row or summary column, if the caption is displayed in the summary row 
            by setting <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> as true. The summary row defines the <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.Title"/> which makes 
            use of the <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.Name"/> to display its value.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.ShowSummaryInRow = true;
            summaryRow.Title = "Total Salary:{TotalSalary}";
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#defining-summary-for-row"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryRow.SummaryColumns">
            <summary>
            Gets or sets the collection of summary columns in the summary row. The summary columns will be defined and added to the summary row using 
            this property.
            </summary>
            <value>The collection of summary columns in the summary row.</value>
            <example>
             <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryRow.Title">
            <summary>
            Gets or sets the title to be displayed in the summary row. When <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> is true, the title 
            of the summary row will be displayed.The summary row defines the <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.Title"/> which makes use of the 
            <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.Name"/> to display its value.
            </summary>
            <value>The title to be displayed in the summary row.</value>
            <remarks>
            The caption of the summary can be displayed either in the summary row or summary column, if the caption is displayed in the summary row 
            by setting <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> as true. The summary row defines the <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.Title"/> which makes 
            use of the <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.Name"/> to display its value. The title of the summary will be displayed as the caption of the 
            summary row.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.ShowSummaryInRow = true;
            summaryRow.Title = "Total Salary:{TotalSalary}";
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#defining-summary-for-row"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSummaryRow.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSummaryRow.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridGroupSummaryRow">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.SfDataGrid.GridSummaryRow"/> that defines summary information of group summary row in SfDataGrid. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridGroupSummaryRow.#ctor">
            <summary>
            Initializes a new instance of the GridTableSummaryRow class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTableSummaryRow">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.SfDataGrid.GridSummaryRow"/> that defines summary information of table summary row in SfDataGrid. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryRow.#ctor">
            <summary>
            Initializes a new instance of the GridTableSummaryRow class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridTableSummaryRow.DataGrid">
            <summary>
            Gets or sets the <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridTableSummaryRow.Position">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.Position"/> of the table summary row. The table summary row can be displayed either 
            in the top below the header or bottom of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> by using this property.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.Position"/> of the table summary row.
            The default value is <see cref="F:Syncfusion.SfDataGrid.Position.Bottom"/>.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to add table summary rows either at top or bottom positions using 
            <see cref="P:Syncfusion.SfDataGrid.GridTableSummaryRow.Position"/> property.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridTableSummaryRow topSummaryRow = new GridTableSummaryRow();
            topSummaryRow.Position = Position.Top;
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryRow.OnTableSummaryRowPositionChanged(Syncfusion.SfDataGrid.Position)">
            <summary>
            Occurs when the position property is changed.
            </summary>
            <param name="position">The Position.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryRow.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CalculationExtensions">
            <summary>
            Represents a class that implements the calculation for GridUnboundColumn.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.GetCompiledExpression(System.Object,System.Boolean,System.String,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Gets Compiled Expression
            </summary>
            <param name="source">The data</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns Compiled Expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.GetSimpleExpression(System.Object,System.Boolean,System.String,System.Linq.Expressions.ParameterExpression,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Get Simple Expression
            </summary>
            <param name="source">The data</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns Simple Expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.CompileToExpression(System.Object,System.Linq.Expressions.ParameterExpression,System.Boolean,System.String@,System.Char[],System.Char[],Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Compile to Expression
            </summary>
            <param name="source">The data</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="operations">Specifies the operation set to be performed</param>
            <param name="allOperations">Specifies all the available operations</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns the complied expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.CompileToExpressionSingleValue(System.Object,System.Linq.Expressions.ParameterExpression,System.Boolean,System.String@,System.Char[],System.Char[],Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Gets a value whether the complex expression can be converted to a single expression
            </summary>
            <param name="source">The complex expression</param>
            <param name="paramExp">param needs to be added</param>
            <param name="caseSensitive">case sensitive needs to be added</param>
            <param name="formula">formula needs to be added</param>
            <param name="operations">Operation needs to be added</param>
            <param name="allOperations">To be added</param>
            <param name="error">specifies the possible expression error</param>
            <returns>Returns a value whether the complex expression can be converted to a single expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.CoerceType(System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Casting the type according to the expression
            </summary>
            <param name="leftExp">Specifes the left part of expression</param>
            <param name="rightExp">Specifes the right part of expression</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.GetExpression(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,System.String,System.Char,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Gets Expression
            </summary>
            <param name="source">The source.</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="left">Specifes the left part of expression</param>
            <param name="right">Specifes the right part of expression</param>
            <param name="operand">Specifies the operand</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.GetFunctionName(System.Char)">
            <summary>
            Gets function name
            </summary>
            <param name="c">Specifies the character containing the key word for the function</param>
            <returns>Function Name as string</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.GetExpressionPiece(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Gets the expression piece.
            </summary>
            <param name="source">The source.</param>
            <param name="caseSensitive">A boolean value specifying whether to enable case sensitive or not.</param>
            <param name="paramExp">The parameter expression.</param>
            <param name="piece">The piece.</param>
            <param name="error">The expression error.</param>
            <returns>Returns the expression piece.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CalculationExtensions.TokenizeStrings(System.String,Syncfusion.SfDataGrid.ExpressionError@)">
            <summary>
            Tokenize the strings
            </summary>
            <param name="formula">The formula applied</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns the tokenized string</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridUnboundColumn">
            <summary>    
            Represents the column which is used to display additional information in columns which are not bound with data object.
            </summary>
            <remarks>
            It is mandatory to specify the `GridColumn.MappingName` for `GridUnboundColumn` with some name to identify the column. It is not necessary to define name of field in the data object.
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/unbound-column"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridUnboundColumn"/> class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfDataGrid.GridUnboundColumn.CaseSensitive" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfDataGrid.GridUnboundColumn.Expression" -->
        <member name="P:Syncfusion.SfDataGrid.GridUnboundColumn.Error">
            <summary>
            Gets the constants that specify the possible expression error in <see cref="T:Syncfusion.SfDataGrid.GridUnboundColumn"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumn.OnExpressionPropertyChanged(Syncfusion.SfDataGrid.GridUnboundColumn,System.Object,System.Object)">
            <summary>
            Occurs when expression property is changed.
            </summary>
            <param name="column">The GridUnboundColumn as bindable object.</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumn.OnFormatPropertyChanged(Syncfusion.SfDataGrid.GridUnboundColumn,System.Object,System.Object)">
            <summary>
            Occurs when Format property is changed
            </summary>
            <param name="column">The GridUnboundColumn as bindable object.</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumn.ComputeValue(System.Object)">
            <summary>
            Gets Computed value for expression in UnboundColumn
            </summary>
            <param name="record">Specifies the current row data</param>
            <returns>Value of compiled expression as object</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumn.GetFormattedValue(System.Object)">
            <summary>
            Gets the Formatted value for the Content of a record cell in the column based on the Format and CultureInfo of the column.
            </summary>
            <param name="value">The actual value of the record cell in the column.</param>
            <returns>The formatted value based on the Format and CultureInfo properties of the column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridUnboundColumn.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeView">
            <summary>
            Represents a swipe view in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SwipeView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the SwipeView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeView.Visibility">
            <summary>
            Gets or sets the visibility of the swipe view.
            </summary>
            <value>The <see cref="T:Android.Views.ViewStates"/> representing the visibility of the swipe view. 
            The default value is <see cref="F:Android.Views.ViewStates.Visible"/>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SwipeView.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SwipeView.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the Content of a swipe view.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Thickness">
            <summary>
            Defines the thickness around the edges of the grid cell.
            </summary>    
        </member>
        <member name="M:Syncfusion.SfDataGrid.Thickness.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Thickness"/> struct.
            </summary>
            <param name="padding">The padding to be applied to the grid cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the Thickness struct with the specified values.
            </summary>
            <param name="left">The left padding to be applied to the grid cell.</param>
            <param name="top">The top padding to be applied to the grid cell.</param>
            <param name="right">The right padding to be applied to the grid cell.</param>
            <param name="bottom">The bottom padding to be applied to the grid cell.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Thickness.Left">
            <summary>
            Gets or sets the left padding of the cell.
            </summary>
            <value>The left padding of the cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Thickness.Top">
            <summary>
            Gets or sets the top padding of the cell.
            </summary>
            <value>The top padding of the cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Thickness.Right">
            <summary>
            Gets or sets the right padding of the cell.
            </summary>
            <value>The right padding of the cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Thickness.Bottom">
            <summary>
            Gets or sets the bottom padding of the cell.
            </summary>
            <value>The bottom padding of the cell.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Thickness.op_Implicit(System.Double)~Syncfusion.SfDataGrid.Thickness">
            <summary>
            Implicit cast operator for converting the given double value to Thickness.
            </summary>
            <param name="value">The value to be converted to Thickness.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeStartedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SwipeStarted"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipingEventHandler"/>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipeEndedEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeEndedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SwipeEnded"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipeStartedEventHandler"/>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipingEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.Swiping"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipeStartedEventHandler"/>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipeEndedEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeEndedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SwipeEnded"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SwipeEndedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SwipeEndedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeEndedEventArgs.SwipeOffset">
            <summary>
            Gets the swipe offset of the swiped row.
            </summary>
            <value>The swipe offset of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeEndedEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the swiped row.
            </summary>
            <value>The swipe direction of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeEndedEventArgs.RowIndex">
            <summary>
            Gets the row index of the swiped row.
            </summary>
            <value>The row index of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeEndedEventArgs.RowData">
            <summary>
            Gets the underlying data object of the swiped row.
            </summary>
            <value>The underlying data object of the swiped row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeStartedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SwipeStarted"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipingEventArgs"/>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipeEndedEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SwipeStartedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SwipeStartedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.SwipeOffset">
            <summary>
            Gets the swipe offset of the row in which swiping is started.
            </summary>
            <value>The swipe offset of the row in which swiping is started.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the row in which swiping is started.
            </summary>
            <value>The swipe direction of the row in which swiping is started.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.RowIndex">
            <summary>
            Gets the row index of the row in which swiping is started.
            </summary>
            <value>The row index of the row in which swiping is started.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.RowData">
            <summary>
            Gets the underlying data object of the row in which swiping is started.
            </summary>
            <value>The underlying data object of the row in which swiping is started.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipeStartedEventArgs.SwipeOffSet">
            <summary>
            Gets the swipe offset of the row in which swiping is started.
            </summary>
            <value>The swipe offset of the row in which swiping is started.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.Swiping"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipeStartedEventArgs"/>
            <seealso cref="T:Syncfusion.SfDataGrid.SwipeEndedEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SwipingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SwipingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.SwipeOffset">
            <summary>
            Gets the current swipe offset of the row being swiped.
            </summary>
            <value>The current swipe offset of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the swiped row.
            </summary>
            <value>The swipe direction of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.RowIndex">
            <summary>
            Gets the row index of the row being swiped.
            </summary>
            <value>The row index of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.RowData">
            <summary>
            Gets the underlying data object of the row being swiped.
            </summary>
            <value>The underlying data object of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SwipingEventArgs.SwipeOffSet">
            <summary>
            Gets the swipe offset of the row being swiped.
            </summary>
            <value>The swipe offset of the row being swiped.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IVisibility">
            <summary>
            Defines the Visibility property of the element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IVisibility.Visibility">
            <summary>
            Gets or sets the <see cref="T:Android.Views.ViewStates"/> representing the visibility of the element.
            </summary>
            <value>The <see cref="T:Android.Views.ViewStates"/> representing the visibility of the element.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.BorderView">
            <summary>
            Class that represents the border of the view.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.BorderView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the BorderView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.BorderView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the BorderView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.BorderView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the BorderView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style attribute.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.BorderView.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the BorderView class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/></param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.BorderView.PaintBorder">
            <summary>
            Gets or sets the paint border
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.BorderView.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
            <value>The border color.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.BorderView.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders for the view is drawn here.
            </summary>
            <param name="canvas">The <see cref="T:Android.Graphics.Canvas"/> on which the background will be drawn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.BorderView.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DragView">
            <summary>
            Class that represents the view of the dragging row or column.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DragView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the DragView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DragView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the DragView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DragView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the DragView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style attribute.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DragView.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the DragView class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/></param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DragView.DragTextView">
            <summary>
            Gets or sets the drag view text
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DragView.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DragView.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the child views.
            </summary>
            <param name="changed">A boolean value indicating whether it is a new size or position for this view.</param>
            <param name="l">A value that represents the x coordinate of the child.</param>
            <param name="t">A value that represents the y coordinate of the child.</param>
            <param name="r">A value that represents the width of the child.</param>
            <param name="b">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IndicatorView">
            <summary>
            Class that represents the indicator view of the dragging row and column.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IndicatorView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the IndicatorView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IndicatorView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the IndicatorView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IndicatorView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the IndicatorView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IndicatorView.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the IndicatorView class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IndicatorView.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the child views.
            </summary>
            <param name="changed">A boolean value indicating whether it is a new size or position for this view.</param>
            <param name="l">A value that represents the x coordinate of the child.</param>
            <param name="t">A value that represents the y coordinate of the child.</param>
            <param name="r">A value that represents the width of the child.</param>
            <param name="b">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ResizingIndicatorView">
            <summary>
            Class that represents the indicator view for column resizing.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ResizingIndicatorView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the ResizingIndicatorView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ResizingIndicatorView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the ResizingIndicatorView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ResizingIndicatorView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the ResizingIndicatorView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ResizingIndicatorView.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the ResizingIndicatorView class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ResizingIndicatorView.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the child views.
            </summary>
            <param name="changed">A boolean value indicating whether it is a new size or position for this view.</param>
            <param name="l">A value that represents the x coordinate of the child.</param>
            <param name="t">A value that represents the y coordinate of the child.</param>
            <param name="r">A value that represents the width of the child.</param>
            <param name="b">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSummaryColumn">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.Data.ISummaryColumn"/> that contains properties exposed through ISummaryColumn
            for getting information on the summary values to be computed for the Groups.
            </summary>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#defining-summary-for-column"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSummaryColumn.#ctor">
            <summary>
            Initializes a new instance of the GridSummaryColumn class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.CustomAggregate">
            <summary>
            Gets or sets the custom aggregate of the GridSummary column. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides the built in aggregate types for calculating 
            the values for the GridSummary column in the <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.SummaryType"/> of the GridSummaryColumn. The user can implement their own aggregate 
            function when the built in aggregate function does not meet his requirement using this property. When the user defines his own aggregate 
            function in the <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.CustomAggregate"/>, he needs to set the <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.SummaryType"/> as <see cref="F:Syncfusion.Data.SummaryType.Custom"/>.
            </summary>
            <value>The custom aggregate of the GridSummary column.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to implement your own aggregate functions, when the built-in aggregate functions do not meet your 
            requirement.The user can calculate the summary values based on custom logic using this property. When the user defines his own aggregate 
            function in the <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.CustomAggregate"/>, he needs to set the <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.SummaryType"/> as <see cref="F:Syncfusion.Data.SummaryType.Custom"/>.
            </remarks> 
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "CaptionSummary",
            CustomAggregate  = new CustomAggregate(),
            MappingName = "OrderID",
            SummaryType = SummaryType.Custom
            });
            
            //CustomAggregate.cs
            public class CustomAggregate : ISummaryAggregate
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#custom-summaries"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.Format">
            <summary>
            Gets or sets the format to be applied to the summary value. The user can format the summary value by setting the appropriate format 
            after the aggregate function followed by a colon(:) in <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.Format"/> property.
            </summary>
            <value>The format to be applied to the summary value.</value>  
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "CaptionSummary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#formatting-summary"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.MappingName">
            <summary>
            Gets or sets the mapping name of the summary column, that is used for summary calculation.
            </summary>
            <value>The column name to be used for summary calculation.</value>   
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "CaptionSummary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#defining-summary-for-column"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.Name">
            <summary>
            Gets or sets the name of the summary column that helps to denote the GridSummaryColumn in <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.Title"/>. 
            The user can format the summary value for row using <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.Title"/> when <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> 
            set to true.
            </summary>
            <value>The name of the summary column.</value>
            <remarks>
            The caption of the summary can be displayed either in the summary row or summary column, if the caption is displayed in the summary row 
            by setting <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> as true. The summary row defines the <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.Title"/> which makes 
            use of the <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.Name"/> to display its value.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.ShowSummaryInRow = true;
            summaryRow.Title = "Total Salary:{TotalSalary}";
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#defining-summary-for-row"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSummaryColumn.SummaryType">
            <summary>
            Gets or sets a value indicating the summary type of the GridSummary column for calculating values of the GridSummary column. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides the built in aggregate types for calculating the values for the GridSummary column in the 
            <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.SummaryType"/>. The user can implement their own aggregate function when the built in aggregate 
            function does not meet his requirement using <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.CustomAggregate"/> property.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.SummaryType"/> of the summary column.</value>      
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides the built in aggregate types for calculating the values for the GridSummary column in the 
            <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.SummaryType"/>. The user can implement their own aggregate function when the built in aggregate 
            function does not meet his requirement using <see cref="P:Syncfusion.SfDataGrid.GridSummaryColumn.CustomAggregate"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#formatting-summary"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSummaryColumn.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSummaryColumn.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDataTopLevelGroup">
            <summary>
            Class that represents the top level group of the grid.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTopLevelGroup.#ctor(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.Data.CollectionViewAdv)">
            <summary>
            Initializes a new instance of the GridDataTopLevelGroup class.
            </summary>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</param>
            <param name="collectionView">The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> representing the underlying collection of the datagrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTopLevelGroup.Invalidate(System.Int32,System.Int32)">
            <summary>
            Invalidates the rows that lies between the given index and the count.
            </summary>
            <param name="index">The starting index of th row to be invalidated.</param>
            <param name="count">The number of rows to be invalidated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTopLevelGroup.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.PullToRefreshView">
            <summary>
            Represents a customized view that loads data when an end-user pulls the grid down to refresh.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.PullToRefreshView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the PullToRefreshView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.PullToRefreshView.RefreshCommand">
            <summary>
            Gets or sets the command to be executed when performing the pulling operation to refresh the grid. 
            You must set this property to an <see cref="T:System.Windows.Input.ICommand"/> and the property to true to enable pulling operation in SfDataGrid. 
            This command will be fired upon performing the pulling operation for doing the refreshing operation.
            </summary>
            <value>
            The command to be executed when PullToRefresh action is performed.
            </value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides an option to refresh it when performing the pulling action. 
            <see cref="P:Syncfusion.SfDataGrid.PullToRefreshView.RefreshCommand"/> will be fired to refresh 
            (add, delete or modify the underlying data) the grid. A busy indicator will be displayed to denote the 
            refreshing operation.
            <para/>
            The pull to refresh command can also be set using <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[        
            DataGrid.AllowPullToRefresh = true;
            DataGrid.PullToRefreshView.RefreshCommand = new Command(ExecutePullToRefreshCommand);
            
            private async void ExecutePullToRefreshCommand()
            {
               this.DataGrid.IsBusy = true;
               await Task.Delay(new TimeSpan(0, 0, 5));
               viewModel.ItemsSourceRefresh ();
               this.DataGrid.IsBusy = false;
            }
            
            //Command.cs
            public class Command : ICommand
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.PullToRefreshView.IsBusy">
            <summary>
            Gets or sets a value indicating whether the grid is busy in refreshing the underlying data by 
            executing the <see cref="P:Syncfusion.SfDataGrid.PullToRefreshView.RefreshCommand"/>.
            </summary>
            <value>The boolean value indicating whether the grid is busy in refreshing the underlying data.</value>
            <remarks>
            The pull to refresh view will be in busy state, in the mean time pull to refresh command is executed, 
            Refer the below code example in which the <see cref="P:Syncfusion.SfDataGrid.PullToRefreshView.IsBusy"/> state is set as true before executing the <see cref="P:Syncfusion.SfDataGrid.PullToRefreshView.RefreshCommand"/> 
            and set as false, once the command is executed.
            <para/>
            The busy state of the pull to refresh view can also be tracked by the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.AllowPullToRefresh = true;
            DataGrid.PullToRefreshView.RefreshCommand = new Command(ExecutePullToRefreshCommand);
            
            private async void ExecutePullToRefreshCommand()
            {
               DataGrid.PullToRefreshView.IsBusy = true;
               await Task.Delay(new TimeSpan(0, 0, 5));
               viewModel.ItemsSourceRefresh ();
               DataGrid.PullToRefreshView.IsBusy = false;
            }
            
            //Command.cs
            public class Command : ICommand
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.PullToRefreshView.Progress">
            <summary>
            Gets or sets the progress of pulling in the pull to refresh view can be tracked using this property. 
            Once, the pulling progress is reached 100 %, <see cref="!:PullToRefreshCommand"/> fires, executing the 
            command to be performed when the grid is pulled down for refreshing.
            </summary>
            <value>
            The progress of pulling in the pull to refresh view.
            </value>
            <remarks>
            The user can manually refresh the grid in runtime by setting the <see cref="P:Syncfusion.SfDataGrid.PullToRefreshView.Progress"/> to 100.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.PullToRefreshView.Progress = 100;
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.PullToRefreshView.StartCommand">
            <summary>
            Starts the PullTorefresh command
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DefaultStyle">
            <summary>
            Gets or sets the Default style for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetHeaderBackgroundColor">
            <summary>
            Gets the header's background color.
            </summary>
            <returns>The header's default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetHeaderForegroundColor">
            <summary>
            Gets the header's foreground color.
            </summary>
            <returns>The header's default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetRecordBackgroundColor">
            <summary>
            Gets the record background color.
            </summary>
            <returns>The record default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetRecordForegroundColor">
            <summary>
            Gets the record foreground color.
            </summary>
            <returns>The record's default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetSelectionBackgroundColor">
            <summary>
            Gets the selection background color.
            </summary>
            <returns>The header's default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetSelectionForegroundColor">
            <summary>
            Gets the selection foreground color.
            </summary>
            <returns>The selection default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetCaptionSummaryRowBackgroundColor">
            <summary>
            Gets the captionsummary row background color.
            </summary>
            <returns>The captionsummary row default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetCaptionSummaryRowForegroundColor">
            <summary>
            Gets the captionsummary row foreground color.
            </summary>
            <returns>The captionsummary row default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetTableSummaryBackgroundColor">
            <summary>
            Gets the tablesummary background color.
            </summary>
            <returns>The tablesummary default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetTableSummaryForegroundColor">
            <summary>
            Gets the tablesummary foreground color.
            </summary>
            <returns>The tablesummary default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetCurrentCellBorderColor">
            <summary>
            Gets the current cell border color.
            </summary>
            <returns>The current cell border default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DefaultStyle.GetResizingIndicatorColor">
            <summary>
            Gets the resizing indicator color.
            </summary>
            <returns>The resizing indicator default color.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.AppearanceManager">
            <summary>
            Class which customize the appearance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.AppearanceManager"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.AppearanceManager.NumericButtonSelectionBackground">
            <summary>
            Gets or sets the selection background color for numeric button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.AppearanceManager.NumericButtonSelectionForeground">
            <summary>
            Gets or sets the selection foreground color for numeric button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.AppearanceManager.NumericButtonForegroundColor">
            <summary>
            Gets or sets the foreground color for numeric button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.AppearanceManager.NumericButtonBackgroundColor">
            <summary>
            Gets or sets the background color for numeric button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.AppearanceManager.NavigationButtonColor">
            <summary>
            Gets or sets the color for navigation button
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNumericButtonSelectionBackgroundColor">
            <summary>
            Gets the background color of the selection numeric button.
            </summary>
            <returns>The background color of the selection numeric button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNumericButtonSelectionForegroundColor">
            <summary>
            Gets the foreground color of the selection numeric button.
            </summary>
            <returns>The foreground color of the selection numeric button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNumericButtonBackgroundColor">
            <summary>
            Gets the background color of the numeric button.
            </summary>
            <returns>The background color of numeric button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNumericButtonForegroundColor">
            <summary>
            Gets the foreground color of the numeric button.
            </summary>
            <returns>The foreground color of the numeric button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.AppearanceManager.GetNavigationButtonBackgroundColor">
            <summary>
            Gets the background color of the navigation button.
            </summary>
            <returns>The background color of the navigation button.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.IScrollableElement">
            <summary>
            Initializes the IScrollableElement interface 
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.IScrollableElement.Element">
            <summary>
            Gets the container inside the scrollview
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.IScrollableElement.Index">
            <summary>
            Gets the current element index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.IScrollableElement.IsEllipsisElement">
            <summary>
            Gets a value indicating whether the current element is ellipsis element
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.NumericButton">
            <summary>
            A customized view that reacts to touch events.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.Pager">
            <summary>
            Gets or sets a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.NavigationButtons">
            <summary>
            Gets or sets the navigation buttons, which are used to navigate through pages.
            </summary>
            <value>The navigation buttons, which are used to navigate through pages.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.PageIndex">
            <summary>
            Gets or sets the current page index of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
            <value>The current page index of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.IsCurrentPage">
            <summary>
            Gets or sets a value indicating whether the page is current page or not.
            </summary>
            <value>The boolean value denoting whether the page is current page or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.IsButtonEnabled">
            <summary>
            Gets or sets a value indicating whether to enable/disable the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/>.
            </summary>
            <value><b>True</b>, if the button is enabled, otherwise <b>false</b>. 
            The default value is true.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.IsEllipsisElement">
            <summary>
            Gets or sets a value indicating whether the numeric button is a ellipsis element or not. By default, all the numeric buttons in the 
            page will be in view. However, the user can set auto ellipsis mode by using <see cref="T:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode"/> property, by which 
            the numeric button will be displayed as the ellipsis element.
            </summary>
            <value>The boolean value indicating whether the numeric button is a ellipsis element or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButton.EllipsisPosition">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfDataGrid.DataPager.NumericButton.EllipsisPosition"/> of the numeric button, the ellipsis position may be in the left or 
            right or both ends of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> based on the <see cref="T:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode"/>.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.DataPager.EllipsisPosition"/> of the numeric button.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.OnIsButtonEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            Occurs when button enabled is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.SetBackground">
            <summary>
            Used to set the background color.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.SetAsCurrentPage">
            <summary>
            Sets current page based on selection, whether selected element is ellipsis or numeric button.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders for the numeric button view is drawn here.
            </summary>
            <param name="canvas">The <see cref="T:Android.Graphics.Canvas"/> on which the background will be drawn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of a NumericButton.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.OnTouchEvent(Android.Views.MotionEvent)">
            <summary>
            This method handles the touch event.
            </summary>
            <param name="e">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButton.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PanelElement">
            <summary>
            Serves as a base class for the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/> providing the required properties in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PanelElement.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.PanelElement"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PanelElement.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of a GridCell.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.ScrollableElement">
            <summary>
            Initializes the ScrollableElement class
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ScrollableElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.ScrollableElement"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ScrollableElement.Element">
            <summary>
            Gets or sets the reference of the panel element.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.DataPager.PanelElement"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ScrollableElement.Index">
            <summary>
            Gets or sets the index of the numeric button.
            </summary>
            <value>The index of the numeric button.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ScrollableElement.IsEllipsisElement">
            <summary>
            Gets or sets a value indicating whether the current element is ellipsis element
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ScrollableElement.EllipsisPosition">
            <summary>
            Gets or sets the ellipsis position
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ScrollableElement.IsEnsured">
            <summary>
            Gets or sets a value indicating whether the view is in view or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ScrollableElement.Syncfusion#SfDataGrid#DataPager#IScrollableElement#IsEllipsisElement">
            <summary>
            Gets a value indicating whether the current element is ellipsis element
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ScrollableElement.InitializeElement(System.String,Android.Content.Context)">
            <summary>
            Initializes the views inside the scroll view.
            </summary>
            <param name="elipsisContent">The elipsis content</param>
            <param name="context">The current context</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ScrollableElement.UpdateElement">
            <summary>
            Update the elements in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ScrollableElement.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ScrollableElement.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.SfPagerLabel">
            <summary>
            Initializes the SfPagerLabel class
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfPagerLabel.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the SfPagerLabel class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper">
            <summary>
            Represents the wrapper class that implements the <see cref="T:Syncfusion.Data.PagedCollectionView"/> to create a queryable collection based on which data 
            manipulation is performed.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.dataGrid">
            <summary>
            Contains the reference of the SfDataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.#ctor">
            <summary>
            Initializes a new instance of the GridPagedCollectionViewWrapper class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the GridPagedCollectionViewWrapper class using the specified source.
            </summary>
            <param name="sender">The <see cref="T:System.Linq.Enumerable"/> collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.GetUnboundFunc(Syncfusion.SfDataGrid.GridUnboundColumn)">
            <summary>
            Gets Unbound Func Value for sorting and grouping
            </summary>
            <param name="column">Specifies the current grid column</param>
            <returns>Returns the unbound Func Value for sorting and grouping</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.MoveToPage(System.Int32)">
            <summary>
            Moves to the given page index. This method can be used to move to the desired page.
            </summary>
            <param name="pageIndex">The destination page index to be reached.</param>
            <returns>A boolean value denoting whether the page is moved or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.NestedGridValidation(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            To be added
            </summary>
            <param name="sfdatagrid">SfDataGrid instance</param>
            <returns>Returns the nested grid validation</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.GetFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns an Expression Func for the given property name, data operation and the reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode, 
            value mode or mapping name.</param>
            <returns>Expression Func for the given property name, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for the property name, data operation and reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Expression Func for the given property name, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.GetDisplayValueFunc(System.String,Syncfusion.Data.DataOperation)">
            <summary>
            Returns a Func for getting the display value for the given property and data operation.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <returns>Func for getting the display value for the given property and data operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.CreateItemPropertiesProvider">
            <summary>
            Method to create the item properties provider for the GridPagedCollectionViewWrapper. 
            </summary>
            <returns>Returns the item properties provider for the GridPagedCollectionViewWrapper. </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.RemoveRecord(System.Object)">
            <summary>
            Method to remove the record from the bound source.
            </summary>
            <param name="record">current record</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.CreateRecords">
            <summary>
            Create records list based on the source provided by view.
            </summary>
            <returns>
            Returns RecordsList.
            </returns>
            <remarks>
            Creates <see cref="T:Syncfusion.Data.VirtualRecordsList"/> when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.CreateTopLevelGroup">
            <summary>
            Creates TopLevelGroup while grouping for view.
            </summary>
            <returns>Returns TopLevelGroup.</returns>
            <remarks>
            Creates <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup"/> when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>  
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.SetDataGrid(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> is updated. When view is reused, need to update the grid.
            </summary>  
            <param name="grid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode">
            <summary>
             Defines constants that describes the possible display mode for <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.None">
            <summary>
            Do not display any page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.First">
            <summary>
            Displays only the first page button.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.Last">
            <summary>
            Displays only the last page button.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.Previous">
            <summary>
            Displays only the previous page button.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.Next">
            <summary>
            Displays only the next page button.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.Numeric">
            <summary>
            Displays only the numeric page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.FirstLast">
            <summary>
            Displays the first and last page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.PreviousNext">
            <summary>
            Displays the previous and next page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.FirstLastNumeric">
            <summary>
            Displays the first, last and numeric page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.PreviousNextNumeric">
            <summary>
            Displays the previous, next and numeric page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.FirstLastPreviousNext">
            <summary>
            Displays the first, last, previous and next page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode.FirstLastPreviousNextNumeric">
            <summary>
            Displays the first, last, numeric, previous and next page buttons.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode">
            <summary>
            Defines constants that describes the possible ellipsis mode for a <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/> in the scrollable panel of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode.None">
            <summary>
            Specifies that ellipsis mode is not applied to the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/>, all numeric buttons will be in view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode.Before">
            <summary>
            Specifies that the first <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/> of the pager will be displayed as ellipsis content, which upon clicking navigates to a page based 
            on <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.NumericButtonCount"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode.After">
            <summary>
            Specifies that the last <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/> in view will be displayed as ellipsis content, which upon clicking navigates to a page based on 
            <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.NumericButtonCount"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode.Both">
            <summary>
            Specifies that the first and last <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/> in the view is displayed as ellipsis content, which upon clicking navigates to a page 
            based on <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.NumericButtonCount"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.EllipsisPosition">
            <summary>
            Defines constants that describes the possible position of the ellipsis button in the view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.EllipsisPosition.None">
            <summary>
            Specifies that no ellipsis button is in view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.EllipsisPosition.Left">
            <summary>
            Specifies that the ellipsis button is in left.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.EllipsisPosition.Right">
            <summary>
            Specifies that the ellipsis button is in right.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.NavigationButtons">
            <summary>
            Defines constants that describes the types of numeric buttons available in the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.FirstPageButton">
            <summary>
            Specifies the numeric button at the left extreme position which upon clicking always navigates to the first page.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.PreviousPageButton">
            <summary>
            Specifies the numeric button at the second left extreme position which upon clicking always navigates to the previous page.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.NextPageButton">
            <summary>
            Specifies the numeric button at the second right extreme position which upon clicking always navigates to the next page.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.LastPageButton">
            <summary>
            Specifies the numeric button at the right extreme position which upon clicking always navigates to the last page.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NavigationButtons.NumericButton">
            <summary>
            Specifies the numeric buttons in the scrolling region which navigates to the appropriate page upon clicking based on its index.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.ScrollOrientation">
            <summary>
            Defines constants that describes the possible orientation for <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.ScrollOrientation.Horizontal">
            <summary>
            Sets the orientation of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> to horizontal.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.ScrollOrientation.Vertical">
            <summary>
            Sets the orientation of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> to vertical.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventHandler">
            <summary>
            Delegate for <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndexChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventHandler">
            <summary>
            Delegate for <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndexChanging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventHandler">
            <summary>
            Delegate for <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs">
            <summary>
            Class which contains the arguments for <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndexChanging"/> Event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the PageIndexChangingEventArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs.OldPageIndex">
            <summary>
            Gets the current page index <b>from</b> which the page is navigating.
            </summary>
            <value>
            The current page index <b>from</b> which the page is navigating.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs.NewPageIndex">
            <summary>
            Gets or sets the new page index <b>to</b> which the page is navigating.
            </summary>
            <value>The new page index <b>to</b> which the page is navigating.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs">
            <summary>
            Class which contains the arguments for <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndexChanged"/> Event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the PageIndexChangedEventArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs.OldPageIndex">
            <summary>
            Gets the current page index <b>from</b> which the page is navigated.
            </summary>
            <value>
            The current page index <b>from</b> which the page is navigated.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs.NewPageIndex">
            <summary>
            Gets the new page index <b>to</b> which the page is navigated.
            </summary>
            <value>
            The new page index <b>to</b> which the page is navigated.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs">
            <summary>
            Class which contains the arguments for <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the OnDemandLoadingEventArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs.StartIndex">
            <summary>
            Gets the start index of the corresponding page.
            </summary>
            <value>The start index of the corresponding page.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs.PageSize">
            <summary>
            Gets the number of items to be loaded for that page.
            </summary>
            <value>The number of items to be loaded for that page.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.NotifyPropertyChangeHelper">
            <summary>
            Represents a class that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> to notify clients that a property value has changed.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NotifyPropertyChangeHelper.#ctor">
            <summary>
            Initializes a new instance of the NotifyPropertyChangeHelper class.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataPager.NotifyPropertyChangeHelper.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NotifyPropertyChangeHelper.OnPropertyChanged(System.String)">
            <summary>
            Method that handles the property changes. This method will be fired when the value of the property changes.
            </summary>
            <param name="propertyName">The property name whose value is changed.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.IItemGenerator">
            <summary>
            Initializes the IItemGenerator interface to generate and ensure the items.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.IItemGenerator.Items">
            <summary>
            Gets and maintains the list of items currently in view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.IItemGenerator.PreGenerateItems(System.Int32,System.Int32)">
            <summary>
            Generates the items that occupy the view space for the first time.
            </summary>
            <param name="startIndex">starting index</param>
            <param name="endIndex">ending index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.IItemGenerator.EnsureItems(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Ensures the rows and columns that are available in the view.
            </summary>
            <param name="startIndex">Start index</param>
            <param name="endIndex">End index</param>
            <param name="isInternalOffset">the offset value</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.ItemGenerator">
            <summary>
            Initializes the ItemGenerator class to generate the data's for SfDataGrid
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.#ctor(Syncfusion.SfDataGrid.DataPager.SfDataPager)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.ItemGenerator"/> class
            </summary>
            <param name="pager">The reference of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ItemGenerator.Items">
            <summary>
            Gets and maintains the list of items currently in view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.ItemGenerator.Syncfusion#SfDataGrid#DataPager#IItemGenerator#Items">
            <summary>
            Gets the ItemGenerator class to generate the data's for SfDataGrid
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.PreGenerateItems(System.Int32,System.Int32)">
            <summary>
            Generates the numeric buttons to be loaded in the view for the first time.
            </summary>
            <param name="startIndex">The start index of the numeric buttons to be generated.</param>
            <param name="endIndex">The end index of the numeric buttons to be generated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.EnsureItems(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Ensures the numeric buttons that are available in the view.
            </summary>
            <param name="startIndex">The start index of the numeric buttons to be ensured.</param>
            <param name="endIndex">The end index of the numeric buttons to be ensured.</param>
            <param name="isInternalOffset">The boolean value indicating whether it is internal offset or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.CreateItem(System.Int32)">
            <summary>
            Initializes a new instance for ScrollableElement class
            </summary>
            <param name="index">current index</param>
            <returns>Returns the Scrollable element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.GenerateEllipsisElement(Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode)">
            <summary>
            Creates and add, ellipsisElement  to the panel.
            </summary>
            <param name="mode">Defines constants that describes the possible ellipsis mode for a <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/> in the scrollable panel of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.CreateEllipsisElement(Syncfusion.SfDataGrid.DataPager.EllipsisPosition,System.Int32)">
            <summary>
            Creates Ellipsis element
            </summary>
            <param name="position">current ellipsis position</param>
            <param name="index">current index</param>
            <returns>Returns the created ellipsis element</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.UpdateItems(System.Collections.Generic.List{Syncfusion.SfDataGrid.DataPager.ScrollableElement},System.Int32)">
            <summary>
            Updates the NumericButton's PageIndex
            </summary>
            <param name="elements">current element</param>
            <param name="index">current index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.GetActualStartIndex(System.Int32)">
            <summary>
            Gets the actual start index.
            </summary>
            <param name="startIndex">starting index.</param>
            <returns>Returns the actual start index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.GetActualEndIndex(System.Int32)">
            <summary>
            Gets the actual end index.
            </summary>
            <param name="endIndex">End index</param>
            <returns>Returns the actual end index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.ChangeVirtualIndexes">
            <summary>
            Changes the index based on the current offset value of the scroll viewer
            </summary>
            <returns>Returns a boolean value indicating whether the index value is changed.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.OnHighlightForegroundColorChanged(Android.Graphics.Color,Android.Graphics.Color)">
            <summary>
            Occurs when highlight foreground color is changed.
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.ItemGenerator.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PageNavigationController">
            <summary>
            Initializes the PageNavigationController class
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.#ctor(Syncfusion.SfDataGrid.DataPager.SfDataPager)">
            <summary>
            Initializes a new instance of the PageNavigationController class.
            </summary>
            <param name="pager">The reference of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.MoveToPage(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Navigate to the specified page index.
            </summary>
            <param name="pageIndex">current page index.</param>
            <param name="isElipsisClicked">value indicates whether the elipsis is clicked.</param>
            <param name="animateScrolling">value indicates whether the animate scrolling is applied to the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.HideCurrentPage(System.Int32)">
            <summary>
            Hides the current page.
            </summary>
            <param name="pageIndex">current page index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.ShowCurrentPage(System.Int32)">
            <summary>
            Shows the current page
            </summary>
            <param name="pageIndex">current page index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.CheckNewPageIsInView(System.Int32)">
            <summary>
            Gets a value indicating whether new page is in view or not.
            </summary>
            <param name="pageIndex">current page index</param>
            <returns>Returns a value indicating whether new page is in view or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.ScrollToCurrentPage(System.Int32,System.Boolean)">
            <summary>
            Scroll the pager to the current page
            </summary>
            <param name="pageIndex">current page index</param>
            <param name="animateScrolling">value indicates whether the animate scrolling is applied to the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.ScrollThePager(System.Int32,System.Boolean)">
            <summary>
            Scrolls the pager to a given page index
            </summary>
            <param name="pageIndex">current page index</param>
            <param name="animateScrolling">value indicates whether the animate scrolling is applied to the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.ScrollToPosition(System.Double,System.Boolean)">
            <summary>
            Scroll the pager to the cuurent position
            </summary>
            <param name="offSet">The value to be scrolled to</param>
            <param name="animateScrolling">value indicates whether the animate scrolling is applied to the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PageNavigationController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.Footer">
            <summary>
            Initializes the Footer class to add the footer
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Footer.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.Footer"/> class.
            </summary>    
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.Footer.DataPager">
            <summary>
            Gets or sets an instance for <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.Footer.DefaultItemSize">
            <summary>
            Gets or sets the size of the item
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.Footer.FooterPadding">
            <summary>
            Gets or sets the footer padding value.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Footer.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Footer.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the child views.
            </summary>
            <param name="changed">A boolean value indicating whether it is a new size or position for this view.</param>
            <param name="l">A value that represents the x coordinate of the child.</param>
            <param name="t">A value that represents the y coordinate of the child.</param>
            <param name="r">A value that represents the width of the child.</param>
            <param name="b">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Footer.CreateFooterContent">
            <summary>
            Creates the footer content
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Footer.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.Header">
            <summary>
            Initializes the Header class to add header
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Header.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.Header"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.Header.DataPager">
            <summary>
            Gets or sets an instance for <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.Header.HeaderPadding">
            <summary>
            Gets or sets the header padding value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.Header.DefaultItemSize">
            <summary>
            Gets or sets the size of the item
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Header.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Header.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the child views.
            </summary>
            <param name="changed">A boolean value indicating whether it is a new size or position for this view.</param>
            <param name="l">A value that represents the x coordinate of the child.</param>
            <param name="t">A value that represents the y coordinate of the child.</param>
            <param name="r">A value that represents the width of the child.</param>
            <param name="b">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Header.CreateHeaderContent">
            <summary>
            Creates the header content
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.Header.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PagerHorizontalScrollView">
            <summary>
            Represents a customized view that is capable of scrolling horizontally if its content requires.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PagerHorizontalScrollView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the PagerHorizontalScrollView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PagerHorizontalScrollView.DataPager">
            <summary>
            Gets or sets an instance for <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PagerHorizontalScrollView.OnTouchEvent(Android.Views.MotionEvent)">
            <summary>
            This method handles the touch event.
            </summary>
            <param name="e">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PagerHorizontalScrollView.OnScrollChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Method to notify the scrolled changed action.
            </summary>
            <param name="left">The left extent of the view.</param>
            <param name="top">The top extent of the view.</param>
            <param name="oldLeft">The old left extent of the view.</param>
            <param name="oldTop">The old top extent of the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PagerHorizontalScrollView.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.PagerVerticalScrollView">
            <summary>
            Represents a customized view that is capable of scrolling vertically if its content requires.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PagerVerticalScrollView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the PagerVerticalScrollView class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.PagerVerticalScrollView.DataPager">
            <summary>
            Gets or sets an instance for <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PagerVerticalScrollView.OnTouchEvent(Android.Views.MotionEvent)">
            <summary>
            This method handles the touch event.
            </summary>
            <param name="e">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PagerVerticalScrollView.OnScrollChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Method to notify the scrolled changed action.
            </summary>
            <param name="left">The left extent of the view.</param>
            <param name="top">The top extent of the view.</param>
            <param name="oldLeft">The old left extent of the view.</param>
            <param name="oldTop">The old top extent of the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.PagerVerticalScrollView.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel">
            <summary>
            Represents a container that holds the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButton"/> views in a <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.ExtentHeight">
            <summary>
            Gets the extent height of the numeric button panel.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.ExtentWidth">
            <summary>
            Gets the extent width of the numeric button panel.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.PreviousWidth">
            <summary>
            Gets the previous width of the numeric button panel.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.PreviousHeight">
            <summary>
            Gets the previous height of the numeric button panel.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.ItemGenerator">
            <summary>
            Gets the ItemGenerator class to generate the data's for SfDataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.DataPager">
            <summary>
            Gets the reference of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.ScrollViewer">
            <summary>
            Gets the scroll viewer
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.CanScroll">
            <summary>
            Gets or sets a value indicating whether to scroll the content.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.NumericButtonPadding">
            <summary>
            Gets or sets the padding for Numeric button.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.CanHorizontallyScroll">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel"/> can be scrolled horizontally or not.
            </summary>
            <value>A boolean value indicating whether the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel"/> can be scrolled horizontally or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.CanVerticallyScroll">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel"/> can be scrolled vertically or not.
            </summary>
            <value>A boolean value indicating whether the <see cref="T:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel"/> can be scrolled vertically or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.HorizontalOffset">
            <summary>
            Gets the horizontal offset of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
            <value>The horizontal offset of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.VerticalOffset">
            <summary>
            Gets the vertical offset of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
            <value>The vertical offset of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of a numeric button panel.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.SetHorizontalOffset(System.Double)">
            <summary>
            Sets the horizontal offset programmatically.
            </summary>
            <param name="offset">The value indicating the offset.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.SetVerticalOffset(System.Double)">
            <summary>
            Sets the vertical offset programmatically.
            </summary>
            <param name="offset">The value indicating the offset.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.SetHorizontalOffset(System.Double,System.Boolean)">
            <summary>
            Sets the horizontal offset value.
            </summary>
            <param name="offset">current offset value</param>
            <param name="isInternal">The boolean value indicating whether it is internal offset or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.PreGenerateItems">
            <summary>
            Generates the items that occupy the view space for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.InitializeScrollViewerValue">
            <summary>
            Initialize the scroll viewer
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.EnsureItems">
            <summary>
            Ensures whether all the child elements in the view are arranged properly.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.ArrangeItems">
            <summary>
            Arranges and layouts the child elements
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.GetSize(Android.Views.View,System.Drawing.Size@,System.Double@,System.Double@)">
            <summary>
            Gets the size of the line at the given index.
            </summary>
            <param name="originalSize">default size</param>
            <param name="elementSize">current size</param>
            <param name="newViewPortWidth">current width</param>
            <param name="newViewPortHeight">current height</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.ScrollView_Scrolled(Android.Views.ViewGroup)">
            <summary>
            Method which will be fired when the pager is scrolled
            </summary>
            <param name="scrollview">instance for the scrollview</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.GetExtentWidthWithoutPadding">
            <summary>
            Gets the extent width without padding
            </summary>
            <returns>Returns the extent width without padding</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.GetExtentHeightWithoutPadding">
            <summary>
            Gets the extent height without padding
            </summary>
            <returns>Returns the extent height without padding</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.NumericButtonPanel.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.SfDataPager">
            <summary>
            Provides paging functionality for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> that displays records in a paged view.
            </summary> 
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedAttribute">defined attributes</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/></param>
            <param name="definedAttribute">The value indicating the defined attribute.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
             <summary>
             Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
             </summary>
            <param name="javaReference">The refrence to <see cref="T:System.IntPtr"/></param>
            <param name="transfer">The refrence to <see cref="T:Android.Runtime.JniHandleOwnership"/> </param>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndexChanged">
            <summary>
            Occurs when PageIndexChanged. This event fires when the user navigates form one page to another page.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.PageIndexChanged += sfPager_PageIndexChanged;
            
            private void sfPager_PageIndexChanged (object sender, PageIndexChangedEventArgs args)
            {
            // The user can get the old page index and the new page index here.
            }
            ]]></code>
            </example>
            <seealso cref="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndexChanging">
            <summary>
            Occurs when PageIndexChanging. This event fires when the user navigation form one page to another page begins.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.PageIndexChanging += sfPager_PageIndexChanging;
            
            private void sfPager_PageIndexChanging (object sender, PageIndexChangingEventArgs args)
            {
            // The user can get the old page index and get or set the new page index here.
            }
            ]]></code>
            </example>
            <seealso cref="T:Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading">
            <summary>
            Occurs when loading the page on demand. This event fires only when <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.UseOnDemandPaging"/> is enabled.
            </summary>
            <remarks>
            In normal Paging, data collection is entirely loaded initially to the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>. However, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> also 
            allows the user to load the data for the current page dynamically by setting the setting this property to true. To load current page item 
            dynamically you must hook the <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/> event. In the <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/> event, use the 
            <see cref="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.LoadDynamicItems(System.Int32,System.Collections.IEnumerable)"/> method to load the data for the corresponding page in <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.UseOnDemandPaging = true;
            sfPager.OnDemandLoading += sfPager_OnDemandLoading;
            
            private void OnDemandPageLoading(object sender, OnDemandLoadingEventArgs args)
            {
            sfDataPager.LoadDynamicItems(args.StartIndex, source.Skip(args.StartIndex).Take(args.PageSize));
            }
            ]]></code> 
            </example>
            <seealso cref="T:Syncfusion.SfDataGrid.DataPager.OnDemandLoadingEventArgs"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging#on-demand-paging"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.ItemGenerator">
            <summary>
            Gets the ItemGenerator class to generate the data's for SfDataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.ItemsPanel">
            <summary>
            Gets the instance of the container holding the numeric buttons
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.NavigationController">
            <summary>
            Gets the instance of the navigation buttons
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.ScrollView">
            <summary>
            Gets the current scroll view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.EnableGridPaging">
            <summary>
            Gets or sets a value indicating whether to create source from <see cref="T:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper"/> or <see cref="T:Syncfusion.Data.PagedCollectionView"/>.
            </summary>
            <value><b>True</b>, if the source is created from <see cref="T:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper"/>, otherwise <b>false</b>.
            The default value is true.</value>
            <remarks>
            The items can be loaded in the Datapager by two ways: normal paging and on demand paging. 
            In normal paging, all the items are loaded initially when the grid is loaded. In on demand paging, the items are loaded to the grid only 
            when navigating to the page i.e. items are loaded dynamically on demand.
            <para/>
            When <b>Normal paging</b> is used, the source is created from <see cref="T:Syncfusion.SfDataGrid.DataPager.GridPagedCollectionViewWrapper"/>, since it has to load all the 
            items to the grid. When <b>on demand paging</b> is used, the source is created from <see cref="T:Syncfusion.Data.PagedCollectionView"/>, since it has to 
            load the items to the grid for the current page only.
            <para/>
            When <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.EnableGridPaging"/> is set as true, it is necessary to hook the <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/> event to load the items 
            dynamically to the grid and set <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.UseOnDemandPaging"/> to true.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.EnableGridPaging = false;
            sfPager.UseOnDemandPaging = true;
            sfPager.OnDemandLoading += sfPager_OnDemandLoading;
            
            private void OnDemandPageLoading(object sender, OnDemandLoadingEventArgs args)
            {
            sfDataPager.LoadDynamicItems(args.StartIndex, source.Skip(args.StartIndex).Take(args.PageSize));
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.Source">
            <summary>
            Gets or sets the items source of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>. <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> is bind to the observable collection of data.
            This property is set only when normal paging is used, since setting this property loads all the items to the grid initially.
            </summary>
            <value>The items source of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</value>
            <remarks>
            The items source of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> is set to the collection, based on which <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PagedSource"/> is 
            created internally. The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> is set as <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PagedSource"/>.
            <para/>
            The items can be loaded in the Datapager by two ways: normal paging and on demand paging. 
            In normal paging, all the items are loaded initially when the grid is loaded. In on demand paging, the items are loaded to the grid only 
            when navigating to the page i.e. items are loaded dynamically on demand. <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.Source"/> property should not be assigned when 
            on demand paging is used.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging#normal-paging"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging#on-demand-paging"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.DisplayMode">
            <summary>
            Gets or sets the page display mode for the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>. The user can customize the buttons to be displayed in the pager, 
            by using this property. By default all the buttons (first, last, next, previous and numeric buttons) will be in view.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.DataPager.PagerDisplayMode"/> of <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.DisplayMode = PagerDisplayMode.FirstLastNumeric;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.AppearanceManager">
            <summary>
            Gets or sets the appearance manager, <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> enables the user to customize the appearance of the pager by writing a Style 
            class overriding from <see cref="T:Syncfusion.SfDataGrid.DataPager.AppearanceManager"/> and assigning the customized class to this property.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.DataPager.AppearanceManager"/> of <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfDataPager.AppearanceManager = new CustomAppearance();
            
            //CustomAppearance.cs
            public class CustomAppearance : AppearanceManager
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging#custom-appearence"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PagedSource">
            <summary>
            Gets the <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PagedSource"/> of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>, which is assigned to the item source of the datagrid.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.PagedCollectionView"/> of <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</value>
            <remarks>
            The items source of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> is set to the collection, based on which <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PagedSource"/> is 
            created internally. The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> is set as <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PagedSource"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging#normal-paging"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging#on-demand-paging"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageCount">
            <summary>
            Gets or sets the page count, which returns the total number of pages in <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
            <value>The total number of pages in the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageSize">
            <summary>
            Gets or sets the page size, used to set total number of rows to be displayed in the grid.
            </summary>
            <value>The total number of rows to be displayed in the grid.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            sfPager.PageSize = 15;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging#normal-paging"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.NumericButtonCount">
            <summary>
            Gets or sets the number of buttons to be displayed in the view in <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </summary>
            <value>
            The number of buttons to be displayed in the view in <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </value>
            <remarks> if NumericButtonCount is greater than View size, then number of button need to be displayed is calculated based on view size.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            sfPager.PageSize = 15;
            sfPager.NumericButtonCount = 4;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PageIndex">
            <summary>
            Gets or sets the page index, which indicates the current page index.
            </summary>
            <value>The current page index of SfDataPager.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            sfPager.PageIndex = 3;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.AutoEllipsisMode">
            <summary>
            Gets or sets <see cref="T:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode"/>, which indicates the possible ellipsis mode for the numeric 
            button in the scrollable panel of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>. By default, all the numeric buttons in the page will be in view. However, 
            the user can set auto ellipsis mode by using <see cref="T:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode"/> property. 
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode"/> for the numeric button in the SfDataPager.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.AutoEllipsisMode = AutoEllipsisMode.After;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.UseOnDemandPaging">
            <summary>
            Gets or sets a value indicating whether to enable/disable OnDemandPaging. <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> enables the user to generate the items for 
            the current page dynamically by using this property.  When on demand paging is enabled, the generation of items is handled by the 
            <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/> event, hence it is necessary to hook the <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/>. The user cannot assign a value to the 
            <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.Source"/> when using on demand paging, since the items for the current page is generated only when navigated to that page.
            </summary>
            <value><b>True</b> if on demand paging is enabled, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            In normal Paging, data collection is entirely loaded initially to the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>. However, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> also 
            allows the user to load the data for the current page dynamically by setting the setting this property to true. To load current page item 
            dynamically you must hook the <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/> event. In the <see cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/> event, use the 
            <see cref="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.LoadDynamicItems(System.Int32,System.Collections.IEnumerable)"/> method to load the data for the corresponding page in <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.UseOnDemandPaging = true;
            sfPager.OnDemandLoading += sfPager_OnDemandLoading;
            
            private void OnDemandPageLoading(object sender, OnDemandLoadingEventArgs args)
            {
            sfDataPager.LoadDynamicItems(args.StartIndex, source.Skip(args.StartIndex).Take(args.PageSize));
            }
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging#on-demand-paging"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.NumericButtonBackground">
            <summary>
            Gets or sets a Color, which is set as background color of the selected NumericButtons and Navigation Buttons.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.SelectionForeground">
            <summary>
            Gets or sets a Color, which is set as foreground color of the selected NumericButtons.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.AutoEllipsisText">
            <summary>
            Gets or sets the text for the numeric button in auto ellipsis mode. By default, all the numeric buttons in the page will be in view. However, 
            the user can set auto ellipsis mode by using <see cref="T:Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode"/> property. <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> allows the user 
            to customize the text to be displayed in the auto ellipsis mode by using this property.
            </summary>
            <value>The text for the numeric button in auto ellipsis button. 
            The default value is <b>"..."</b>.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.AutoEllipsisMode = AutoEllipsisMode.After;
            sfPager.AutoEllipsisText = "~~~";
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.Orientation">
            <summary>
            Gets or sets the scroll orientation of the DataPager. By default, <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> will scroll horizontally, the user can 
            customize the pager to be scrolled vertically or in both horizontal and vertical directions by using this property.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.DataPager.ScrollOrientation"/> of the SfDataPager. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.DataPager.ScrollOrientation.Horizontal"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Orientation = ScrollOrientation.Both;
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnPagerAppearanceChanged">
            <summary>
            Callback for Pager Appearance changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDisplayModeChanged(Syncfusion.SfDataGrid.DataPager.PagerDisplayMode,Syncfusion.SfDataGrid.DataPager.PagerDisplayMode)">
            <summary>
            Occurs when display mode is changed
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnPageIndexChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when page index is changed
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnSourcePropertyChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Occurs when source property is changed
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.SetAppearance">
            <summary>
            Sets the given style to the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> elements
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnPageSizeChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when page size is changed
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnNumericButtonCountChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when numeric button count is changed
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnAutoEllipsisModeChanged(Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode,Syncfusion.SfDataGrid.DataPager.AutoEllipsisMode)">
            <summary>
            Occurs when auto ellipsis mode is changed
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnAutoEllipsisTextChanged(System.String,System.String)">
            <summary>
            Occurs when auto ellipsis text is changed
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnPageCountChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when page count is changed
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnOrientationChanged(Syncfusion.SfDataGrid.DataPager.ScrollOrientation,Syncfusion.SfDataGrid.DataPager.ScrollOrientation)">
            <summary>
            Occurs when orientation is changed.
            </summary>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.Initiallize">
            <summary>
            Initialize the properties of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.SetScrollOrientationMode">
            <summary>
            Sets the scroll direction of the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.SetVisualState">
            <summary>
            sets the appearance based on the chosed visual state
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.GoToState(Syncfusion.SfDataGrid.DataPager.SfDataPager,System.String)">
            <summary>
            Changes the properties of the buttons based on the visual state
            </summary>
            <param name="sfDataPager">SfDataPager instance</param>
            <param name="disableButtonState">NumericButton state</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.InitiatePageSource(System.Collections.IEnumerable)">
            <summary>
            Initialize the item source for the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>
            </summary>
            <param name="source">The source</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.InitializePageCount(System.Collections.IEnumerable)">
            <summary>
            Initialize the page count
            </summary>
            <param name="source">The source</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.SetDisplayMode(Syncfusion.SfDataGrid.DataPager.PagerDisplayMode)">
            <summary>
            Sets the specified display mode to the pager and numeric buttons
            </summary>
            <param name="displayMode">Defines constants that describes the possible display mode for <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.WireEvents">
            <summary>
            Hooks the required event
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.UnWireEvents">
            <summary>
            Unhooks the specified event
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.RefreshView">
            <summary>
            Refresh the view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.GetScrollerViewSize(System.Double,System.Double)">
            <summary>
            Gets the size of the scrollview based on,total view size , numeric button count , page count
            </summary>
            <param name="totalWidth">total width of the view</param>
            <param name="totalHeight">total height of the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.GetHeaderSize">
            <summary>
            Gets the size of the Header
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.GetFooterSize">
            <summary>
            Gets the size of the Footer
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnAttachedToWindow">
            <summary>
            Occurs when the view is attached to the window. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of the data pager.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToPage(System.Int32,System.Boolean)">
            <summary>
            Moves to the given page index. This method is used to navigate to the desired page programmatically.
            </summary>
            <param name="pageIndex">The page index to move to.</param>
            <param name="isEllipsisElementClicked">The boolean value indicating whether the Ellipsis element is clicked.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToFirstPage">
            <summary>
            Moves to the first page. This method is used to navigate to the first page programmatically.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToLastPage">
            <summary>
            Moves to the last page. This method is used to navigate to the last page programmatically.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToNextPage">
            <summary>
            Moves to the next page. This method is used to navigate to the next page programmatically.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToPreviousPage">
            <summary>
            Moves to the previous page. This method is used to navigate to the previous page programmatically.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToPage(System.Int32)">
            <summary>
            Moves to the given page index. This method is used to navigate to the desired page programmatically.
            </summary>
            <param name="pageIndex">The page index to move to.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.MoveToPage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Call this method to scroll to a particular page
            </summary>
            <param name="oldPageIndex">The old page index</param>
            <param name="pageIndex">current page index</param>
            <param name="animateScrolling">value indicates whether the animate scrolling is applied to the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.LoadDynamicItems(System.Int32,System.Collections.IEnumerable)">
            <summary>
            This method dynamically loads items into the <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.PagedSource"/> on demand. This method is used when <see cref="P:Syncfusion.SfDataGrid.DataPager.SfDataPager.UseOnDemandPaging"/> is 
            enabled to load the items dynamically to the page only when navigating to the page.
            </summary>
            <param name="startIndex">The start index of the items to be loaded.</param>
            <param name="items">The items to be loaded in the page.</param>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#on-demand-paging"/>
            <seealso cref="E:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandLoading"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnPagedSourcePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Callback or Event handler for the PagedSourceProperty Changed
            </summary>
            <param name="sender">SfDataPager instance</param>
            <param name="e">PropertyChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.OnDemandItemsLoading(System.Object,Syncfusion.Data.OnDemandItemsLoadingEventArgs)">
            <summary>
            Event handler for the OnDemandItems loading event
            </summary>
            <param name="sender">SfdataPager instance</param>
            <param name="args">OnDemandItemsLoadingEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.RaisePageIndexChangingEvent(Syncfusion.SfDataGrid.DataPager.PageIndexChangingEventArgs)">
            <summary>
            Raises the event handler for the pageindexchanging event
            </summary>
            <param name="args">PageIndexChangingEvent arguments</param>
            <returns>Returns a boolean value indicates whether page index changing event is called.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.RaisePageIndexChangedEvent(Syncfusion.SfDataGrid.DataPager.PageIndexChangedEventArgs)">
            <summary>
            Raises the event handler for the pageindexchanged event
            </summary>
            <param name="args">PageIndexChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataPager.SfDataPager.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataPager.NamespaceDoc">
             <summary>
             Provides classes, interfaces and enumerators to create <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/> which enable a user with paging functionality for data-bound controls. 
             The user can load the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> in the <see cref="T:Syncfusion.SfDataGrid.DataPager.SfDataPager"/>, which gives a paging support for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
             </summary>
             <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/paging"/>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTableSummaryCellRenderer">
            <summary>
            GridTableSummaryCellRenderer is a class for cell renderer that displays <see cref="T:Android.Widget.TextView"/> in a <see cref="T:Syncfusion.SfDataGrid.GridTableSummaryCell"/>.
            The class provides strong typed override methods for initializing content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridTableSummaryCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.SpannedDataColumn"/> object with the given <see cref="T:Android.Widget.TextView"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">An <see cref="T:Android.Widget.TextView"/> object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.SpannedDataColumn"/> object with the given <see cref="T:Android.Widget.TextView"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">An <see cref="T:Android.Widget.TextView"/> object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCellRenderer.UpdateColumnElement(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the column element of the passed spanned data column.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">The spanned data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates cell value of the spanned data column.
            </summary>
            <param name="dataColumn">The spanned data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.TextView"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Android.Widget.TextView"/> view.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DisposablePaint">
            <summary>
            Represents a drawing paint object in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposablePaint.#ctor">
            <summary>
            Initializes a new instance of the DisposablePaint class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposablePaint.#ctor(Android.Graphics.PaintFlags)">
            <summary>
            Initializes a new instance of the DisposablePaint class.
            </summary>
            <param name="flags">Paint Flags</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposablePaint.#ctor(Android.Graphics.Paint)">
            <summary>
            Initializes a new instance of the DisposablePaint class.
            </summary>
            <param name="paint">Paint instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposablePaint.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the DisposablePaint class.
            </summary>
            <param name="javaReference">IntPtr instance</param>
            <param name="transfer">JniHandleOwnership instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposablePaint.JavaFinalize">
            <summary>
            Invoked when the garbage collector has detected that this instance is no longer reachable.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DisposableTextPaint">
            <summary>
            Represents a drawing text paint object in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableTextPaint.#ctor">
            <summary>
            Initializes a new instance of the DisposableTextPaint class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableTextPaint.#ctor(Android.Graphics.PaintFlags)">
            <summary>
            Initializes a new instance of the DisposableTextPaint class.
            </summary>
            <param name="flags">Paint Flags</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableTextPaint.#ctor(Android.Graphics.Paint)">
            <summary>
            Initializes a new instance of the DisposableTextPaint class.
            </summary>
            <param name="paint">Paint instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableTextPaint.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the DisposableTextPaint class.
            </summary>
            <param name="javaReference">IntPtr instance</param>
            <param name="transfer">JniHandleOwnership instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableTextPaint.JavaFinalize">
            <summary>
            Invoked when the garbage collector has detected that this instance is no longer reachable.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DisposableSpannableStringBuilder">
            <summary>
            Represents a class for text whose content and markup can both be changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableSpannableStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the DisposableSpannableStringBuilder class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableSpannableStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DisposableSpannableStringBuilder class.
            </summary>
            <param name="text">string value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableSpannableStringBuilder.#ctor(Java.Lang.ICharSequence)">
            <summary>
            Initializes a new instance of the DisposableSpannableStringBuilder class.
            </summary>
            <param name="text">ICharSequence text</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableSpannableStringBuilder.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the DisposableSpannableStringBuilder class.
            </summary>
            <param name="text">string value</param>
            <param name="start">position of the start charcter</param>
            <param name="end">position of the end charcter</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableSpannableStringBuilder.#ctor(Java.Lang.ICharSequence,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the DisposableSpannableStringBuilder class.
            </summary>
            <param name="text">ICharSequence text</param>
            <param name="start">position of the start charcter</param>
            <param name="end">position of the end charcter</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableSpannableStringBuilder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the DisposableSpannableStringBuilder class.
            </summary>
            <param name="javaReference">IntPtr instance</param>
            <param name="transfer">JniHandleOwnership transfer</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DisposableSpannableStringBuilder.JavaFinalize">
            <summary>
            Invoked when the garbage collector has detected that this instance is no longer reachable.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SfEditText">
            <summary>
            A customized <see cref="T:Android.Widget.EditText"/> for editing.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfEditText.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SfEditText"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfEditText.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SfEditText"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfEditText.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SfEditText"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfEditText.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SfEditText"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfEditText.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SfEditText"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfEditText.OnFocusChanged(System.Boolean,Android.Views.FocusSearchDirection,Android.Graphics.Rect)">
            <summary>
            Called by the view system when the focus state of this view changes.
            </summary>
            <param name="gainFocus">True if the View has focus; false otherwise.</param>
            <param name="direction">FocusSearchDirection</param>
            <param name="previouslyFocusedRect">Rect</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCell">
            <summary>
            Represents a record cell in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the GridCell class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the GridCell class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value for defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the GridCell class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the GridCell class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCell.PaintText">
            <summary>
            Gets or sets the paint text.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCell.PaintBorder">
            <summary>
            Gets or sets the paint border
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCell.MultiLineTextPaint">
            <summary>
            Gets or sets the MultiLine TextPaint.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCell.MultiLineTextLayout">
            <summary>
            Gets or sets the MultiLine TextLayout.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCell.CaptionSummaryRowControl">
            <summary>
            Gets a new instance of the <see cref="P:Syncfusion.SfDataGrid.GridCell.CaptionSummaryRowControl"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCell.DataColumn">
            <summary>
            Gets the data column associated with the grid cell which contains the details of the column.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> associated with the <see cref="T:Syncfusion.SfDataGrid.GridCell"/>,
            which contains the details of the column.
            </value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.UpdatePaintProperties">
            <summary>
            Updates the paint properties
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.Initialize">
            <summary>
            Initializes the required properties or methods in GridCell.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.GetActualWidth">
            <summary>
            Gets the actual width of the grid cell (considering the padding applied)
            </summary>
            <returns>Returns the actual width of the grid cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.GetActualHeight">
            <summary>
            Gets the actual height of the grid cell (considering the padding applied)
            </summary>
            <returns>Returns the actual height of the grid cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.CalculatePaddingForAlignment">
            <summary>
            Calculates the padding for alignment.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.SetAlignmentForSingleLineText">
            <summary>
            Sets the alignment for single line text
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.SetAlignmentForMultiLineText">
            <summary>
            Sets the alignment for multiple line text
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.CheckIfSelectedRow(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Gets and returns a boolean value incating whether the current row is a selected row.
            </summary>
            <param name="dataColumn">current data column</param>
            <returns>Returns a boolean value incating whether the current row is a selected row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.HandleTouch(Android.Views.MotionEvent)">
            <summary>
            Handles touch for the <see cref="T:Syncfusion.SfDataGrid.GridCell"/>
            </summary>
            <param name="e">Motion Event</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders and the content of the grid cell is drawn here.
            </summary>
            <param name="canvas">The <see cref="T:Android.Graphics.Canvas"/> on which the background will be drawn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of a GridCell.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.OnInterceptTouchEvent(Android.Views.MotionEvent)">
            <summary>
            Occurs when the touch is recognized in the view.
            </summary>
            <param name="ev">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether the touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.OnTouchEvent(Android.Views.MotionEvent)">
             <summary>
             This method handles the touch event.
             </summary>
             <param name="e">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether the touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.PerformClick">
            <summary>
             Call this view's OnClickListener, if it is defined.
            </summary>
            <returns>Return whether to perform click or not</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.OnClick(Android.Views.View)">
            <summary>
            This method arises when the grid cell is clicked.
            </summary>
            <param name="view">The view of the grid cell, which is clicked.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.OnLongClick(Android.Views.View)">
            <summary>
            This method arises when the grid cell is long clicked.
            </summary>
            <param name="v">The view of the grid cell, which is long clicked.</param>
            <returns>Returns a boolean value indicating whether long click is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.ShouldValidateLabelProperties">
            <summary>
            Gets a boolean value indicating whether to set padding for child view or not.
            </summary>
            <returns>Return a boolean value indicating whether to set padding for child view or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCell.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCaptionSummaryCell">
            <summary>
            Represents a caption summary cell of the caption summary row in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the GridCaptionSummaryCell class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCaptionSummaryCell.PaintText">
            <summary>
            Gets or sets the paint text
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCaptionSummaryCell.PaintBorder">
            <summary>
            Gets or sets the paint border
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of a GridCaptionSummaryCell.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.ApplyStyle">
            <summary>
            Applys the style for Captionsummary cell
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.ApplyFont">
            <summary>
            Applys the font style for Captionsummary cell
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders for the caption summary cell is drawn here.
            </summary>
            <param name="canvas">The canvas on which the background will be drawn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.ShouldValidateLabelProperties">
            <summary>
            Gets a boolean value indicating whether to validate the view change in returns also
            </summary>
            <returns>Return a boolean value indicating whether to validate the view change in returns also.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCell.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTableSummaryCell">
            <summary>
            Represents a table summary cell of the table summary row in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the GridTableSummaryCell class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the GridTableSummaryCell class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the GridTableSummaryCell class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the GridTableSummaryCell class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridTableSummaryCell.PaintText">
            <summary>
            Gets or sets the paint text
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridTableSummaryCell.PaintBorder">
            <summary>
            Gets or sets the paint border
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.Initialize">
            <summary>
            Initializes the required properties or methods in GridCell.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.ApplyStyle">
            <summary>
            Applies styles for the paint properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.ApplyFont">
            <summary>
            Applies font styles for the paint properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders for the table summary cell is drawn here.
            </summary>
            <param name="canvas">The canvas on which the background will be drawn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.ShouldValidateLabelProperties">
            <summary>
            Gets a boolean value indicating whether to set padding for child view or not.
            </summary>
            <returns>Return a boolean value indicating whether to set padding for child view or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTableSummaryCell.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.NamespaceDoc">
            <summary>
            Provides classes, interfaces and enumerators to create <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, that enable a user to interact with a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            The grid classes allow a user to manipulate the data and performs the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> operations like sorting, grouping and filtering in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/getting-started"/>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridHeaderCellControl">
            <summary>
            Represents a header cell in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridHeaderCellControl.GetDataColumn">
            <summary>
            Gets the associated DataColumn.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.#ctor(Android.Content.Context)">
             <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridHeaderCellControl"/> class.
             </summary>
             <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.DataColumn">
            <summary>
            Gets the data column associated with the header cell which contains the details of the column.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> associated with the <see cref="T:Syncfusion.SfDataGrid.GridHeaderCellControl"/>,
            which contains the details of the column.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.RowIndex">
            <summary>
            Gets or sets the row index of the header row.
            </summary>
            <value>The row index of the header row.</value>
            <remarks>The header index can also be obtained using the following code example.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            var headerIndex = dataGrid.GetHeaderIndex();
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.ColumnIndex">
            <summary>
            Gets or sets the column index of the header cell.
            </summary>
            <value>The column index of the header cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.GridColumn">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> associated with the header cell, where grid column represents each column in the datagrid.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> associated with the header cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.GridModel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.GridModel"/> of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control, where grid model represents the 
            wrapper class of datagrid, handling the underlying collection and view related operations.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.GridModel"/> of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortDirection">
            <summary>
            Gets or sets the sort direction of the associated <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> which is sorted.
            </summary>
            <value>The sort direction of the associated <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> which is sorted.</value>
            <remarks>The grid column which is sorted can be obtained from the <see cref="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortColumn"/> property 
            of the grid header cell control.</remarks>
            <seealso cref="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortColumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortColumn">
            <summary>
            Gets or sets the column that represents sorting in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection, which contains the 
            columns in the datagrid.
            </summary>
            <value>The column that represents sorting in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection.</value>
            <remarks>The sort direction of the column that represents sorting can be obtained using 
            <see cref="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortDirection"/> property.
            </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.SortAscend">
            <summary>
            Gets or sets the image view representing the sort icon based on the sort direction.
            </summary>
            <value>The image view representing the sort icon based on the sort direction.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.PaintText">
            <summary>
            Gets or sets the paint text
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.PaintBorder">
            <summary>
            Gets or sets the paint border
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.MinimumDraggingThreshold">
            <summary>
            Gets the minimum dragging threshold
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHeaderCellControl.Gridcolumn">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> associated with the header cell.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.Initialize">
            <summary>
            Initializes the required components for the GridHeaderCellControl.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.Sort">
            <summary>
            Method that is used to perform sorting when the header cell is touched. <see cref="!:MakeSort"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.CalculatePaddingForAlignment(Android.Widget.TextView,System.Int32,System.Int32)">
            <summary>
            Calculates the padding for alignment of header cell
            </summary>
            <param name="view">current text</param>
            <param name="width">width of the header cell</param>
            <param name="height">height of the header cell</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders for the header cell is drawn here.
            </summary>
            <param name="canvas">The canvas on which the background will be drawn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            TextViews loaded inside the GridHeaderCellControl is arranged here. Called from VisualContainer's layout
            when this view should assign a size and position to each of its children. Derived classes with children
            should override this method and call layout on each of their children.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">Left position, relative to parent</param>
            <param name="top">Top position, relative to parent</param>
            <param name="right">Right position, relative to parent</param>
            <param name="bottom">Bottom position, relative to parent</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.OnTouchEvent(Android.Views.MotionEvent)">
             <summary>
             This event arises when the header cell is touched.
             </summary>
             <param name="e">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether the touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.HandleTouchForColumnDragAndDrop(Android.Views.MotionEvent)">
            <summary>
            Handles touch for column drag and drop
            </summary>
            <param name="e">Motion Event</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.PerformClick">
            <summary>
             Call this view's OnClickListener, if it is defined.
            </summary>
            <returns>Return whether to perform click or not</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.HandleTouchForResizing(Android.Views.MotionEvent)">
            <summary>
            Handles touch for resizing
            </summary>
            <param name="e">Motion Event</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.OnClick(Android.Views.View)">
            <summary>
            This method arises when the header cell is clicked.
            </summary>
            <param name="view">The view of the header cell, which is clicked.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.OnLongClick(Android.Views.View)">
            <summary>
            This method arises when the grid cell is long clicked.
            </summary>
            <param name="v">The view of the grid cell, which is long clicked.</param>
            <returns>Returns a boolean value indicating whether long click is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.Update">
            <summary>
            Updates the header cell components of a column.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.SortIconVisibility">
            <summary>
            Gets or sets the scroll icon visibility based on the scroll direction
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellControl.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.VirtualizingCellsControl">
            <summary>
            Represents a record row in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.VirtualizingCellsControl"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.IsSwipeCancelled">
            <summary>
            Gets or sets a value indicating whether to cancel swipe or not.
            </summary>
            <value>
            <b>True</b> if the swipe is canceled, otherwise <b>false</b>. 
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.DataGrid">
            <summary>
            Gets the instance of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The instance of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.SwipeDirection">
            <summary>
            Gets or sets the direction of the swiping in the row.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.SwipeDirection"/> in the row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.SwipeOffset">
            <summary>
            Gets or sets the current offset of the row.
            </summary>
            <value>The current offset of the row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.DataContext">
            <summary>
            Gets or sets the data context of the record row.
            </summary>
            <value>The data context of the record row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.ClipRect">
            <summary>
            Gets or sets the clip value of the record row.
            </summary>
            <value>The clip value of the record row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellsControl.SelectionPaint">
            <summary>
            Gets or sets the selection paint of the <see cref="T:Syncfusion.SfDataGrid.VirtualizingCellsControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of a virtualizing cells control.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders for the virtualizing cell is drawn here.
            </summary>
            <param name="canvas">The <see cref="T:Android.Graphics.Canvas"/> on which the background will be drawn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.MeasureItems(System.Int32,System.Int32)">
            <summary>
            Measures the child elements of the <see cref="T:Syncfusion.SfDataGrid.VirtualizingCellsControl"/>
            </summary>
            <param name="widthMeasureSpec">width value</param>
            <param name="heightMeasureSpec">height value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.ArrangeColumns(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Arrange the columns in the current view.
            </summary>
            <param name="changed">indicates whether the swipe offset value is changed or not.</param>
            <param name="left">left value</param>
            <param name="top">top value</param>
            <param name="right">right value</param>
            <param name="bottom">bottom value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.LayoutChildElements(Android.Graphics.Rect,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo,Syncfusion.SfDataGrid.IColumnElement,System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Layouts the children in the current view.
            </summary>
            <param name="rect">Rect value</param>
            <param name="line">VisibleLine Info</param>
            <param name="column">current column</param>
            <param name="lineSize">size of the column</param>
            <param name="bottom">bottom value</param>
            <param name="top">top value</param>
            <param name="clippedWidth">width value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.EndSwipe">
            <summary>
            This method raises when one or more fingers are lifted from the screen.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.LayoutVirtualizingCellsControl">
            <summary>
            Arranges the <see cref="T:Syncfusion.SfDataGrid.VirtualizingCellsControl"/> during swipe operations
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.LayoutSwipeView">
            <summary>
            Layouts the swipeview in the current view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.AssignSwipeContent">
            <summary>
            Gets or sets the visibility of the swipe view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.SwipeStarted">
            <summary>
            Raises the SwipeStarted event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.Swiping">
            <summary>
            Raises the Swiping event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.SwipeEnded">
            <summary>
            Raises the SwipeEnded event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.OnTouchEvent(Android.Views.MotionEvent)">
             <summary>
             This method handles the touch event.
             </summary>
             <param name="e">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether the touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.UpdateVirtualizingCells(System.Func{Syncfusion.SfDataGrid.DataRowBase},System.Func{System.Int32,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo},System.Func{System.Int32,System.Boolean,System.Double})">
            <summary>
            Updates the <see cref="T:Syncfusion.SfDataGrid.VirtualizingCellsControl"/>
            </summary>
            <param name="getRow">current row</param>
            <param name="getVisibleinfo">visible info</param>
            <param name="getColumnsize">current column size</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellsControl.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl">
            <summary>
            Represents a caption summary row in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <remarks>A CaptionSummaryRowControl represents a single grouped data item in a bound data source. 
            Each row contains a covered cell in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> that displays
            a single value based on the grouped data items.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl.ExpandedChanged">
            <summary>
            Represents a method that will handle the <see cref="F:Syncfusion.SfDataGrid.CaptionSummaryRowControl.IsExpandedChanged"/> of the caption summary row.
            </summary>
            <param name="isExpanded">A boolean value indicating whether the group is expanded.</param>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CaptionSummaryRowControl.GroupIcon">
            <summary>
            Gets or sets the sort icon based on the sort direction.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CaptionSummaryRowControl.IsSwipeCancelled">
            <summary>
            Gets or sets value indicate whether to cancel swipe or not.
            </summary>
            <value><b>True</b> if the swipe is canceled, otherwise <b>false</b>. 
            The default is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CaptionSummaryRowControl.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded or collapsed.
            </summary>
            <value><b>True</b> if this instance is expanded, otherwise <b>false</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.UpdateVirtualizingCells(System.Func{Syncfusion.SfDataGrid.DataRowBase},System.Func{System.Int32,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo},System.Func{System.Int32,System.Boolean,System.Double})">
            <summary>
            Gets the row, column size and visiblelineinfo
            </summary>
            <param name="getRow">current row</param>
            <param name="getVisibleinfo">visible info</param>
            <param name="getColumnsize">current column size</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.RaisePointerTouchUp">
            <summary>
            Raise the PointerPressed method in the selection controller
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.UpdateGroupIconSource">
            <summary>
            Gets the Sort Indicator for the column upon sorting.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.CanShowExpanderIcon">
            <summary>
            Gets a boolean value indicating whether to show expander icon.
            </summary>
            <returns>Returns a boolean value indicating whether to show expander icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.OnIsExpandedChanged(System.Boolean,System.Boolean)">
            <summary>
            Occurs when IsExpanded property is changed.
            </summary>
            <param name="oldValue">The oldvalue</param>
            <param name="newValue">The newvalue</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.InitializeGroupIcon">
            <summary>
            Initializes a new instance for the properties of the <see cref="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl.GroupIconView"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl.GroupIconView">
            <summary>
            Class that represents the view of the group icon.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.GroupIconView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl.GroupIconView"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CaptionSummaryRowControl.GroupIconView.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the group icon view.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.TableSummaryRowControl">
            <summary>
            Represents a table summary row in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <remarks>A TableSummaryRowControl represents the summary values of the bound data source based on the <see cref="T:Syncfusion.Data.SummaryType"/>. 
            Each row contains a covered cell in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> that displays
            the summary value of the bound data source based on the <see cref="T:Syncfusion.Data.SummaryType"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.TableSummaryRowControl.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.TableSummaryRowControl"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.TableSummaryRowControl.IsSwipeCancelled">
            <summary>
            Gets or sets a boolean value indicating whether to cancel swipe or not.
            </summary>
            <value><b>True</b> if the swipe is canceled, otherwise, <b>false</b>. 
            The default is <b>true</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.TableSummaryRowControl.LayoutChildElements(Android.Graphics.Rect,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo,Syncfusion.SfDataGrid.IColumnElement,System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Layout each child element in the <see cref="T:Syncfusion.SfDataGrid.TableSummaryRowControl"/>.
            </summary>
            <param name="rect">Rect value</param>
            <param name="line">VisibleLine Info</param>
            <param name="column">current column</param>
            <param name="lineSize">size of the column</param>
            <param name="bottom">bottom value</param>
            <param name="top">top value</param>
            <param name="clippedWidth">width value</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.LoadMoreView">
            <summary>
            Represents a customized view that loads new data items in runtime.
            </summary>
            <remarks>A LoadMoreView represents a customized view that is loaded
            either at the top or bottom based on the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMorePosition"/> property. 
            <para/>
            LoadMore option can be enabled in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control, by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowLoadMore"/> property 
            to <b>true</b> and by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/> property. 
            When the LoadMore is enabled, the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides an option to load 
            a subset of data to its data source in the runtime using the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.LoadMoreView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the def style.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.LoadMoreView.LoadMoreCommand">
            <summary>
            Gets or sets the command to be executed when an end-user taps the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> to load new data items 
            in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.LoadMoreView.IsBusy">
            <summary>
            Gets or sets a value indicating whether the busy state of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> when executing the 
            <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.LoadMoreView.InitLoadMore(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes the load more view with the given references.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the def style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.LoadMoreView.OnLoadMoreTouchEventHandler(System.Object,Android.Views.View.TouchEventArgs)">
            <summary>
            Handles touch for <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/>
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">TouchEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.LoadMoreView.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the content of the load more view.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">A value that represents the x coordinate of the child.</param>
            <param name="top">A value that represents the y coordinate of the child.</param>
            <param name="right">A value that represents the width of the child.</param>
            <param name="bottom">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.LoadMoreView.UpdateLoadMoreStyle(Syncfusion.SfDataGrid.DataGridStyle)">
            <summary>
            Updates the load more style
            </summary>
            <param name="style">DataGridStyle instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.LoadMoreView.SetLoadViewText(System.String)">
            <summary>
            Sets the text for <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/>
            </summary>
            <param name="loadViewText">current instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.LoadMoreView.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridRowHeaderCell">
            <summary>
            Represents a row header cell in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowHeaderCell.#ctor(Android.Content.Context)">
             <summary>
             Initializes a new instance of the GridRowHeaderCell class.
             </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowHeaderCell.PaintBorder">
            <summary>
            Gets or sets the paint border
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowHeaderCell.OnDraw(Android.Graphics.Canvas)">
            <summary>
            The borders for the header cell is drawn here.
            </summary>
            <param name="canvas">The canvas on which the background will be drawn.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataColumn">
            <summary>
            Represents one column of data in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <remarks>The DataColumn is the fundamental building block for creating the schema of a SfDataGrid control. 
            You build the schema by adding one or more DataColumn objects to the VisibleColumns.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Syncfusion.SfDataGrid.DataColumn" /> class from being created.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.#ctor(Android.Content.Context)">
             <summary>
             Initializes a new instance of the DataColumn class.
             </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            View for the associated column element is created and initialized here.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
            <returns>The associated column element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.RefreshCellValue">
            <summary>
            Refreshes the cell value of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumn.UpdateColumn(System.Object)">
            <summary>
            Updates the cell value and the binding context of the column element when scrolling vertically.
            Binding of the column element also updated in the renderer when scrolling horizontally.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataColumnBase">
            <summary>
            Serves as the abstract base class for DataColumn and provides methods and properties to it.
            </summary>
            <remarks>Implements IColumnElement and hence defines properties that must be implemented to generate grid column elements.</remarks>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataColumnBase.FormattedCellValue">
            <summary>
            Gets or sets the formatted cell value of the column.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataColumnBase.PropertyChanged">
            <summary>
            Occurs when the property changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Visibility">
            <summary>
            Gets or sets a value indicating whether the visibility of the column.
            </summary>
            <value>The visibility of the column.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.NeedToRefresh">
            <summary>
            Gets or sets a value indicating whether to refresh the column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.SpannableStringBuilder">
            <summary>
            Gets or sets the value for text whose content and markup can both be changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Context">
            <summary>
            Gets or sets the context for <see cref="T:Syncfusion.SfDataGrid.DataColumnBase"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.ClipRect">
            <summary>
            Gets or sets the clip region that has to be applied to the view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.CellType">
            <summary>
            Gets or sets a value to denote the type of column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.IsEditing">
            <summary>
            Gets or sets a value indicating whether the DataColumn is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.SelectionController">
            <summary>
            Gets or sets a reference to the GridSelectionController instance that handles the selection in a <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.EditingController">
            <summary>
            Gets or sets a reference to the GridEditingController instance that handles the editing in a <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.ColumnIndex">
            <summary>
            Gets the column index of the DataColumn.
            </summary>
            <value>A value that determines the column index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.RowIndex">
            <summary>
            Gets the row index of the DataColumn.
            </summary>
            <value>A value that determines the row index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.GridColumn">
            <summary>
            Gets the GridColumn associated with the DataColumn.
            </summary>
            <value>An object that represents the <see cref="!:SfDataGrid.GridColumn"/> associated with the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.RowData">
            <summary>
            Gets the data object associated with the DataColumn.
            </summary>
            <value>An object that represents the underlying data associated with the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.CellValue">
            <summary>
            Gets or sets the cell value of the column element associated with the DataColumn.
            </summary>
            <value>An object that represents the cell value of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IElement#Element">
            <summary>
            Gets the column element associated with the DataColumn.
            </summary>
            <value>An object that represents the column element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Element">
            <summary>
            Gets the column element associated with the DataColumn.
            </summary>
            <value>An object that represents the column element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IElement#Index">
            <summary>
            Gets the column index of the DataColumn.
            </summary>
            <value>A value that determines the column index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Index">
            <summary>
            Gets the column index of the DataColumn.
            </summary>
            <value>A value that determines the column index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Renderer">
            <summary>
            Gets the grid cell renderer associated with the column element.
            </summary>
            <value>The grid cell renderer associated with the column element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#RowSpan">
            <summary>
            Gets the row span of the column element.
            </summary>
            <value>A value that determines the row span of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.RowSpan">
            <summary>
            Gets or sets the row span of the column element.
            </summary>
            <value>A value that determines the row span of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#ColumnSpan">
            <summary>
            Gets the column span of the column element.
            </summary>
            <value>A value that determines the column span of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.ColumnSpan">
            <summary>
            Gets or sets the column span of the column element.
            </summary>
            <value>A value that determines the column span of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#RowIndex">
            <summary>
            Gets the row index of the DataColumn
            </summary>
            <value>A value that determines the row index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#IsEditing">
            <summary>
            Gets a value indicating whether the DataColumn is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataColumnBase.Syncfusion#SfDataGrid#IColumnElement#ClipRect">
            <summary>
            Gets or sets the clipping value for rect.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnColumnVisibilityChanged">
            <summary>
            Occurs when the ColumnVisibility is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnRowIndexChanged">
            <summary>
            Occurs when the RowIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnColumnIndexChanged">
            <summary>
            Occurs when the ColumnIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnCellValueChanged">
            <summary>
            Occurs when the CellValue is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnRowDataChanged">
            <summary>
            Occurs when the RowData is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnPropertyChanged(System.String)">
            <summary>
            Occurs when the property changed.
            </summary>
            <param name="propertyName">The property name which is changed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.UpdateCellStyle">
            <summary>
            Updates the cell style of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.InitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            Initializes the ColumnElement.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.GetDataColumn">
            <summary>
            Returns an instance of the DataColumnBase class.
            </summary>
            <returns>An instance of the DataColumnBase class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.RaisePointerTouchUp(Android.Views.MotionEvent)">
            <summary>
            Raise the PointerPressed method in the selection controller
            </summary>
            <param name="args">An <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs">PointerRoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.RaiseLongPressedEvent">
            <summary>
            Raise the RaiseGridLongPressed method in the datagrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.RaiseDoubleTappedEvent">
            <summary>
            Raise the RaiseGridDoubleTapped method in the datagrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            View for the associated column element is created and initialized here.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
            <returns>The associated column element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.RefreshCellValue">
            <summary>
            Refreshes the cell value of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.UpdateColumn(System.Object)">
            <summary>
            Updates the cell value and the binding context of the column element when scrolling vertically.
            Binding of the column element also updated in the renderer when scrolling horizontally.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.CompareTo(System.Object)">
            <summary>
            Compares the given object to another object, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given object, 
            zero if this is equal to the given object, or a value greater than zero if this is greater than the given object.
            </summary>
            <param name="obj">An object to be compared with the current object.</param>
            <returns>An integer that indicates the relationship.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataColumnBase.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataRow">
            <summary>
            Represents a row of data in a SfDataGrid control.
            </summary>
            <remarks>The DataRow and DataColumn objects are primary components of a SfDataGrid control.
            The Items collection represents the actual DataRow objects in the SfDataGrid,
            and the VisibleColumns collection contains the <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> objects that describe the schema of the SfDataGrid.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.#ctor">
            <summary>
            Initializes a new instance of the DataRow class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRow.GroupRecordIndex">
            <summary>
            Gets or sets the group record index
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.OnCreateRowElement">
            <summary>
            View for the associated row element is created and initialized here.
            </summary>
            <returns>The associated row element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.OnGenerateVisibleColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the column elements that occupy the view space for the first time.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the column elements that has to be arranged in the view.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateRow">
            <summary>
            Updates the data in the row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.RefreshCellDraw">
            <summary>
            Refreshes the drawing in the cell to update its borders.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateRowStyles">
            <summary>
            Updates the row style applied to the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.CreateIndentColumn(System.Int32)">
            <summary>
            Creates the indent column.
            </summary>
            <param name="index">The index.</param>
            <returns>The indent column.</returns>
            <remarks>Method is held Unimplemented for multiple grouping feature.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.OnRowIndexChanged">
            <summary>
            Occurs when the RowIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.ApplyRowStyle">
            <summary>
            Applies the appropriate background color for the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.CreateColumn(System.Int32,System.Int32)">
            <summary>
            Creates and returns a new instance of the DataColumn class initialized with the required values.
            </summary>
            <param name="index">The column index.</param>
            <param name="columnHeightIncrementation">The column height incrementation.</param>
            <returns>Returns a new instance of the DataColumn class initialized with the required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateColumn(Syncfusion.SfDataGrid.DataColumnBase,System.Int32)">
            <summary>
            Updates an associated DataColumn object with the properties and values based on the new column when scrolling horizontally.
            </summary>
            <param name="dc">A DataColumn object.</param>
            <param name="index">The column index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateRenderer(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Updates the renderer when a DataColumn is reused while scrolling horizontally.
            </summary>
            <param name="dataColumn">The DataColumn instance.</param>
            <param name="column">The associated GridColumn.</param>
            <returns>Returns <b>true</b> if the renderer is different for the reusing and reusable DataColumn objects,
            and <b>false</b> if renderer are same for both DataColumn objects.</returns>
            <remarks>When the method returns <b>true</b> then the column element has to be initialized and if returned <b>false</b>
            then just the Binding alone needs to be updated.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.UpdateRowInfo(System.Int32)">
            <summary>
            Updates the row information and the DataColumn objects associated with the DataRow.
            </summary>
            <param name="rowIndex">The row index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.Indexer(System.Int32)">
            <summary>
            Gets the DataColumn if the cell with the passed index is available in VisibleColumns.
            </summary>
            <param name="index">The columnIndex of the dataColumn that has to be searched for.</param>
            <returns>Returns the DataColumn if the cell with the passed index is available in VisibleColumns.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRow.Indexer(System.Int32,System.Int32)">
            <summary>
            Gets a DataColumn if it is not in view and can be reused. Otherwise returns null.
            </summary>
            <param name="startColumnIndex">The starting column index of the DataColumn in the view.</param>
            <param name="endColumnIndex">The ending column index of the DataColumn in the view.</param>
            <returns>Returns a DataColumn if it is not in view and can be reused. Otherwise returns null.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataRowBase">
            <summary>
            Serves as the abstract base class for GridDataRow and provides methods and properties to it.
            </summary>
            <remarks>Implements IRowElement and hence defines properties that must be implemented to generate grid row elements.</remarks>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.DataRowBase.suspendUpdateStyle">
            <summary>
            Gets or sets a boolean value indicating whether to suspend the update style.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.#ctor">
            <summary>
            Initializes a new instance of the DataRowBase class.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.DataRowBase.PropertyChanged">
            <summary>
            Occurs when the property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.NeedToRefresh">
            <summary>
            Gets or sets a value indicating whether it is need to refresh the data row.
            </summary>
            <value>A boolean value that indicates whether it is need to refresh the data row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.IsEditing">
            <summary>
            Gets or sets a value indicating whether the DataRow is in editing.
            </summary>
            <value><b>True</b> if the row element is in editing, otherwise, <b>false</b>. 
            The default value is <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.RowData">
            <summary>
            Gets or sets the data object associated with the DataRow.
            </summary>
            <value>An object that represents the underlying data associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.IsEnsured">
            <summary>
            Gets or sets a value indicating whether the DataRow is ensured in view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.RowIndex">
            <summary>
            Gets the row index of the DataRow.
            </summary>
            <value>A value that determines the row index of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.RowType">
            <summary>
            Gets the row type (caption row, caption covered row or summary row and etc) of the DataRow.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.RowType"/> of the DataRow.</value>
            <seealso cref="T:Syncfusion.SfDataGrid.RowType"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.ClipRect">
            <summary>
            Gets or sets the clip value of the cell.
            </summary>
            <value>An object that represents the clipping value of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.IsSelectedRow">
            <summary>
            Gets or sets a value indicating whether the DataRow is selected row.
            </summary>
            <value><b>True</b> if the row element is selected; otherwise, <b>false</b>. 
            The default value is <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Visibility">
            <summary>
            Gets or sets a value indicating whether the DataRow can be displayed.
            </summary>
            <value>A boolean value that indicates whether the DataRow can be displayed.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.VisibleColumns">
            <summary>
            Gets the collection of DataColumn objects associated with the DataRow.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IElement#Element">
            <summary>
            Gets the row element associated with the DataRow.
            </summary>
            <value>An object that represents the row element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Element">
            <summary>
            Gets the row element associated with the DataRow.
            </summary>
            <value>An object that represents the row element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IElement#Index">
            <summary>
            Gets the row index of the DataRow.
            </summary>
            <value>A value that determines the row index of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Index">
            <summary>
            Gets the row index of the DataRow.
            </summary>
            <value>A value that determines the row index of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IRowElement#RowRegion">
            <summary>
            Gets the row region of the DataRow.
            </summary>
            <value>An object that represents the RowRegion of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.RowRegion">
            <summary>
            Gets or sets the row region of the DataRow.
            </summary>
            <value>An object that represents the RowRegion of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Level">
            <summary>
            Gets the row level of the DataRow.
            </summary>
            <value>An object that represents the row level of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IRowElement#ArrangeRect">
            <summary>
            Gets or sets the rect for arranging the row element.
            </summary>
            <value>The rect for arranging the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.ArrangeRect">
            <summary>
            Gets or sets the rect for arranging the row element.
            </summary>
            <value>The rect for arranging the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IRowElement#RowType">
            <summary>
            Gets the RowType of the DataRow.
            </summary>
            <value>An object that represents the RowType of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IRowElement#ClipRect">
            <summary>
            Gets or sets the clipping value for rect.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnRowDataChanged">
            <summary>
            Occurs when the RowData is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnRowIndexChanged">
            <summary>
            Occurs when the row index is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnRowVisibilityChanged">
            <summary>
            Occurs when the row visibility is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.ApplyRowStyle">
            <summary>
            Applies the appropriate background color for the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnPropertyChanged(System.String)">
            <summary>
            Occurs when the property is changed.
            </summary>
            <param name="propertyName">The name of the property whose value is changed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.MeasureElement(System.Int32,System.Int32)">
            <summary>
            Measures the element with the given widthMeasureSpec and heightMeasureSpec.
            </summary>
            <param name="widthMeasureSpec">The horizontal space requirements as imposed by the parent.</param>
            <param name="heightMeasureSpec">The vertical space requirements as imposed by the parent.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.ArrangeElement(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Arranges the element in the given position.
            </summary>
            <param name="left">The position to be inserted from the left.</param>
            <param name="top">The position to be inserted from the top.</param>
            <param name="right">The position to be inserted from the right.</param>
            <param name="bottom">The position to be inserted from the bottom.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.UpdateRowStyles">
            <summary>
            Updates the row style applied to the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.InitializeDataRow(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Initializes the DataRow.
            </summary>
            <param name="visibleColumnsLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnCreateRowElement">
            <summary>
            View for the associated row element is created and initialized here.
            </summary>
            <returns>The associated row element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.OnGenerateVisibleColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the column elements that occupy the view space for the first time.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the column elements that has to be arranged in the view.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.UpdateRow">
            <summary>
            Updates the data in the row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.RefreshCellDraw">
            <summary>
            Refreshes the drawing in the cell to update its borders.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.CreateIndentColumn(System.Int32)">
            <summary>
            Creates the indent column.
            </summary>
            <param name="index">The index.</param>
            <returns>The indent column.</returns>
            <remarks>Method is held Unimplemented for multiple grouping feature.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.GetDataRow">
            <summary>
            Returns an instance of the DataRowBase class.
            </summary>
            <returns>An instance of the DataRowBase class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.GetVisibleColumns">
            <summary>
            Gets the list of column elements associated with the DataRow.
            </summary>
            <returns>Returns the list of column elements associated with the DataRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.Tolist(System.Collections.Generic.List{Syncfusion.SfDataGrid.DataColumnBase})">
            <summary>
            Converts the given list of DataColumnBase objects to an IList of IColumnElement and returns it.
            </summary>
            <param name="items">The list of DataColumnBase objects.</param>
            <returns>An IList of IColumnElement objects.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.CollapseColumn(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Collapses the visibility of the given DataColumn.
            </summary>
            <param name="column">A DataColumn instance.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.RowManipulation(Android.Graphics.Rect)">
            <summary>
            Manipulates the position of the DataRow based on the given rectangle value.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>The rectangle value for arranging the DataRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.Syncfusion#SfDataGrid#IRowElement#RowManipulation(Android.Graphics.Rect)">
            <summary>
            Manipulates the position of the DataRow based on the given rectangle value.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>The rectangle value for arranging the DataRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.CompareTo(System.Object)">
            <summary>
            Compares the given object to another object, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given object, 
            zero if this is equal to the given object, or a value greater than zero if this is greater than the given object.
            </summary>
            <param name="obj">An object to be compared with the current object.</param>
            <returns>An integer that indicates the relationship.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataRowBase.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDataRow">
            <summary>
            Serves as the abstract base class for <see cref="T:Syncfusion.SfDataGrid.DataRow"/> and provides methods and properties to it.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDataRow.DataGrid">
            <summary>
            Gets or sets a instance fo the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDataRow.InLayout">
            <summary>
            Gets or sets a value indicating whether the layout pass is inprogrss
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataRow.Indexer(Syncfusion.SfDataGrid.CellType)">
            <summary>
            Gets the DataColumn if the cell with the passed CellType is available in VisibleColumns.
            </summary>
            <param name="cellType">The cellType of the dataColumn that has to searched for.</param>
            <returns>Returns the DataColumn if the cell with the passed CellType is available in VisibleColumns.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataRow.GetRowVisibleLineInfo(System.Int32)">
            <summary>
            Gets the line information of the visible row line at the given index.
            </summary>
            <param name="index">The index of the row whose line information is to be obtained.</param>
            <returns>The line information of the visible row line at the given index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataRow.GetColumnVisibleLineInfo(System.Int32)">
            <summary>
            Gets the line information of the visible column line at the given index.
            </summary>
            <param name="index">The index of the column whose line information is to be obtained.</param>
            <returns>The line information of the visible column line at the given index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataRow.CreateRowHeaderColumn(System.Int32)">
            <summary>
            Creates a row header column at the given index.
            </summary>
            <param name="index">The column index at which the row header is to be added.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataRow.CollapseColumn(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Collapses the visibility of the given data column.
            </summary>
            <param name="column">A data column whose visibility is to be collapsed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataRow.GetColumnSize(System.Int32,System.Boolean)">
            <summary>
            Gets the column size at the given index.
            </summary>
            <param name="index">The index at which the column size is to be obtained.</param>
            <param name="lineNull">A boolean value indicating whether the line is null.</param>
            <returns>The column size at the given index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataRow.GetVisibleLineOrigin">
            <summary>
            Gets the origin of the visible line.
            </summary>
            <returns>The origin of the visible line.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.RowGenerator">
            <summary>
            A class that generates the <see cref="T:Syncfusion.SfDataGrid.DataRow"/> instances in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <remarks>The <see cref="T:Syncfusion.SfDataGrid.DataRow"/> objects are primary row components in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            The items collection represents the collection of DataRow objects in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.RowGenerator"/> class.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> instance.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.RowGenerator.Items">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.SfDataGrid.DataRow"/> objects in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The collection of <see cref="T:Syncfusion.SfDataGrid.DataRow"/> objects in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.RowGenerator.Owner">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.RowGenerator.View">
            <summary>
            Gets the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> which refers to the collection view in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.RowGenerator.Container">
            <summary>
            Gets the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.VisualContainer"/> in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.QueryRowHeight(System.Int32,System.Double@)">
            <summary>
            Raises the QueryRowHeight event and returns a boolean value denoting whether the event is handled.
            </summary>
            <param name="rowIndex">The index of the row which is to be queried.</param>
            <param name="height">The height value that is passed as out parameter.</param>
            <returns>A boolean value denoting whether the event is handled.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UnloadUIElements(Syncfusion.SfDataGrid.DataRowBase,Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Unloads the column in the specified column index from the view
            </summary>
            <param name="row">row data</param>
            <param name="col">specified column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.OnItemsSourceChanged(System.Object,System.Object)">
            <summary>
            Occurs when the SfDataGrid's <see cref="!:ItemsSource"/> property is changed
            </summary>
            <param name="oldValue">The oldvalue.</param>
            <param name="newValue">The newvalue.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.CanRemoveColumn(Syncfusion.SfDataGrid.DataRowBase,System.Int32)">
            <summary>
            Method to decide whether the column at the given index can be removed.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.DataRow"/> instance.</param>
            <param name="columnIndex">The column index.</param>
            <returns>A boolean value denoting whether the column at the given index can be removed.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.RemoveColumnbyIndex(Syncfusion.SfDataGrid.DataRowBase,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the column in the specified column index
            </summary>
            <param name="row">row data</param>
            <param name="columnIndex">specified column index</param>
            <param name="endIndex">end index</param>
            <param name="count">number of columns</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.ReOrderColumns(Syncfusion.SfDataGrid.DataRowBase,System.Int32,System.Int32)">
            <summary>
            Reorders the column elements in the given row.
            </summary>
            <param name="row">A <see cref="!:Syncfusion.SfDataGrid.XForms.DataRow"/> object.</param>
            <param name="endIndex">The end index.</param>
            <param name="count">The number of columns removed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UnloadRowHeader(Syncfusion.SfDataGrid.DataRowBase,Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method to unload the row header from the given <see cref="T:Syncfusion.SfDataGrid.DataRow"/>.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.DataRow"/> object.</param>
            <param name="dc">A <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.GetSummaryRow(System.Int32,Syncfusion.SfDataGrid.Position)">
            <summary>
            Determines the table summary row from the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.TableSummaryRows"/> based on the <see cref="T:Syncfusion.SfDataGrid.Position"/> and the row index passed.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="position">The table summary row position.</param>
            <returns>Returns the table summary row which is determined from the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.TableSummaryRows"/> based on the <see cref="T:Syncfusion.SfDataGrid.Position"/> and the row index passed.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.GetTableSummaryCount(Syncfusion.SfDataGrid.Position)">
            <summary>
            Gets the table summary rows count based on the <see cref="T:Syncfusion.SfDataGrid.Position"/>.
            </summary>
            <param name="position">The table summary position.</param>
            <returns>Returns the table summary rows count based on the <see cref="T:Syncfusion.SfDataGrid.Position"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.CreateHeaderRow(System.Int32,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Creates the header row
            </summary>
            <param name="rowIndex">specified row index</param>
            <param name="visibleColumns">visible columns</param>
            <returns>Returns an instance for the created header row</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.CreateOrReuseTableSummaryRow(Syncfusion.SfDataGrid.DataRowBase,System.Int32,Syncfusion.SfDataGrid.Position)">
            <summary>
            Create the table summary row and updates the required values for that table summary row.
            </summary>
            <param name="dataRow">The data row.</param>
            <param name="rowIndex">The row index.</param>
            <param name="position">The table summary row position.</param>
            <returns>Returns the updated table summary row with required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.CreateDataRow(System.Int32,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.SfDataGrid.RowRegion)">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataRow"/> class initialized with the <see cref="T:Syncfusion.SfDataGrid.RowType"/> as <see cref="F:Syncfusion.SfDataGrid.RowType.DefaultRow"/> 
            and <see cref="T:Syncfusion.SfDataGrid.RowRegion"/> as <see cref="F:Syncfusion.SfDataGrid.RowRegion.Body"/> and other required values.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="visibleColumns">The visible line collection.</param>
            <param name="region">The row region</param>
            <returns>A new instance of the <see cref="T:Syncfusion.SfDataGrid.DataRow"/> class initialized with the <see cref="T:Syncfusion.SfDataGrid.RowType"/> as <see cref="F:Syncfusion.SfDataGrid.RowType.DefaultRow"/> 
            and <see cref="T:Syncfusion.SfDataGrid.RowRegion"/> as <see cref="F:Syncfusion.SfDataGrid.RowRegion.Body"/> and other required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UpdateGroupExpander(Syncfusion.SfDataGrid.SpannedDataRow,Syncfusion.Data.Group)">
            <summary>
            Method which helps to update the expander position and expanded state
            </summary>
            <param name="row">spanned row</param>
            <param name="group">Group instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.GetCoveredColumnSize(System.Int32,System.Int32)">
            <summary>
            Gets the size of the covered cell.
            </summary>
            <param name="start">The start of the covered cell.</param>
            <param name="end">The end of the covered cell.</param>
            <returns>The size of the covered cell.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.CreateFooterRow(System.Int32,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Creates the footer row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="visibleColumns">The visible line collection.</param>
            <returns>Returns an instances for created footer row</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UpdateRow(System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.DataRowBase},System.Int32,Syncfusion.SfDataGrid.RowRegion)">
            <summary>
            Updates a <see cref="!:Syncfusion.SfDataGrid.XForms.DataRow"/> object with the properties and values based on the new row when scrolling vertically.
            </summary>
            <param name="rows">The collection of available rows for reusing.</param>
            <param name="rowIndex">The row index.</param>
            <param name="region">The row region.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UpdateCoveredRow(Syncfusion.SfDataGrid.SpannedDataRow,Syncfusion.Data.NodeEntry)">
            <summary>
            Updates the given spanned data row.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.SpannedDataRow"/> object.</param>
            <param name="datacontext">The <see cref="T:Syncfusion.Data.NodeEntry"/> associated with the given <see cref="T:Syncfusion.SfDataGrid.SpannedDataRow"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.CheckForSelection(Syncfusion.SfDataGrid.DataRowBase)">
            <summary>
            Checks whether the given <see cref="T:Syncfusion.SfDataGrid.DataRow"/> is a selected row.
            </summary>
            <param name="row">DataRowBase instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UpdateDataRow(System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.DataRowBase},System.Int32,Syncfusion.SfDataGrid.RowRegion)">
            <summary>
            Updates the row information and the <see cref="!:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects associated with the DataRow.
            </summary>
            <param name="rows">The collection of available rows for reusing.</param>
            <param name="rowIndex">The row index.</param>
            <param name="region">The row region.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.InitializeIncrementalSource(System.Int32)">
            <summary>
            Initializes the incremental source.
            </summary>
            <param name="visibleRowCount">The visible rows count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.CanUpdateSource(System.Int32)">
            <summary>
            Method to check whether the source can be updated when performing incremental loading operation.
            </summary>
            <param name="endIndex">The end index.</param>
            <returns>A boolean value denoting whether the source can be updated when performing the incremental loading operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.UpdateIncrementalSource">
            <summary>
            Updates the incremental source.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.PreGenerateRows">
            <summary>
            Generates the row elements that occupy the view space for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.EnsureRows(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the row elements that has to be arranged in the view.
            </summary>
            <param name="visibleRows">The visible row line collection.</param>
            <param name="visibleColumns">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the visible columns in each row.
            </summary>
            <param name="visibleColumns">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.ColumnsInserted(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index.
            </summary>
            <param name="index">The index to insert the columns.</param>
            <param name="count">The column lines count to insert.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.ColumnsRemoved(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines starting from the given index.
            </summary>
            <param name="index">The index to remove the columns.</param>
            <param name="count">The column lines count to remove.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.RefreshRowDraw">
            <summary>
            Refreshes the drawing in the row to update the cell borders.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.ApplyColumnSizer(System.Double)">
            <summary>
            Apply column sizer calculations to the grid columns.
            </summary>
            <param name="viewSize">The size of the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.Indexer(System.Int32)">
            <summary>
            Gets the DataRow if the row with the passed index is available in the items.
            </summary>
            <param name="index">The rowIndex of the datarow that has to be searched for.</param>
            <returns>Returns the DataRow if the row with the passed index is available in the items.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.Indexer(System.Int32,Syncfusion.SfDataGrid.RowRegion)">
            <summary>
             Gets the DataRow if the row with the passed index and region is available in the items.
             </summary>
             <param name="index">The rowIndex of the datarow that has to be searched for.</param>
             <param name="region">The region of the dataRow that has to be searched for.</param>
             <returns>Returns the DataRow if the row with the passed index and region is available in the items.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.Indexer(System.Int32,System.Int32)">
            <summary>
             Gets a DataRow if it is not in view and can be reused. Otherwise returns null.
             </summary>
             <param name="actualStartIndex">The starting rowIndex of the dataRow in the view.</param>
             <param name="actualEndIndex">The ending rowIndex of the dataRow in the view.</param>
             <returns>Returns a DataRow if it is not in view and can be reused. Otherwise returns null.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.ColumnIndexer(Syncfusion.SfDataGrid.DataRowBase,System.Int32)">
            <summary>
            Gets the DataColumn if the column with the passed index is available in the VisibleColumns.
            </summary>
            <param name="row">The row in which the column has to be searched for.</param>
            <param name="index">The columnIndex of the dataColumn that has to be searched for.</param>
            <returns>Returns the DataColumn if the column with the passed index is available in the VisibleColumns.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.ColumnInserted(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index.
            </summary>
            <param name="index">The index to insert.</param>
            <param name="count">The column lines count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.ColumnRemoved(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines starting from the given index.
            </summary>
            <param name="index">The index to remove.</param>
            <param name="count">The column lines count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowGenerator.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.RowRegion">
            <summary>
            Describes the possible values for row region. These values are used to update the row region for the row elements in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowRegion.Header">
            <summary>
            Specifies the header region which is frozen at the top of the view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowRegion.Footer">
            <summary>
            Specifies the footer region which is frozen at the bottom of the view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowRegion.Body">
            <summary>
            Specifies the body region which is scrollable in view.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.RowType">
            <summary>
            Describes the possible values for row type. These values are used to update the row type of the row elements in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowType.CaptionRow">
            <summary>
            Specifies the row type of the caption rows when <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> is <b>false</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowType.CaptionCoveredRow">
            <summary>
            Specifies the row type of the caption rows when <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> is <b>true</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowType.TableSummaryRow">
            <summary>
            Specifies the row type of the table summary rows when <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> is <b>false</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowType.TableSummaryCoveredRow">
            <summary>
            Specifies the row type of the table summary rows when <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> is <b>true</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowType.DefaultRow">
            <summary>
            Specifies the row type of the rows in the body region.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowType.HeaderRow">
            <summary>
            Specifies the row type of the header rows in the header region.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowType.SummaryRow">
            <summary>
            Specifies the row type of the summary rows when <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> is <b>false</b>.
            </summary>       
        </member>
        <member name="F:Syncfusion.SfDataGrid.RowType.SummaryCoveredRow">
            <summary>
            Specifies the row type of the summary rows when <see cref="P:Syncfusion.SfDataGrid.GridSummaryRow.ShowSummaryInRow"/> is <b>true</b>.
            </summary> 
        </member>
        <member name="T:Syncfusion.SfDataGrid.IndentColumnType">
            <summary>
            Describes the possible values for the indent column type. These values are used to update the indent column types in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <remarks>
            The indent column types will be used when MultiColumnGrouping support is provided, which is 
            a tentative plan.
            </remarks>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Position">
            <summary>
            Defines the constants that specify whether the TableSummaryRow is positioned at either top or bottom of SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.Position.Bottom">
            <summary>
            Specifies that the table summary row is positioned at the bottom.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.Position.Top">
            <summary>
            Specifies that the table summary row is positioned at the top.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SortClickAction">
            <summary>
            Defines the constants that specify the different click actions available for applying sorting in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SortClickAction.SingleClick">
            <summary>
            Specifies that sorting happens at a single click.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SortClickAction.DoubleClick">
            <summary>
            Specifies that sorting happens at a double click.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SelectionMode">
            <summary>
            Defines constants that specify the selections that are supported by a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SelectionMode.Single">
            <summary>
            Specifies the single selection mode that restricts selection for only one view at a time in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SelectionMode.Multiple">
            <summary>
            Specifies the multiple selection mode that allows selection for multiple views in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SelectionMode.SingleDeselect">
            <summary>
            Specifies the single selection mode that restricts selection for only one view at a time in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            In addition it also lets you de-select the selected row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SelectionMode.None">
            <summary>
            Specifies the none selection mode that restricts selection in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CellBorderStyle">
            <summary>
            Describes the constants based on which the border lines are drawn for SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellBorderStyle.Both">
            <summary>
            Specifies that both vertical and horizontal borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellBorderStyle.Horizontal">
            <summary>
            Specifies that only horizontal borders are visible
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellBorderStyle.Vertical">
            <summary>
            Specifies that only vertical borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellBorderStyle.None">
            <summary>
            Specifies that no borders are visible.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ScrollDirection">
            <summary>
            Defines constants that specify the scroll direction that are supported by a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollDirection.Both">
            <summary>
            Supports scrolling in both horizontal and vertical direction.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollDirection.Horizontal">
            <summary>
            Supports scrolling in horizontal direction.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollDirection.Vertical">
            <summary>
            Supports scrolling in vertical direction.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollDirection.None">
            <summary>
            Do not provide support to scrolling.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.PointerOperation">
            <summary>
            Describes the possible values of pointer operation. These values are used when updating selection in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.PointerOperation.TouchUp">
            <summary>
            Specifies the touch up action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.PointerOperation.TouchDown">
            <summary>
            Specifies the touch down action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.PointerOperation.DoubleTapped">
            <summary>
            Specifies the double tapped action.
            Breaking, DoubleTap is changed as DoubleTapped to code share with Xamarin.Forms files and to maintain common flow b/w Xamarin.Binding and Xamarin.Forms project.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.PointerOperation.Move">
            <summary>
            Specifies the move action.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.TapAction">
            <summary>
            Defines the constants that specify the different tap actions available for entering into edit mode in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.TapAction.OnTap">
            <summary>
            Editing is enabled at single tap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.TapAction.OnDoubleTap">
            <summary>
            Editing is enabled at double tap.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.EditorSelectionBehavior">
            <summary>
            Defines the constants that indicates the position of cursor and selection in edit element when entering edit mode.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.EditorSelectionBehavior.SelectAll">
            <summary>
            Selects all content in the edit element.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.EditorSelectionBehavior.MoveLast">
            <summary>
            Moves the cursor to the last position in the edit element.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridOperation">
            <summary>
            Describes the possible operations in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridOperation.Sorting">
            <summary>
            Specifies the sorting action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridOperation.Filtering">
            <summary>
            Specifies the filtering action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridOperation.Grouping">
            <summary>
            Specifies the grouping action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridOperation.RowHeaderChanged">
            <summary>
            Specifies the row header change.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CollectionChangedReason">
            <summary>
            Describes the possible reasons for collection change in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CollectionChangedReason.RecordCollectionChanged">
            <summary>
            Specifies the record collection change.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CollectionChangedReason.SourceCollectionChanged">
            <summary>
            Specifies the source collection change.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CollectionChangedReason.SelectedItemsCollection">
            <summary>
            Specifies the SelectedItems collection change.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CollectionChangedReason.ColumnsCollection">
            <summary>
            Specifies the Columns collection change.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CollectionChangedReason.DataReorder">
            <summary>
            Specifies the data reorder change.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupingMode">
            <summary>
            Describes the possible grouping modes in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GroupingMode.Single">
            <summary>
            Specifies the single level grouping in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GroupingMode.Multiple">
            <summary>
            Specifies the multiple level grouping in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <remarks>Not yet implemented.</remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ScrollingMode">
            <summary>
            Describes the possible scrolling modes that a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control has.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollingMode.Pixel">
            <summary>
            Lets the grid to scroll based on pixel values.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollingMode.Line">
            <summary>
            Lets the grid to scroll based on line values.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ScrollingMode.PixelLine">
            <summary>
            Lets the grid to scroll based on pixel values and auto scrolls to the Start or End or a row or column based on the clipped value.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.LoadMoreViewPosition">
            <summary>
            Defines the different positions that the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> can have in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.LoadMoreViewPosition.Bottom">
            <summary>
            Positions the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> at the bottom of the DataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.LoadMoreViewPosition.Top">
            <summary>
            Positions the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> at the top of the DataGrid below the header.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ColumnSizer">
            <summary>
            Defines constants that specify how elements in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> are sized.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ColumnSizer.None">
            <summary>
            The unit of measure is a fixed value.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ColumnSizer.LastColumnFill">
            <summary>
            The unit of measure is based on the default column size with Last column fill.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ColumnSizer.Star">
            <summary>
            The unit of measure is a weighted proportion of the available space.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ColumnSizer.Auto">
            <summary>
            The unit of measure is based on the maximum content size of either the header or record data.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.AutoGenerateColumnsMode">
            <summary>
            Describes the possible AutoGenerateColumnsMode in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control based on which columns are auto generated.
            </summary>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#automatic-columns-generation"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.Reset">
            <summary>
            Creates columns for all properties in a data source, retaining the columns added by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.RetainOld">
            <summary>
            Creates columns for all properties in a data source, if the grid doesn't contain any user defined column, else retains only the user defined columns.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.ResetAll">
            <summary>
            Creates columns for all properties in a data source, removing all the old columns.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.SmartReset">
            <summary>
            Creates columns for all properties in a data source, retaining the columns added by the user and the columns with <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> identical to the properties in the binded data source.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.None">
            <summary>
            Keep the columns that are manually defined in <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SwipeDirection">
            <summary>
            Defines constants that specify the swipe directions.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SwipeDirection.Left">
            <summary>
            Specifies that the swiping is made in the left direction.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SwipeDirection.Right">
            <summary>
            Specifies that the swiping is made in the right direction.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SortTapAction">
            <summary>
            Defines the constants that specify the different tap actions available for applying sorting in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SortTapAction.SingleTap">
            <summary>
            Specifies that sorting happens at a single tap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.SortTapAction.DoubleTap">
            <summary>
            Specifies that sorting happens at a double tap.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLinesVisibility">
            <summary>
            Describes the constants based on which the border lines are drawn for SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridLinesVisibility.Both">
            <summary>
            Specifies that both vertical and horizontal borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridLinesVisibility.Horizontal">
            <summary>
            Specifies that only horizontal borders are visible
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridLinesVisibility.Vertical">
            <summary>
            Specifies that only vertical borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridLinesVisibility.None">
            <summary>
            Specifies that no borders are visible.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryColumnDraggingReason">
            <summary>
            Specifies the various reasons for column dragging operation.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryColumnDraggingReason.DragStarted">
            <summary>
            Specifies the dragging operation is initialized on the column.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryColumnDraggingReason.Dragging">
            <summary>
            Specifies the column is being dragged in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryColumnDraggingReason.DragEnded">
            <summary>
            Specifies the column dragging operation is ended.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryRowDraggingReason">
            <summary>
            Specifies the various reasons for row dragging operation.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryRowDraggingReason.DragStarted">
            <summary>
            Specifies the dragging operation is initialized on the row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryRowDraggingReason.Dragging">
            <summary>
            Specifies the row is being dragged in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.QueryRowDraggingReason.DragEnded">
            <summary>
            Specifies the row dragging operation is ended.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.LineBreakMode">
            <summary>
            Defines the constants for text wrapping in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.LineBreakMode.WordWrap">
            <summary>
            Specifies that long text should wrap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.LineBreakMode.NoWrap">
            <summary>
            Specifies that long text should not wrap.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ExpressionError">
            <summary>
            Defines the constants that specify the possible expression error in <see cref="T:Syncfusion.SfDataGrid.GridUnboundColumn"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.None">
            <summary>
            No expression error.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.MissingRightQuote">
            <summary>
            Specifies that error will be occurred when the right quotation is missed in expression.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.MismatchedParentheses">
            <summary>
            Specifies that error will be occurred when the expression has mismatched parentheses.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.CannotCompareDifferentTypes">
            <summary>
            Specifies that error will be occurred when the expression has compared between mismatched types.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.UnknownOperator">
            <summary>
            Specifies that error will be occurred when the expression contains unknown operator.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.NotAValidFormula">
            <summary>
            Specifies that error will be occurred when the expression has an invalid formula.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ExpressionError.ExceptionRaised">
            <summary>
            Specifies that error will be raised when the expression has unknown exception.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridQueryBounds">
            <summary>
            Defines constant that specify whether the column width or height need to be calculated based on the cell content.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridQueryBounds.Width">
            <summary>
            Specifies that the column width has to be calculated based on cell content. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridQueryBounds.Height">
            <summary>
            Specifies that the column height has be calculated based on cell content. 
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.VerticalOverScrollMode">
            <summary>
            Defines constants that specify the effects that are supported by a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control when vertically over-scrolled.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.VerticalOverScrollMode.Bounce">
            <summary>
            Specifies that bounce effect is applied when vertically over-scrolled.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.VerticalOverScrollMode.None">
            <summary>
            Specifies that no effect is applied when vertically over-scrolled.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ResizingMode">
            <summary>
            Defines the constants that specify whether to resize the column on touch-up or touch moved action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ResizingMode.OnTouchUp">
            <summary>
            Specifies that resizing happens on touch-up.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ResizingMode.OnMoved">
            <summary>
            Specifies that resizing happens as the resizing indicator moves.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ProgressStates">
            <summary>
            Defines constants that specify the state of column resizing operation.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ProgressStates.Starting">
            <summary>
            Defines that the resizing operation is about to Start.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ProgressStates.Progressing">
            <summary>
            Defines the column is being resized currently in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.ProgressStates.Completed">
            <summary>
            Defines the column resizing operation is ended.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.UnboundActions">
            <summary>
            Defines the constants that specify the possible actions for Unbound column or Unbound row in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.UnboundActions.QueryData">
            <summary>
            Specifies the action that the value for Unbound column or Unbound row being queried from the user.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.UnboundActions.CommitData">
            <summary>
            Specifies the action that the value is being committed in Unbound column or Unbound row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.UnboundActions.PasteData">
            <summary>
            Specifies the action that the value is being pasted in Unbound column or Unbound row.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CellType">
            <summary>
            Describes the possible values for column type. These values are used to update the column type of the column elements in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellType.HeaderCell">
            <summary>
            Specifies the GridHeaderCell to show the column header.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellType.IndentCell">
            <summary>
            Specifies the GridIndentCell that is used to display the group indent.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellType.GridCell">
            <summary>
            Specifies the GridCell that is used to display the column.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellType.RowHeaderCell">
            <summary>
            Specifies the RowHeader that is used to indicate the status of row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellType.CaptionSummaryCell">
            <summary>
            Specifies the GridCaptionSummaryCell that is used to display the caption of grouped column.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.CellType.TableSummaryCell">
            <summary>
            Specifies the GridTableSummaryCell that used to display the summaries of the DataGrid.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridIndexResolver">
            <summary>
            Represents an extension class that provides resolving methods for a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveToRecordIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved record index for the given row index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="rowIndex">The index of the row.</param>
            <returns>The resolved record index of the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveToRowIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved row index for the given record index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="recordIndex">The record index whose row index is to be obtained.</param>
            <returns>The resolved row index form the given record index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveToRowIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Object)">
            <summary>
            Gets the resolved row index for the given rowData.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="rowData">The row data whose row index is to be obtained.</param>
            <returns>The resolved row index of the given row data.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveStartIndexBasedOnPosition(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the resolved Start index based on the position of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <returns>The resolved start index based on the position of the SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveToGridVisibleColumnIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved visible column index for the given column index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="columnIndex">The column index whose visible column index is to be determined.</param>
            <returns>The resolved visible column index for the given column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveToScrollColumnIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved scroll column index for the given column index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="gridColumnIndex">The column index which is to be resolved to the scroll column index.</param>
            <returns>The resolved scroll column index for the given column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveToStartColumnIndex(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the resolved Start column index in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <returns>The resolved Start column index of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveStartIndexOfGroup(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.Data.Group)">
            <summary>
            Resolves the start index of the specified group.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="group">Specifies the group to get its corresponding Start index.</param>
            <returns>The start index of the specified group; returns -1; if the column is not grouped in SfDataGrid</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.GetHeaderIndex(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the header index in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
            <returns>The header index of the SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.GetVisibleHeaderCount(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the visible header rows count.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <returns>The visible header count.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveToDraggingIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved dragging index for the given row index.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="rowIndex">The row index.</param>
            <returns>The resolved dragging index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridIndexResolver.ResolveToResizingColumnIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved resizing column index for the given column index based on DataGrid's Column collection.
            </summary>
            /// <param name="dataGrid">The SfDataGrid.</param>
            <param name="index">The column index based on DataGrid's Column collection.</param>
            <returns>The resolved resizing column index.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanged"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The SfDataGrid that raises the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanging"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The SfDataGrid that raises the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs">
            <summary>
            Represents the data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanged"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs.#ctor(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the DataGridSortColumnsChangedEventArgs class using the specified values.
            </summary>
            <param name="addedItems">The list of items added for sorting.</param>
            <param name="removedItems">The list of items removed from the sorting.</param>
            <param name="action">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that represents collection changed action i.e. whether an item is added, 
            removed, replaced, reset or moved in the collection.</param>
            <param name="originalSource">The SfDataGrid that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were sorted.
            </summary>
            <value>The list of items added to sorting.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unsorted.
            </summary>
            <value>The list of items removed from sorting.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs.Action">
            <summary>
            Gets the collection changed action i.e. whether an item is added, removed, replaced, reset or moved in the collection.
            </summary>
            <value>Returns the <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that represents the collection changed action.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs">
            <summary>
            Represents the data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanging"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs.#ctor(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs"/> class.
            </summary>
            <param name="addedItems">The list of items added for sorting.</param>
            <param name="removedItems">The list of items removed from the sorting.</param>
            <param name="action">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that represents collection changed action i.e. whether an item is added, 
            removed, replaced, reset or moved in the collection.</param>
            <param name="originalSource">The SfDataGrid that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items to be sorted.
            </summary>
            <value>The list of items added to sorting.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items to be unsorted.
            </summary>
            <value>The list of items removed from sorting.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs.Action">
            <summary>
            Gets the collection changed action i.e. whether an item is added, removed, replaced, reset or moved in the collection.
            </summary>
            <value>Returns the <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that represents the collection changed action.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SortColumnChangedHandleArgs">
            <summary>
            Provides data for the <see cref="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessOnSortChanged(Syncfusion.SfDataGrid.SortColumnChangedHandleArgs)"/> override for processing sorting changes.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SortColumnChangedHandleArgs.#ctor">
            <summary>
            Initializes a new instance of the SortColumnChangedHandleArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SortColumnChangedHandleArgs.ScrollToCurrentItem">
            <summary>
            Gets or sets a value indicating whether to scroll to the current item.
            </summary>
            <value><b>True</b> if need to scroll to the current item; otherwise, <b>false</b>. The default is <b>false</b>.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridColumn">
            <summary>
            Serves as the base class for the different column types of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <remarks>This abstract class provides the base functionality for all <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> columns.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumn.#ctor">
            <summary>
            Initializes a new instance of the GridColumn class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.ColumnSizer">
            <summary>
            Gets or sets the value that indicates how the column width is determined.
            </summary>
            <value>One of the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer"/> enumeration that adjust the column width. The default value is <see cref="!:SfDataGrid.ColumnSizer.None"/>.</value>      
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn();
            numericColumn.ColumnSizer = ColumnSizer.Star;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.LineBreakMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.LineBreakMode"/> for the cells in the column. The user can customize the line breaking mode of 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> by using this property. By default, the word will be wrapped in the record cells, when the text for the record cells 
            exceeds the content area.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.LineBreakMode"/> for the cells in the column. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.LineBreakMode.WordWrap"/></value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                LineBreakMode = LineBreakMode.NoWrap;
                });
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.HeaderTemplate">
            <summary>
            Gets or sets the view used to display the header of the current column. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize the 
            header cell based on your requirement by using this property. 
            </summary>
            <value>The view used to display the header of the current column.</value>
            <example>
            <code lang="C#"><![CDATA[
            TextView textView = new TextView(this);
            textView.Text = "OrderID";
            textView.SetBackgroundColor(Color.Gray);
            
            GridTextColumn column = new GridTextColumn()
            {
                MappingName = "OrderID",
                HeaderTemplate = textView
            };
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#headertemplate"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.ActualWidth">
            <summary>
            Gets the actual width of the grid column.
            </summary>
            <value>The actual width of the grid column.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.LoadUIView">
            <summary>
            Gets or sets a value indicating whether to load UIView or draw cell value in Android. 
            </summary>
            <value>
            <b>True</b> if UIView is loaded in the grid cell, otherwise <b>false</b>.
            The default value is false for Android platform and true for iOS platforms.
            </value>
            <remarks>
            By default, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> draws the value in the cell for Android platform. The user can customize the 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> to load the UIElement for android platform, by setting <see cref="P:Syncfusion.SfDataGrid.GridColumn.LoadUIView"/> as true.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.LoadUIView = true;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.MappingName">
            <summary>
            Gets or sets the mapping name that associates the column with a property in the bound data source.
            </summary>
            <value>The mapping name that associates the column with a property in the data source.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.MappingName = "OrderID";
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#mappingname"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.HeaderText">
            <summary>
            Gets or sets the display text of the column header.
            </summary>
            <value>The display text of the column header. 
            The default value of header text is the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> of the column.</value>
            /// <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.MappingName = "OrderID";
            column.HeaderText = "Order ID";
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#headertext"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.UserCellType">
            <summary>
            Gets or sets the UserCellType of the grid column. This property is used when the user needs a template column. 
            The user can create a template column to load the content of the cell in the GridColumns with your own view by creating 
            custom GridCell to render in the column.
            </summary>
            <value>The type of the cell in which the content of the cell is displayed.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn customerIdColumn = new GridTextColumn ();
            customerIdColumn.UserCellType = typeof(CustomCell);
            customerIdColumn.MappingName = "CustomerID";
            customerIdColumn.HeaderText = "Customer ID";
            DataGrid.Columns.Add(customerIdColumn);
            
            //CustomCell.cs
            public class CustomCell : GridCell
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#templatecolumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.AllowSorting">
            <summary>
            Gets or sets a value indicating whether the column can be sorted or not.
            </summary>
            <value><b>True</b> if sorting for the column is enabled, otherwise <b>false</b>. 
            The default value is true.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows sorting for the column only when both <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSorting"/> 
            and <see cref="P:Syncfusion.SfDataGrid.GridColumn.AllowSorting"/> is true. This enables the user to restrict a particular column from being sorted by setting
            <see cref="P:Syncfusion.SfDataGrid.GridColumn.AllowSorting"/> as false.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.AllowSorting = false;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.Format">
            <summary>
            Gets or sets a value that indicates the format applied for the content of record cells in the column. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables 
            the user to apply Format for the records in the cells by setting this property. 
            <para/>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables the user to populate the data for the <see cref="T:Syncfusion.SfDataGrid.GridUnboundColumn"/> using this property. This 
            property enables the user to format the values of other columns and display the formatted value in unbound column.
            </summary>
            <value>The format applied to the record in the cells.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables the user to apply Format for the records in the cells by setting this property. 
            Assign the FormatString to this property based on the type of the property the GridColumn is associated with to format the value.
            <para/>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables the user to populate the data for the <see cref="T:Syncfusion.SfDataGrid.GridUnboundColumn"/> using this property. This 
            property enables the user to format the values of other columns and display the formatted value in unbound column.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "ShippingDate",
                Format = "dd/MM/yyyy"
                });
            ]]></code>
            </example>
            <example>
            <code lang="C#"><![CDATA[
            GridUnboundColumn DiscountColumn = new GridUnboundColumn()
            {
                MappingName = "DiscountPrice",
                HeaderText = "Discount Price",
                Format = "'{Discount}% for {OrderID}'"
            };
            DataGrid.Columns.Add(DiscountColumn);
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#formatting"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/unbound-column#using-format"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.CultureInfo">
            <summary>
            Gets or sets the Culture used for formatting the content of record cells in the column. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables the user 
            to apply different culture to the records in the cells by setting this property.
            </summary>
            <value>The Culture used for formatting the content of record cells in the column.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to apply different <see cref="T:System.Globalization.CultureInfo"/> for the GridColumns by using this
            property. Assign the FormatString to this property based on the type of the property the column is associated with to format the value. 
            The user can use different StringFormats to customize the value displayed in the record cells.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                Format = "C",
                CultureInfo = new CultureInfo("en-US")
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#formatting-gridtextcolumn-with-different-culture"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.HeaderTextMargin">
            <summary>
            Gets or sets the padding applied to the header cells in the column.
            </summary>
            <value>The padding applied to the header cells in the column.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.HeaderTextMargin = new Thickness(10,5,10,5);
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.TextMargin">
            <summary>
            Gets or sets the padding applied to the record cells in the column.
            </summary>
            <value>The padding applied to the record cells in the column.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.TextMargin = new Thickness(10,5,10,5);
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.HeaderCellTextSize">
            <summary>
            Gets or sets the font size for the content of header cell in the column. The font size for the Content of header cell in the GridColumn 
            can be customized by using the this property.
            </summary>
            <value>The font size for the content of header cell in the column. The default value is 14.</value>'
            <remarks>
            The font size for the content of header cell in the GridColumn can be customized by using the this property. 
            However this property will not work if <see cref="P:Syncfusion.SfDataGrid.GridColumn.HeaderTemplate"/> is used for a column. 
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                HeaderCellTextSize = 16
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#headercelltextsize"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.CellTextSize">
            <summary>
            Gets or sets the font size for the content of record cells in the column. The font size for the content of record cells in the GridColumn 
            can be customized by using this property.
            </summary>
            <value>The font size for the content of record cells in the column. The default value is 14.</value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                CellTextSize = 12
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#celltextsize"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.RecordFont">
            <summary>
            Gets or sets the font for the content of record cells in the column. The font for the content of record cells in the GridColumn 
            can be customized by using this property.
            </summary>
            <value>The font for the content of record cells in the column. The default value is "Roboto-Regular".</value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                RecordFont = Typeface.Create(Typeface.CreateFromAsset(Application.Context.Assets, "Roboto-Regular.ttf"), TypefaceStyle.Normal);
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#recordfont"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.HeaderFont">
            <summary>
            Gets or sets the font for the content of header cell in the column. The Font for the content of header cells in the GridColumn 
            can be customized by using this property.
            </summary>
            <value>The font for the content of header cell in the column. The default value is "Roboto-Bold".</value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                HeaderFont = Typeface.Create(Typeface.CreateFromAsset(Application.Context.Assets, "Roboto-Regular.ttf"), TypefaceStyle.Normal);
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#headerfont"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.TextAlignment">
            <summary>
            Gets or sets the text alignment for the record cells in the column.
            </summary>
            <value>The text alignment for the record cells in the column. 
            The default value is <see cref="F:Android.Views.GravityFlags.Center"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                TextAlignment = GravityFlags.Left;
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#textalignment"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.HeaderTextAlignment">
            <summary>
            Gets or sets the text alignment for the header cell in the column.
            </summary>
            <value>The text alignment for the header cell in the column. 
            The default value is <see cref="F:Android.Views.GravityFlags.Center"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                HeaderTextAlignment = GravityFlags.Left;
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#headertextalignment"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.AllowEditing">
            <summary>
            Gets or sets a value indicating whether to enable/disable editing for a column. The user can enable or disable editing 
            for particular column by using this property.
            </summary>
            <value><b>True</b> if editing for the column is enabled, otherwise <b>false</b>. 
            The default value is false.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.AllowEditing = false;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing#column-editing"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.GroupMode">
            <summary>
            Gets or sets a value that decides whether grouping is processed based on display value or edit value or value in the underlying collection 
            of the column.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.DataReflectionMode"/> that decides whether grouping is processed based on display value or edit value or value in the 
            underlying collection of the column. 
            The default value is <see cref="F:Syncfusion.Data.DataReflectionMode.Default"/>.</value>
            <remarks>
            By default, column grouping occurs based on the value in the underlying collection thereby creating a new group for each new value of 
            that column. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> also allows the user to group a column either on the display value or edit value of the column using 
            this property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn cargoWeight = new GridTextColumn();
            cargoWeight.MappingName = "ShipmentWeight";
            cargoWeight.GroupMode = Syncfusion.Data.DataReflectionMode.Display;
            cargoWeight.Format = "#";
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#group-mode"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.CellType">
            <summary>
            Gets or sets the cell type of the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/>. This property is used to identify the type of the column. This property must be specified with a string value when creating a custom column extending from the base class.
            </summary>
            <value>The CellType of the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables the user to create their own column type when the available column type does not meet his requirements.
            The user must set the <see cref="P:Syncfusion.SfDataGrid.GridColumn.CellType"/> of the grid column to the type of UIElement to be loaded in the grid cell. It is mandatory 
            to create a custom cell renderer for the custom column created and it must be added in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers"/> collection. The user 
            can handle his customizations in the custom renderer class implementing the <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            StepperColumn stepperColumn = new StepperColumn();
            stepperColumn.MappingName = "OrderID";
            DataGrid.Columns.Add(stepperColumn);
            
            DataGrid.CellRenderers.Add("Stepper", new StepperColumnRenderer());
            
            //StepperColumn.cs
            public class StepperColumn : GridColumn
            {
            
                public StepperColumn()
                {
                    CellType = "Stepper";
                }
            
            }
            
            //StepperColumnRenderer.cs
            public class StepperColumnRenderer : GridVirtualizingCellRenderer<Stepper,Stepper>
            {
            
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.IsHidden">
            <summary>
            Gets or sets a value indicating whether the visibility of the column. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to hide a particular column 
            using this property.
            </summary>
            <value>
            <b>True</b> if the column is hidden, otherwise <b>false</b>. 
            The default value is <b>false</b>.
            </value>        
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to hide a particular column by two ways, the user can either set <see cref="P:Syncfusion.SfDataGrid.GridColumn.IsHidden"/> 
            property as true or set <see cref="P:Syncfusion.SfDataGrid.GridColumn.Width"/> as 0.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                IsHidden = true
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#ishidden"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.Width">
            <summary>
            Gets or sets the column width. The user can customize the column width by using this property. 
            By default, this property will not be assigned any value and the GridColumn renders in view based on the value of 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.DefaultColumnWidth"/> property.
            </summary>
            <value>The width of the column. The default value is <see cref="F:System.Double.NaN"/></value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                Width = 100
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#column-width"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.MinimumWidth">
            <summary>
            Gets or sets the lower bound for the width of the column.
            </summary>
            <value>
            The minimum width constraint of the column. The default value is <b>20</b> .
            </value>
            <remarks>
            When <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowResizingColumn"/> is enabled, the column can be resized from <see cref="P:Syncfusion.SfDataGrid.GridColumn.MinimumWidth"/> 
            to <see cref="P:Syncfusion.SfDataGrid.GridColumn.MaximumWidth"/>. Hence, using this property the user can restrict the minimum width the column can be 
            resized.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                MinimumWidth = 30
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#resizing-columns"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.MaximumWidth">
            <summary>
            Gets or sets the upper bound for the width of the column.
            </summary>
            <value>
            The maximum width constraint of the column. The default value is <b>double.NaN</b>.
            </value>
            <remarks>
            When <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowResizingColumn"/> is enabled, the column can be resized from <see cref="P:Syncfusion.SfDataGrid.GridColumn.MinimumWidth"/> 
            to <see cref="P:Syncfusion.SfDataGrid.GridColumn.MaximumWidth"/>. Hence, using this property the user can restrict the minimum width the column can be 
            resized.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                MaximumWidth = 200
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#resizing-columns"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.IsTemplate">
            <summary>
            Gets or sets a value indicating whether the column is of the type GridTemplateColumn.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.ColumnConverter">
            <summary>
            Gets or sets the column converter value
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.DataGrid">
            <summary>
            Gets the instance of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.IsAutoGenerated">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> is auto generated.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridColumn.IsUnbound">
            <summary>
            Gets or sets a value indicating whether the GridColumn is an UnboundColumn.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumn.GetFormattedValue(System.Object)">
            <summary>
            Gets the Formatted value for the content of a record cell in the column based on the <see cref="P:Syncfusion.SfDataGrid.GridColumn.Format"/> and <see cref="P:Syncfusion.SfDataGrid.GridColumn.CultureInfo"/> of the column.
            </summary>
            <param name="value">The actual value of the record cell in the column.</param>
            <returns>The formatted value based on the <see cref="P:Syncfusion.SfDataGrid.GridColumn.Format"/> and <see cref="P:Syncfusion.SfDataGrid.GridColumn.CultureInfo"/> properties of the column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumn.OnUpdataColumnInfo">
            <summary>
            Update the Column info on changing  font property in runtime.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumn.SetGrid(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Sets the reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumn.GetCulture">
            <summary>
            Gets the Culture of the GridColumn.
            </summary>
            <returns>Returns the current culture info.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumn.CanEditCell">
            <summary>
            Determines whether the column is editable.
            </summary>
            <returns>
            Returns <b>true</b> if all the cells with in the column is editable .
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumn.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridColumn.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Columns">
            <summary>
            A collection of <see cref="T:Syncfusion.SfDataGrid.GridColumn"/>, that represent the columns in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. This class cannot be inherited.
            </summary>
            <remarks>Use the Columns collection to programmatically manage a collection of 
            <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. 
            You can add, remove or insert columns in the Columns collection.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Columns.#ctor">
            <summary>
            Initializes a new instance of the Columns class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Columns.Item(System.String)">
            <summary>
            Gets a <see cref="T:Syncfusion.SfDataGrid.GridColumn"/>-derived column object with the specified 
            <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> from the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection.
            </summary>
            <param name="mappingName">The mapping name of the column whose column object to be retrieved.</param>
            <value>A <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> object in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> 
            collection, associated with the given mapping name.</value>
            <remarks>Use this Indexer to get a <see cref="T:Syncfusion.SfDataGrid.GridColumn"/>-derived column object
            with the specified <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> from the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection using array notation.</remarks>
            <returns>Returns the GridColumn for the specified mapping name. </returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTextColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> column that hosts textual content in its cells.
            </summary>
            <remarks>
            <para>Use GridTextColumn to display columns of data as text.
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection and to populate the data 
            to the column set the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> to the property in the data source.
            <c>DataGrid.Columns.Add(new GridTextColumn() { MappingName = "OrderID" });</c>
            The value is applied to each and every <see cref="T:Android.Widget.TextView"/> view created in the column.
            </para>
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#gridtextcolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTextColumn.#ctor">
            <summary>
            Initializes a new instance of the GridTextColumn class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridImageColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> column that hosts <see cref="T:Android.Widget.ImageView"/> in its cells.
            </summary> 
            <remarks>Use GridImageColumn to display columns of <see cref="T:Android.Graphics.Bitmap"/> data as a <see cref="T:Android.Widget.ImageView"/>.
            <para/>
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection. To populate the column, 
            assign the column to the <see cref="T:Android.Graphics.Bitmap"/> data by using the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> property. The <see cref="T:Android.Graphics.Bitmap"/> value  is 
            applied to each and every the <see cref="T:Android.Widget.ImageView"/> view created in the column. 
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#gridimagecolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridImageColumn.#ctor">
            <summary>
            Initializes a new instance of the GridImageColumn class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSwitchColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> column that hosts <see cref="T:Android.Widget.CheckBox"/> in its cells.
            </summary> 
            <remarks>Use GridSwitchColumn to display columns of <see cref="T:System.Boolean"/> data as a <see cref="T:Android.Widget.CheckBox"/>.
            <para/>
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection. To populate the column, 
            assign the column to the <see cref="T:System.Boolean"/> data by using the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> property. The <see cref="T:System.Boolean"/> value  is 
            applied to each and every the <see cref="T:Android.Widget.CheckBox"/> view created in the column. 
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#gridswitchcolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSwitchColumn.#ctor">
            <summary>
            Initializes a new instance of the GridSwitchColumn class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridNumericColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> column that hosts numeric content in its cells.
            </summary>
            <remarks>Use GridNumericColumn to display columns of data in numeric format.
            <para/>
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection. To populate the column, 
            assign the column to the numeric data by using the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> property. 
            The value is applied to each and every <see cref="T:Android.Widget.TextView"/> view created in the column.
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#gridnumericcolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridNumericColumn.#ctor">
            <summary>
            Initializes a new instance of the GridNumericColumn class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridNumericColumn.NumberDecimalDigits">
            <summary>
            Gets or sets the number of decimal places to use in numeric values.
            </summary>
            <value>
            The number of decimal places to use in numeric values.
            </value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn()
            {
                MappingName = "ProductNo",
                HeaderText = "Product No",
                NumberDecimalDigits = 0
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridNumericColumn.NumberDecimalSeparator">
            <summary>
            Gets or sets the string to use as the decimal separator in numeric values.
            </summary>
            <value>The string to use as the decimal separator in numeric values.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn()
            {
                MappingName = "ProductNo",
                HeaderText = "Product No",
                NumberDecimalSeparator = ":"
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridNumericColumn.NumberGroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.
            </summary>
            <value>
            The string that separates groups of digits to the left of the decimal in numeric values.
            </value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn()
            {
                MappingName = "ProductNo",
                HeaderText = "Product No",
                NumberGroupSeparator = "'"
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridNumericColumn.NumberGroupSizes">
            <summary>
            Gets or sets the number of digits in each group to the left of the decimal in numeric values.
            </summary>
            <value>
            The number of digits in each group to the left of the decimal in numeric values.
            </value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn()
            {
                MappingName = "ProductNo",
                HeaderText = "Product No",
                NumberGroupSizes = 3
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridNumericColumn.NumberNegativePattern">
            <summary>
            Gets or sets the format pattern for negative numeric values.
            </summary>
            <value>
            The format pattern for negative numeric values.
            </value>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridNumericColumn.NumberFormatInfo">
            <summary>
            Gets or sets the number format info for formatting and parsing numeric value.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridNumericColumn.ResetNumberFormatInfo">
            <summary>
            Resets the number format
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridNumericColumn.GetFormattedValue(System.Object)">
            <summary>
            Gets the Formatted value for the content of a record cell in the column based on the Format and CultureInfo of the column.
            </summary>
            <param name="value">The actual value of the record cell in the column.</param>
            <returns>The formatted value based on the Format and CultureInfo properties of the column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridNumericColumn.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDateTimeColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> column that hosts <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/> in its cells.
            </summary>
            <remarks>Use GridDataTimeColumn to display columns of date-time as picker data in <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/>.
            <para/>
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection. To populate the column, 
            assign the column to the date time data by using the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> property. The value is 
            applied to each and every <see cref="T:Android.Widget.TextView"/> created in the column. Upon editing it displays <see cref="T:Syncfusion.SfDataGrid.Renderers.SfDatePicker"/> for editing values.
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#griddatetimecolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDateTimeColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridDateTimeColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDateTimeColumn.MaximumDate">
            <summary>
            Gets or sets the maximum date to be available in the DatePicker in each record cell of the <see cref="T:Syncfusion.SfDataGrid.GridDateTimeColumn"/>
            </summary>
            <value>The maximum date to be available in the DatePicker.</value>
            <remarks>
            A DatePicker control is loaded in the record cells of the <see cref="T:Syncfusion.SfDataGrid.GridDateTimeColumn"/>. It enables you to scroll through a list of dates between the <see cref="P:Syncfusion.SfDataGrid.GridDateTimeColumn.MinimumDate"/> 
            and <see cref="P:Syncfusion.SfDataGrid.GridDateTimeColumn.MaximumDate"/> and select one from it.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridDateTimeColumn dateTimeColumn = new GridDateTimeColumn();
            dateTimeColumn.MaximumDate = new DateTime(2020, 01, 01);
            dateTimeColumn.MinimumDate = new DateTime(1990, 01, 01);
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#griddatetimecolumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDateTimeColumn.MinimumDate">
            <summary>
            Gets or sets the minimum date to be available in the DatePicker in each record cell of the <see cref="T:Syncfusion.SfDataGrid.GridDateTimeColumn"/>
            </summary>
            <value>The minimum date to be available in the DatePicker.</value>
            <remarks>
            A DatePicker control is loaded in the record cells of the <see cref="T:Syncfusion.SfDataGrid.GridDateTimeColumn"/>. It enables you to scroll through a list of dates between the <see cref="P:Syncfusion.SfDataGrid.GridDateTimeColumn.MinimumDate"/> 
            and <see cref="P:Syncfusion.SfDataGrid.GridDateTimeColumn.MaximumDate"/> and select one from it.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridDateTimeColumn dateTimeColumn = new GridDateTimeColumn();
            dateTimeColumn.MaximumDate = new DateTime(2020, 01, 01);
            dateTimeColumn.MinimumDate = new DateTime(1990, 01, 01);
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#griddatetimecolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDateTimeColumn.Initizalize">
            <summary>
            Initialize the <see cref="T:Syncfusion.SfDataGrid.GridDateTimeColumn"/> class properties and fields.  
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridPickerColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> column that hosts <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> in its cells.
            </summary>
            <remarks>Use GridPickerColumn to display columns of picker data as a <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/>.
            <para/>
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection. To populate the column, 
            assign the column to the date time data by using the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> property. The value is 
            applied to each and every <see cref="T:Android.Widget.TextView"/> view created in the column. Upon editing it displays <see cref="T:Syncfusion.SfDataGrid.Renderers.GridPicker"/> for editing values.
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#gridpickercolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridPickerColumn.#ctor">
            <summary>
            Initializes a new instance of the GridPickerColumn class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridPickerColumn.ItemsSource">
            <summary>
            Gets or sets the items source of the <see cref="T:Syncfusion.SfDataGrid.GridPickerColumn"/>. The user can create a <see cref="T:Syncfusion.SfDataGrid.GridPickerColumn"/> and set its 
            ItemsSource property to a simple collection to display the collection items in the picker drop down.
            </summary>
            <value>The data source for the picker.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridPickerColumn pickerColumn = new GridPickerColumn()
            {
                BindingContext = viewModel,
                ItemsSource = viewModel.CustomerNames,
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#gridpickercolumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridPickerColumn.DisplayMemberPath">
            <summary>
            Gets or sets the display member path that associates the column with a property in the data source.
            The property of the collection binded to the display member path will 
            be the content of the grid cell in normal and editing mode. The value will be displayed in the grid cell only when the 
            <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> is equal to the <see cref="P:Syncfusion.SfDataGrid.GridPickerColumn.ValueMemberPath"/>, else the grid cell 
            will be blank. But the value corresponding to the given property in the data source will be displayed in the picker in edit mode.
            </summary>
            <value>The display member path that associates the column with a property in the data source.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridPickerColumn pickerColumn = new GridPickerColumn()
            {
                MappingName = "OrderID",
                DisplayMemberPath = "EmployeeID",
                ValueMemberPath = "OrderID",
                ItemsSource = viewmodel.PickerInfo
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#displaymemberpath"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridPickerColumn.ValueMemberPath">
            <summary>
            Gets or sets the value member path of the GridPickerColumn that associates the column with a property in the data source. 
            The column in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection whose MappingName is equal to the value member path, will be updated with 
            the corresponding value for the selected item in the picker, when editing in the GridPickerColumn is ended.
            </summary>
            <value>The value member path that associates the column with a property in the data source.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridPickerColumn pickerColumn = new GridPickerColumn()
            {
                MappingName = "OrderID",
                DisplayMemberPath = "EmployeeID",
                ValueMemberPath = "OrderID",
                ItemsSource = viewmodel.PickerInfo
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#valuememberpath"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridPickerColumn.Title">
            <summary>
            Gets or sets the title of the <see cref="T:Syncfusion.SfDataGrid.GridPickerColumn"/>.
            </summary>
            <value>The title of the <see cref="T:Syncfusion.SfDataGrid.GridPickerColumn"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridPickerColumn pickerColumn = new GridPickerColumn()
            {
                BindingContext = viewModel,
                ItemsSource = viewModel.CustomerNames,
                Title = "Customer Names"
            };
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridPickerColumn.GetFormattedValue(System.Object)">
            <summary>
            Gets the Formatted value for the content of a record cell in the column based on the Format and CultureInfo of the column.
            </summary>
            <param name="value">The actual value of the record cell in the column.</param>
            <returns>The formatted value based on the Format and CultureInfo properties of the column.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridEditorColumn">
            <summary>
            Provides the base implementation for all the editor columns in a SfDataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditorColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridEditorColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditorColumn.AllowNullValue">
            <summary>
            Gets or sets a value indicating whether the null values are allowed to the editor columns. When this property is enabled, 
            <see cref="P:Syncfusion.SfDataGrid.GridEditorColumn.NullValue"/> or <see cref="P:Syncfusion.SfDataGrid.GridEditorColumn.NullText"/> will be set to the column, instead of the null value given by the user in edit mode.
            </summary>
            <value>
            <b>True</b> if the null value is allowed, otherwise <b>false</b>.
            The default value is <b>false</b>.
            </value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn();
            numericColumn.AllowNullValue = true;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditorColumn.NullValue">
            <summary>
            Gets or sets an object that is displayed instead of null value if the cell value is null, provided that <see cref="P:Syncfusion.SfDataGrid.GridEditorColumn.AllowNullValue"/> is 
            enabled.
            </summary>          
            <value>
            An object that is displayed instead of null value in the cell.
            </value>
            <remarks>
            The <b>NullValue</b> is applied, when the <see cref="P:Syncfusion.SfDataGrid.GridEditorColumn.AllowNullValue"/> property is enabled.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn();
            numericColumn.AllowNullValue = true;
            numericColumn.NullValue = 0;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditorColumn.NullText">
            <summary>
            Gets or sets a string that is displayed instead of null value if the cell value is null, provided that <see cref="P:Syncfusion.SfDataGrid.GridEditorColumn.AllowNullValue"/> is 
            enabled.
            </summary>
            <value>
            A string that is displayed instead of null value in the cell, 
            provided that the <see cref="P:Syncfusion.SfDataGrid.GridEditorColumn.NullValue"/> is null.
            </value>
            <remarks>
            The <b>NullText</b> is applied, when the <see cref="P:Syncfusion.SfDataGrid.GridEditorColumn.AllowNullValue"/> property is enabled and 
            the <see cref="P:Syncfusion.SfDataGrid.GridEditorColumn.NullValue"/> is null.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn();
            numericColumn.AllowNullValue = true;
            numericColumn.NullText = "null";
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditorColumn.MinValue">
            <summary>
            Gets or sets the minimum value constraint of the column.
            </summary>
            <value>
            The minimum value constraint of the column.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEditorColumn.MaxValue">
            <summary>
            Gets or sets the maximum value constraint of the column.
            </summary>
            <value>
            The maximum value constraint of the column.
            </value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEditorColumn.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridItemPropertiesProvider">
            <summary>
            Implements <see cref="T:Syncfusion.Data.ItemPropertiesProvider"/> to get / set value on the underlying object which is used by <see cref="T:Syncfusion.Data.CollectionViewAdv"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridItemPropertiesProvider.#ctor(Syncfusion.Data.ICollectionViewAdv,Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridItemPropertiesProvider class.
            </summary>
            <param name="view">The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> representing the underlying collection of the datagrid.</param>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridItemPropertiesProvider.SetDataGrid(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initialize an instance for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.
            </summary>
            <param name="grid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridItemPropertiesProvider.GetDisplayValue(System.Object,System.String,System.Boolean)">
            <summary>
             Gets the display value of particular property for the specified record and property name.
            </summary>
            <param name="record">
            The corresponding record to get formatted value.
            </param>
            <param name="propName">
            The corresponding property name to get formatted value.
            </param>
            <param name="canUseBindingReflection">
            If true then use Binding reflection to get the display value
            </param>
            <returns>
            Returns the display value of particular property based on the specified record and property name.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridItemPropertiesProvider.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDynamicPropertiesProvider">
            <summary>
            Implements <see cref="T:Syncfusion.Data.DynamicPropertiesProvider"/> to get / set value on the underlying dynamic object which is used by <see cref="T:Syncfusion.Data.CollectionViewAdv"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDynamicPropertiesProvider.#ctor(Syncfusion.Data.ICollectionViewAdv,Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridDynamicPropertiesProvider class.
            </summary>
            <param name="view">The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> representing the underlying collection of the datagrid.</param>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDynamicPropertiesProvider.SetDataGrid(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initialize an instance for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.
            </summary>
            <param name="grid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDynamicPropertiesProvider.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridXElementAttributesProvider">
            <summary>
            Implements <see cref="T:Syncfusion.Data.ItemPropertiesProvider"/> to get / set value on the underlying object which is used by <see cref="T:Syncfusion.Data.CollectionViewAdv"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridXElementAttributesProvider.#ctor(Syncfusion.Data.ICollectionViewAdv,Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridXElementAttributesProvider class.
            </summary>
            <param name="view">The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> representing the underlying collection of the datagrid.</param>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridXElementAttributesProvider.SetDataGrid(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initialize an instance for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.
            </summary>
            <param name="grid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridXElementAttributesProvider.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridModel">
            <summary>
            Represents a wrapper class for a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control handling the collection and view related operations.
            </summary>
            <remarks>GridModel listens to the collection changes in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control and responds to them.
            It updates the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> in response to the collection changes.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridModel class.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridModel.View">
            <summary>
            Gets the current view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridModel.IsInSort">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> is changing.
            </summary>
            <value>A boolean value denoting whether the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> is changing.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridModel.IsSortDescriptionChanged">
            <summary>
            Gets or sets a value indicating whether sort description is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridModel.IsSortColumnChanged">
            <summary>
             Gets or sets a value indicating whether sort column is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridModel.HasGroup">
            <summary>
             Gets a value indicating whether the current view has a group.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnCaptionSummaryRowChanged(Syncfusion.SfDataGrid.GridSummaryRow)">
            <summary>
            Method which helps to update the view when change the Caption Summary Row
            </summary>
            <param name="row">GridSummary row</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.WireEvents">
            <summary>
            Hooks the specified event
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnTableSummaryRowPositionChanged(Syncfusion.SfDataGrid.GridTableSummaryRow,System.Object)">
            <summary>
            Update the table summary row position based on the runtime position changes.
            </summary>
            <param name="summaryRow">A <see cref="T:Syncfusion.SfDataGrid.GridTableSummaryRow"/> object</param>
            <param name="position">A <see cref="T:Syncfusion.SfDataGrid.Position"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.DataGrid_SortComparers_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when sort comparers collection is changed.
            </summary>
            <param name="sender">GridColumn instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnTopLevelGroupCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when top level group collection is changed.
            </summary>
            <param name="sender">GridColumn instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnGridColumnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when grid column collection is changed.
            </summary>
            <param name="sender">GridColumn instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.WireColumnDescriptor(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Hooks the column descriptor.
            </summary>
            <param name="column">current column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.UnWireColumnDescriptor(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Unhooks the column descriptor.
            </summary>
            <param name="column">current column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.GetSortColumnsNotInGroupColumns">
            <summary>
            Method which helps to get the sortColumn which are not in the GroupedColumns
            </summary>
            <returns>Returns the sortColumn which are not in the GroupedColumns</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.GetSortDescriptionNotInGroupDescription">
            <summary>
            Method which helps to get the unavailable sort description which property names is not in group description
            </summary>
            <returns>Returns the unavailable sort description which property names is not in group description</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnRecordPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when record property is changed.
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">PropertyChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when source collection is changed
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="args">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.ResetColumns">
            <summary>
            Method which helps to reset the column count and column indexes when group added or removed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.CheckForExistingGroupDescription(System.String)">
            <summary>
            Check whether the GroupDescription is already present in Groupdescriptions or not
            </summary>
            <param name="columnName">current column</param>
            <returns>Returns a value indicates whether the GroupDescription is already present in Groupdescriptions or not</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.CheckForExistingGroupColumn(System.String)">
            <summary>
            Check whethe the corresponding column name already present in GropColumns or not.
            </summary>
            <param name="columnName">current column</param>
            <returns>Returns a value indicates whethe the corresponding column name already present in GropColumns or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.Suspend">
            <summary>
            Method helps to suspand all the collection change update when doing grouping operatrions 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.Resume">
            <summary>
            Method helps to suspand all the collection change update when doing grouping operatrions 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnRecordCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occura when record collection is changed.
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RefreshView(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Int32,System.Int32)">
            <summary>
            Refreshs the view.
            When the RowIndex not in a visible region
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="count">Count value.</param>
            <param name="action">NotifyCollectionChanged Action.</param>
            <param name="recordIndex">Record index.</param>
            <param name="recordCount">Record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.UpdateDataRow(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the data row.
             When the RowIndex is in a visible region
            </summary>
            <param name="index">row index.</param>
            <param name="count">Count value.</param>
            <param name="action">NotifyCollectionChanged Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.DataGrid_OnGroupColumnDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when group column description is changed
            </summary>
            <param name="sender">GridColumn instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.DataGrid_OnTableSummaryRowsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when TableSummaryRows collection is changed.
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnGroupDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when group description is changed.
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.UpdateView(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the view.
            inserts the visible line when row index is in visible region
            </summary>
            <param name="index">row index.</param>
            <param name="count">Count value.</param>
            <param name="action">NotifyCollectionChanged Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.UnWireEvents">
            <summary>
            UnHooks the specified event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RefreshDataRow">
            <summary>
            Refreshes the data row in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.ResetRowIndex(Syncfusion.SfDataGrid.DataRowBase)">
            <summary>
            Resets the row index.
            </summary>
            <param name="dr">DataRowBase instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RefreshView">
            <summary>
            Refreshes the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.MakeSort(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Makes the sort and remove the sort in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. 
            Executes when a header cell is touched if the AllowSorting property in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> 
            and the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> associated with the header cell is <b>true</b>. 
            <para/>
            Adds and clears <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> collection in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="gridColumn">A <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> object to be sorted.</param>
            <exception cref="T:System.InvalidOperationException">Mapping Name necessary for Sorting</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.OnSortDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
             <summary>
             Raises the sort descriptions changed event.
            checks whether sort description needs to add,delete,remove,replace when sort description changes
             </summary>
             <param name="sender">SfDataGrid instance</param>
             <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.DataGrid_SortColumnDescriptions_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the sort columns changed event.
            checks whether sort description needs to add,delete,remove,replace not when sort description changes
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RaiseSortColumnsChanging(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changing.
            call datagrid rise column changing method to check whether SortColumnChanged event is called or not
            </summary>
            <returns><c>true</c>, if sort columns changing was raised, <c>false</c> otherwise.</returns>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">NotifyCollectionChanged Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RaiseSortColumnsChanged(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changed.
            call datagrid rise column changed method to check whether SortColumnChanging event is called or not
            </summary>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">NotifyCollectionChanged Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.UpdateHeaderCells(System.Boolean)">
            <summary>
            Updates the header cells
            </summary>
            <param name="updateCellStyle">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.UpdateExpanderIconSourceForCaptionRows">
            <summary>
            Updates the expander icon source for caption row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.ExpandGroupsAtLevel(System.Collections.Generic.List{Syncfusion.Data.Group},System.Int32)">
            <summary>
            Method which helps to expand all the groups in Specific level
            </summary>
            <param name="groups">current group</param>
            <param name="groupLevel">The level of the current group</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.CollapseGroupsAtLevel(System.Collections.Generic.List{Syncfusion.Data.Group},System.Int32)">
            <summary>
            Method which helps to collapse all the groups in Specific level
            </summary>
            <param name="groups">current group</param>
            <param name="groupLevel">The level of the current group</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.ExpandGroup(Syncfusion.Data.Group)">
            <summary>
            Method which helps to expand the specific group by passing the corresponding group.
            </summary>
            <param name="group">The group to be expanded.</param>
            <returns>Returns a boolean value indicating whether this expanding action is succeeded or failed</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.CollapseGroup(Syncfusion.Data.Group)">
            <summary>
            Method which helps to collapse the specific group by passing the corresponding group.
            </summary>
            <param name="group">The group to be collapsed.</param>
            <returns>Returns a boolean value indicating whether this collapsing action is succeeded or failed</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.RefreshDataRowForGroup(System.Int32,System.Boolean)">
            <summary>
            Refresh the data row for group
            </summary>
            <param name="fromRowIndex">The row index from which data has to be refreshed</param>
            <param name="invalidateMeasure">Indicates a value whether to begin a layout pass.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridModel.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper">
            <summary>
            Represents the wrapper class that implements the <see cref="T:Syncfusion.Data.QueryableCollectionView"/> to create 
            a queryable collection based on which data manipulation is performed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.#ctor(System.Collections.IEnumerable,Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridQueryableCollectionViewWrapper class with the specified values.
            </summary>
            <param name="source">The item source of the collection.</param>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.GetFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Func for the given property, data operation and the reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.CreateItemPropertiesProvider">
            <summary>
            Method to create the item properties provider for the GridQueryableCollectionViewWrapper. 
            </summary>
            <returns>Returns the item properties provider for the GridQueryableCollectionViewWrapper.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.GetDataGrid">
            <summary>
            Gets the reference of the DataGrid in the view.
            </summary>
            <returns>The reference of the DataGrid in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.CreateRecords">
            <summary>
            Create records list based on the source provided by view.
            </summary>
            <returns>
            Returns RecordsList.
            </returns>
            <remarks>
            Creates <see cref="T:Syncfusion.Data.VirtualRecordsList"/> when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.CreateTopLevelGroup">
            <summary>
            Creates TopLevelGroup while grouping for view.
            </summary>
            <returns>Returns TopLevelGroup.</returns>
            <remarks>
            Creates <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup"/> when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>  
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for the property, data operation and reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Expression Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridQueryableCollectionViewWrapper.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CollectionViewExtensions">
            <summary>
            Represents a class that provides extension methods for getting the func of the collection view.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CollectionViewExtensions.GetValueFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.GridColumn,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Gets ValueFunc for based on corresponding  column and DataOperationMode
            </summary>
            <param name="view">CollectionView Adv</param>
            <param name="column">GridColumn instance</param>
            <param name="operation">Data Operation</param>
            <param name="mode">Binding Value</param>
            <returns>Return ValueFunc for based on corresponding  column and DataOperationMode</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CollectionViewExtensions.GetValueExpressionFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.GridColumn,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns ValueExpressionFunc for corresponding column and data operation
            </summary>
            <param name="view">CollectionView Adv</param>
            <param name="column">Grid Column</param>
            <param name="operation">Data Operation</param>
            <param name="mode">Binding value</param>
            <returns>Expression func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CollectionViewExtensions.GetDynamicFunc(Syncfusion.Data.CollectionViewAdv)">
            <summary>
            Returns Dynamic Func to reflect the value in dynamic collection
            </summary>
            <param name="view">CollectionView Adv</param>
            <returns>Dynamic collection Func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CollectionViewExtensions.GetDynamicExpressionFunc(Syncfusion.Data.CollectionViewAdv)">
            <summary>
            Returns Dynamic Expression Func to reflect the value in Dynamic collection
            </summary>
            <param name="view">CollectionView Adv</param>
            <returns>Dynamic collection Expression Func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CollectionViewExtensions.GetUnboundFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.SfDataGrid.GridUnboundColumn)">
            <summary>
            Gets Unbound Func Value for sorting and grouping
            </summary>
            <param name="view">current view</param>
            <param name="dataGrid">DataGrid instance</param>
            <param name="column">Grid Column</param>
            <returns>returns Func</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper">
            <summary>
            A class that enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping when a DataTable collection is bound.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.datagrid">
            <summary>
            Gets or sets the instance of the SfDataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.#ctor(System.Collections.IEnumerable,Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridDataTableCollectionViewWrapper class.
            </summary>
            <param name="source">The source.</param>
            <param name="grid">The SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.CreateRecords">
            <summary>
            Create records list based on the source provided by view.
            </summary>
            <returns>
            Returns RecordsList.
            </returns>
            <remarks>
            Creates <see cref="T:Syncfusion.Data.VirtualRecordsList"/> when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.CreateTopLevelGroup">
            <summary>
            Creates TopLevelGroup while grouping for view.
            </summary>
            <returns>Returns TopLevelGroup.</returns>
            <remarks>
            Creates <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup"/> when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>  
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.CreateItemPropertiesProvider">
            <summary>
            Method to create the item properties provider for the GridDataTableCollectionViewWrapper. 
            </summary>
            <returns>Returns the item properties provider for the GridDataTableCollectionViewWrapper. </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.GetDataGrid">
            <summary>
            Gets the reference of the DataGrid in the view.
            </summary>
            <returns>The reference of the DataGrid in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.SetDataGrid(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Sets the datagrid present in the view.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDataTableCollectionViewWrapper.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupColumnDescription">
            <summary>
            Represents a class for that contains the grouping information like group column's name and converter based on which grouping for a column is processed in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GroupColumnDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GroupColumnDescription"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupColumnDescription.ColumnName">
            <summary>
            Gets or sets the column name for grouping. This property represents the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> of the column 
            which should be grouped.
            </summary>
            <value>The column name for grouping.</value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.GroupColumnDescriptions.Add (new GroupColumnDescription () {
            ColumnName = "CustomerID",
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#programmatic-grouping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupColumnDescription.Converter">
            <summary>
            Gets or sets the converter for grouping. This property is used when the user needs to group the column with their custom logic. 
            The user must assign the converter class implementing the <see cref="T:Syncfusion.Data.IValueConverter"/> to this property.
            </summary>
            <value>The converter for grouping.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to group a column based on custom logic when the standard grouping techniques do not meet 
            the requirements. When the user wants to apply grouping to the column based on his custom logic, 
            he needs to the write the converter class implementing the <see cref="T:Syncfusion.Data.IValueConverter"/> and assign it to this property.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.GroupColumnDescriptions.Add (new GroupColumnDescription () {
            ColumnName = "CustomerID",
            Converter = new GroupConverter()
            });
            
            //GroupConverter.cs
            public class GroupConverter : IValueConverter
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#custom-grouping"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupColumnDescriptions">
            <summary>
            A collection of <see cref="T:Syncfusion.SfDataGrid.GroupColumnDescription"/> objects that used to maintain the grouping information in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GroupColumnDescriptions.#ctor">
            <summary>
            Initializes a new instance of the GroupColumnDescriptions class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupColumnDescriptions.Item(System.String)">
            <summary>
            Returns the <see cref="T:Syncfusion.SfDataGrid.GroupColumnDescription"/> with the given column name from the GroupColumnDescriptions collection.
            </summary>
            <param name="columnName">The column name whose GroupColumnDescription to be retrieved.</param>
            <returns>The <see cref="T:Syncfusion.SfDataGrid.GroupColumnDescription"/> with the given column name from the GroupColumnDescriptions collection.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SortColumnDescriptions">
            <summary>
            A collection of <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> objects that used to maintain the sorting information in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SortColumnDescriptions.#ctor">
            <summary>
            Initializes a new instance of the SortColumnDescriptions class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SortColumnDescriptions.Item(System.String)">
            <summary>
            Returns the <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> with the given column name from the SortColumnDescriptions collection.
            </summary>
            <param name="columnName">The column name whose SortColumnDescription to be retrieved.</param>
            <returns>The <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> with the given column name from the SortColumnDescriptions collection.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SortColumnDescription">
            <summary>
            Represents a class for that contains the sorting information like sort column's name and sorting direction based on which sorting for a column is processed in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SortColumnDescription.#ctor">
            <summary>
            Initializes a new instance of the SortColumnDescription class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SortColumnDescription.ColumnName">
            <summary>
            Gets or sets the name of the column to be sorted. This property represents the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> of the column 
            which should be sorted.
            </summary>
            <value>The name of the column to be sorted.</value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.AllowSorting = true;
            DataGrid.SortColumnDescriptions.Add (new SortColumnDescription()
            {
               ColumnName = "OrderID"
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting#programmatic-sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SortColumnDescription.SortDirection">
            <summary>
            Gets or sets the direction of sorting for the given column.
            </summary>
            <value>The direction of sorting for the given column. The default value is <see cref="F:System.ComponentModel.ListSortDirection.Ascending"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            DataGrid.AllowSorting = true;
            DataGrid.SortColumnDescriptions.Add (new SortColumnDescription()
            {
               ColumnName = "OrderID",
               SortDirection = ListSortDirection.Descending
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting#programmatic-sorting"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IElement">
            <summary>
            Defines properties that must be implemented to generate grid elements.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IElement.Element">
            <summary>
            Gets the grid element.
            </summary>
            <value>The grid element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IElement.Index">
            <summary>
            Gets the index of the element.
            </summary>
            <value>The index of the element.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IRowElement">
            <summary>
            Defines properties that must be implemented to generate grid row elements.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IRowElement.RowRegion">
            <summary>
            Gets the row region of the row element.
            </summary>
            <value>The row region of the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IRowElement.Level">
            <summary>
            Gets the levels of the row element.
            </summary>
            <value>The level of the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IRowElement.RowType">
            <summary>
            Gets the row type of the row element.
            </summary>
            <value>The row type of the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IRowElement.ArrangeRect">
            <summary>
            Gets or sets the rect for arranging the row element.
            </summary>
            <value>The rect for arranging the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IRowElement.ClipRect">
            <summary>
            Gets or sets the clip value of the row element.
            </summary>
            <value>The clip value of the row element.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowElement.RowManipulation(Android.Graphics.Rect)">
            <summary>
            Manipulates the position of the DataRow based on the given rectangle value.
            </summary>
            <param name="rect">The rect value for arranging the row.</param>
            <returns>The rectangle value for arranging the data row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowElement.MeasureElement(System.Int32,System.Int32)">
            <summary>
            Measures the element for the given width and height measure specifications.
            </summary>
            <param name="widthMeasureSpec">The horizontal space requirements as imposed by the parent.</param>
            <param name="heightMeasureSpec">The vertical space requirements as imposed by the parent.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowElement.ArrangeElement(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Arranges the element in the given position.
            </summary>
            <param name="left">The position to be inserted from the left.</param>
            <param name="top">The position to be inserted from the top.</param>
            <param name="right">The position to be inserted from the right.</param>
            <param name="bottom">The position to be inserted from the bottom.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IColumnElement">
            <summary>
            Defines properties that must be implemented to generate grid column elements.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IColumnElement.Renderer">
            <summary>
            Gets the renderer of the column element.
            </summary>
            <value>The renderer associated with the column element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IColumnElement.RowIndex">
            <summary>
            Gets the row index of the column element.
            </summary>
            <value>The row index of the column element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IColumnElement.IsEditing">
            <summary>
            Gets a value indicating whether the column is in editing or not.
            </summary>
            <value>A boolean value specifying whether the column is in editing or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IColumnElement.RowSpan">
            <summary>
            Gets a value indicating whether the row span of the column element is applied .
            </summary>
            <value>The row span of the column element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IColumnElement.ColumnSpan">
            <summary>
            Gets the column span of the column element.
            </summary>
            <value>The column span of the column element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IColumnElement.ClipRect">
            <summary>
            Gets or sets the clip value of the column element.
            </summary>
            <value>The clip value of the column element.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IColumnElement.RefreshCellValue">
            <summary>
            Refreshes the cell value of the column element.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IRowGenerator">
            <summary>
            Defines properties and methods that must be implemented when generating the grid row elements.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IRowGenerator.Owner">
            <summary>
            Gets or sets an instance of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>An instance of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IRowGenerator.Items">
            <summary>
            Gets the list of row elements in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The list of row elements in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.PreGenerateRows">
            <summary>
            Generates the row elements that occupy the view space for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.EnsureRows(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
             Ensures the rows that are available in the view.
             </summary>
             <param name="visibleRows">The visible row lines.</param>
             <param name="visibleColumns">The visible column lines.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
             Ensures the columns in each row.
             </summary>
             <param name="visibleColumns">The visible column lines.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.ColumnsInserted(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index.
            </summary>
            <param name="index">The index to insert the columns.</param>
            <param name="count">The column lines count to insert.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.ColumnsRemoved(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines starting from the given index.
            </summary>
            <param name="index">The index to remove the columns.</param>
            <param name="count">The column lines count to remove.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.ApplyColumnSizer(System.Double)">
            <summary>
            Apply column sizer calculations to the grid columns.
            </summary>
            <param name="viewSize">The size of the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.RefreshRowDraw">
            <summary>
            Refreshes the drawing in the row to update the cell borders.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.QueryRowHeight(System.Int32,System.Double@)">
            <summary>
            Raises the QueryRowHeight event and returns a boolean value denoting whether the event is handled.
            </summary>
            <param name="rowIndex">The index of the row which is to be queried.</param>
            <param name="height">The height value that is passed as out parameter.</param>
            <returns>A boolean value denoting whether the event is handled.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.ColumnInserted(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index.
            </summary>
            <param name="index">The index to insert.</param>
            <param name="count">The column lines count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IRowGenerator.ColumnRemoved(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines starting from the given index.
            </summary>
            <param name="index">The index to remove.</param>
            <param name="count">The column lines count.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IScrollViewportChanged">
            <summary>
            Defines the method that must be implemented when scroll view port is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IScrollViewportChanged.OnScrollViewportChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Occurs when the scroll view port is changed.
            </summary>
            <param name="left">The port change in the left position.</param>
            <param name="top">The port change in the top position.</param>
            <param name="right">The port change in the right position.</param>
            <param name="bottom">The port change in the bottom position.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ScrollViewer">
            <summary>
            Represents a customized view that is capable of scrolling if its content requires.
            </summary>
            <remarks>ScrollViewer is a customized <see cref="T:Android.Views.View"/> that scrolls its content 
            in both horizontal and vertical direction if the content exceeds the view area.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the ScrollViewer class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the ScrollViewer class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the ScrollViewer class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the ScrollViewer class.
            </summary>
            <param name="handle">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.MainHandler">
            <summary>
            Gets or sets the container for the <see cref="T:Syncfusion.SfDataGrid.ScrollViewer"/>
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.VelocityTracker">
            <summary>
             Gets or sets the velocity tracker value which helps for tracking the velocity of touch events, for implementing /// flinging
             and other such gestures.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.TopEdgeEffect">
            <summary>
            Gets or sets the graphical effect used at the top edges of scrollable widgets
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.BottomEdgeEffect">
            <summary>
            Gets or sets the graphical effect used at the bottom edges of scrollable widgets
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.DataGrid">
            <summary>
            Gets the instance of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.Scroller">
            <summary>
            Gets or sets the OverScroller.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.VerticalScrollRange">
            <summary>
            Gets the vertical scroll range value
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.HorizontalScrollRange">
            <summary>
            Gets the horizontal scroll range value
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.TopFadingEdgeStrength">
            <summary>
            Gets the top fading edge strength.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.BottomFadingEdgeStrength">
            <summary>
            Gets the bottom fading edge strength.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.LeftFadingEdgeStrength">
            <summary>
            Gets the left fading edge strength.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ScrollViewer.RightFadingEdgeStrength">
            <summary>
            Gets the right fading edge strength.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.AddView(Android.Views.View)">
            <summary>
            Adds the given view to the scroll viewer.
            </summary>
            <param name="child">The view to be added to the scroll viewer.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.OnSizeChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This is called during layout when the size of this view has changed.
            </summary>
            <param name="w">Current width of this view.</param>
            <param name="h">Current height of this view.</param>
            <param name="oldw">Old width of this view.</param>
            <param name="oldh">Old height of this view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.ComputeVerticalScrollRange">
            <summary>
            Computes the vertical scroll range.
            </summary>
            <returns>The vertical scroll range.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.ComputeVerticalScrollOffset">
            <summary>
            Computes the vertical offset value.
            </summary>
            <returns>The vertical offset value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.ComputeHorizontalScrollOffset">
            <summary>
            Computes the horizontal offset value.
            </summary>
            <returns>The horizontal offset value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.ComputeHorizontalScrollRange">
            <summary>
            Computes the horizontal scroll range.
            </summary>
            <returns>The horizontal scroll range.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.MeasureChild(Android.Views.View,System.Int32,System.Int32)">
            <summary>
            Ask one of the children of this view to measure itself, taking into both the 
            MeasureSpec requirements for this view and its padding.
            </summary>
            <param name="child">The child to measure.</param>
            <param name="parentWidthMeasureSpec">The width requirements for this view.</param>
            <param name="parentHeightMeasureSpec">The height requirements for this view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.MeasureChildWithMargins(Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ask one of the children of this view to measure itself, taking into account
            both the MeasureSpec requirements for this view and its padding and margins.
            </summary>
            <param name="child">The child to measure.</param>
            <param name="parentWidthMeasureSpec">The width requirements for this view.</param>
            <param name="widthUsed">Extra space that has been used up by the parent horizontally (possibly by other children of the parent).</param>
            <param name="parentHeightMeasureSpec">The height requirements for this view.</param>
            <param name="heightUsed">Extra space that has been used up by the parent vertically (possibly by other children of the parent).</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.OnScrollChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This methods fires when the scroll is changed.
            </summary>
            <param name="l">Current horizontal scroll origin.</param>
            <param name="t">Current vertical scroll origin.</param>
            <param name="oldl">Previous horizontal scroll origin.</param>
            <param name="oldt">Previous vertical scroll origin.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">Left position, relative to parent.</param>
            <param name="top">Top position, relative to parent.</param>
            <param name="right">Right position, relative to parent.</param>
            <param name="bottom">Bottom position, relative to parent.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.Draw(Android.Graphics.Canvas)">
            <summary>
            Manually render this view (and all of its children) to the given canvas.
            </summary>
            <param name="canvas">The canvas to which the view is rendered.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.OnInterceptTouchEvent(Android.Views.MotionEvent)">
            <summary>
            Occurs when the touch is recognized in the view.
            </summary>
            <param name="ev">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether the touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.OnTouchEvent(Android.Views.MotionEvent)">
            <summary>
            This method handles the touch event.
            </summary>
            <param name="e">The <see cref="T:Android.Views.MotionEvent"/>.</param>
            <returns>Returns a boolean value indicating whether the touch is handled or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.ComputeScroll">
            <summary>
            Computes the scroll.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.ScrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls to the given x and y position.
            </summary>
            <param name="x">The "x" position to be scrolled.</param>
            <param name="y">The "y" position to be scrolled.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.RequestChildRectangleOnScreen(Android.Views.View,Android.Graphics.Rect,System.Boolean)">
            <summary>
            Called when a child of this group wants a particular rectangle to be positioned onto the screen.
            </summary>
            <param name="child">The direct child making the request.</param>
            <param name="rectangle">The rectangle in the child's coordinates the child wishes to be on the screen.</param>
            <param name="immediate">True to forbid animated or delayed scrolling, false otherwise.</param>
            <returns>Returns a boolean value indicating whether the group scrolled to handle the operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.SmoothScrollBy(System.Int32,System.Int32)">
            <summary>
            Scrolls smoothly for the given horizontal and vertical distance.
            </summary>
            <param name="distanceInX">The horizontal distance to scroll.</param>
            <param name="distanceInY">The vertical distance to scroll.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.SmoothScrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls smoothly to the given x and y position.
            </summary>
            <param name="positionX">The horizontal position to scroll.</param>
            <param name="positionY">The vertical position to scroll.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.GetHOffset">
            <summary>
            Gets the horizontal offset value.
            </summary>
            <returns>The horizontal offset value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.GetVOffset">
            <summary>
            Gets the vertical offset value.
            </summary>
            <returns>The vertical offset value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.SetViewportChangedCallBack(Syncfusion.SfDataGrid.IScrollViewportChanged)">
            <summary>
            Sets the view port changed call back.
            </summary>
            <param name="viewportChangedCallBack">The <see cref="T:Syncfusion.SfDataGrid.IScrollViewportChanged"/> representing the call back for the scroll view port 
            change.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.Fling(System.Int32,System.Int32)">
            <summary>
            Flings in the given horizontal velocity and vertical velocity.
            </summary>
            <param name="velocityX">The horizontal velocity to fling.</param>
            <param name="velocityY">The vertical velocity to fling.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.InitScrollViewer">
            <summary>
            Initialize the properties required for the <see cref="T:Syncfusion.SfDataGrid.ScrollViewer"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.InitializeEdgeEffects">
            <summary>
            Initialize an instance of the <see cref="T:Android.Widget.EdgeEffect"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.OnOverScrolled(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            This method handles the overscrolling.
            </summary>
            <param name="scrollX">The scroll x position.</param>
            <param name="scrollY">The scroll y position.</param>
            <param name="clampedX">The clamped x value.</param>
            <param name="clampedY">The clamped y value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.UpdateOffsetForPixelLineScrolling">
            <summary>
            Assigns the horizontal and vertical offset values based on line ScrollOffset and ClippedSize, 
            to achieve LineScrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.GetScrollDirection">
            <summary>
            Defines constants that specify the scroll direction that are supported by a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <returns>Returns the scroll direction.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.DoScroll(System.Int32,System.Int32)">
            <summary>
            Scrolls to the given x and y position
            </summary>
            <param name="deltaX">x position</param>
            <param name="deltaY">y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.PositionYScroller(System.Int32,System.Int32,System.Int32)">
            <summary>
            Layouts the vertical scroller in the given positon and height
            </summary>
            <param name="startPosition">start position</param>
            <param name="scrollerHeight">scroll height</param>
            <param name="childHeight">child height</param>
            <returns>Returns the y position of scroll viewer</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.PositionXScroller(System.Int32,System.Int32,System.Int32)">
            <summary>
            Layouts the vertical scroller in the given positon and width
            </summary>
            <param name="startPosition">start position</param>
            <param name="scrollerWidth">scroll width</param>
            <param name="childWidth">child width</param>
            <returns>Returns the x position of scroll viewer</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.CanDisAllowInterceptTouchEvent(System.Single,System.Single)">
            <summary>
            Decides whether to allow InterceptTouch event to parent.
            </summary>
            <param name="xDiff">horizontal scrolled value</param>
            <param name="yDiff">vertical scrolled value</param>
            <returns>Returns a boolean value indicates whether to allow InterceptTouch event to parent.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.OnGlobalLayout">
            <summary>
            Listens layout changes of the root view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ScrollViewer.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.VisualContainer">
            <summary>
            Represents a container that holds the row elements in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.VisualContainer"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.VisualContainer"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.VisualContainer"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="numb">The value indicating the def style attribute.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.IsChildInSwipe">
            <summary>
            Gets or sets a value indicating whether any child is in swipe.
            </summary>
            <value>A boolean value indicating whether any child is in swipe.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.RowGenerator">
            <summary>
            Gets or sets a reference to the class that implements <see cref="T:Syncfusion.SfDataGrid.IRowGenerator"/>.
            </summary>
            <value>A reference to the class that implements <see cref="T:Syncfusion.SfDataGrid.IRowGenerator"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ScrollerWidth">
            <summary>
            Gets the width of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The width of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.VisibleColumnsCount">
            <summary>
            Gets the visible columns count in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ScrollerHeight">
            <summary>
            Gets the height of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The height of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.RowHeightManager">
            <summary>
            Gets or sets a reference to the <see cref="P:Syncfusion.SfDataGrid.VisualContainer.RowHeightManager"/> instance that manages the row heights in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>A reference to the <see cref="P:Syncfusion.SfDataGrid.VisualContainer.RowHeightManager"/> instance that manages the row heights in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.NeedToRefreshColumn">
            <summary>
            Gets or sets a value indicating whether to refresh the columns.
            </summary>
            <value>A boolean value denoting whether to refresh the columns.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.HScrollBar">
            <summary>
            Gets a reference to the class that implements <see cref="T:Syncfusion.GridCommon.ScrollAxis.IScrollBar"/> which contains the horizontal scroll bar information.
            </summary>
            <value>A reference to the class that implements <see cref="T:Syncfusion.GridCommon.ScrollAxis.IScrollBar"/> which contains the horizontal scroll bar information.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.VScrollBar">
            <summary>
            Gets a reference to the class that implements <see cref="T:Syncfusion.GridCommon.ScrollAxis.IScrollBar"/> which contains the vertical scroll bar information.
            </summary>
            <value>A reference to the class that implements <see cref="T:Syncfusion.GridCommon.ScrollAxis.IScrollBar"/> which contains the vertical scroll bar information.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.RowHeights">
            <summary>
            Gets the rows height from the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <value>The rows height from the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ColumnWidths">
            <summary>
            Gets the columns width from the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <value>The columns width from the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ScrollRows">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> instance which contains the information of row lines in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>A reference to the <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> instance which contains the information of row lines in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ScrollColumns">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> instance which contains the information of column lines in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>A reference to the <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> instance which contains the information of column lines in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.HorizontalOffset">
            <summary>
            Gets or sets the horizontal offset of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The horizontal offset of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.VerticalOffset">
            <summary>
            Gets or sets the vertical offset of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The vertical offset of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ScrollOwner">
            <summary>
            Gets the reference to the <see cref="T:Syncfusion.SfDataGrid.ScrollViewer"/> instance.
            </summary>
            <value>A reference to the <see cref="T:Syncfusion.SfDataGrid.ScrollViewer"/> instance.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ExtentHeight">
            <summary>
            Gets the extent height of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The extent height of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ExtentWidth">
            <summary>
            Gets the extent width of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The extent width of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ViewportHeight">
            <summary>
            Gets the height of the view port in the visual container.
            </summary>
            <value>The height of the view port in the visual container.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ViewportWidth">
            <summary>
            Gets the width of the view port in the visual container.
            </summary>
            <value>The width of the view port in the visual container.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.VerticalPixelScroll">
            <summary>
            Gets or sets a value indicating whether vertical scrolling is performed in pixel mode.
            </summary>
            <value>A boolean value indicating whether vertical scrolling is performed in pixel mode.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.HorizontalPixelScroll">
            <summary>
            Gets or sets a value indicating whether horizontal scrolling is performed in pixel mode.
            </summary>
            <value>A boolean value indicating whether horizontal scrolling is performed in pixel mode.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.RowCount">
            <summary>
            Gets or sets the row count in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The row count in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.ColumnCount">
            <summary>
            Gets or sets the column count in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The column count in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.FrozenRows">
            <summary>
            Gets or sets the frozen rows count to freeze the rows at the top below header.
            </summary>
            <value>The frozen rows count to freeze the rows at the top below header.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Negative values are not allowed.</exception>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.FrozenColumns">
            <summary>
            Gets or sets the frozen columns count to freeze the columns at the left, next to RowHeader if <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> is true.
            </summary>
            <value>The frozen columns count to freeze the columns at the left, next to RowHeader if <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> is true.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Negative values are not allowed.</exception>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.FooterRows">
            <summary>
            Gets or sets the frozen rows count to freeze the rows at the bottom.
            </summary>
            <value>The frozen rows count to freeze the rows at the bottom.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Negative values are not allowed.</exception>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.FooterColumns">
            <summary>
            Gets or sets the frozen columns count to freeze the columns at the right.
            </summary>
            <value>The frozen columns count to freeze the columns at the right.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Negative values are not allowed.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts the rows in the given row index.
            </summary>
            <param name="insertAtRowIndex">The index to insert the rows.</param>
            <param name="count">The count of the rows to be inserted.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes the rows in the given row index.
            </summary>
            <param name="removeAtRowIndex">The index to remove the rows.</param>
            <param name="count">The count of the rows to be removed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the columns in the given column index.
            </summary>
            <param name="insertAtColumnIndex">The column index to insert the columns.</param>
            <param name="count">The count of the columns to be inserted.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes the columns in the given column index.
            </summary>
            <param name="removeAtColumnIndex">The column index to remove the columns.</param>
            <param name="count">The count of columns to be removed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Creates the RowPanels and GridCells for the first time and ensure them every time the measure is hit.
            Measures the constraint of the child and send the Measured dimensions to the super to adjust the scrolling area.
            </summary>
            <param name="widthMeasureSpec">The width of the visual container. Initially assigned the value of view width.</param>
            <param name="heightMeasureSpec">The height of the visual container. Initially assigned the value of the view height.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Arranges the RowPanels inside the VisualContainer.
            </summary>
            <param name="changed">Indicates whether the layout has changed or not.</param>
            <param name="left">The current extreme left position of the VisualContainer.</param>
            <param name="top">The current top position of the VisualContainer.</param>
            <param name="right">The current right extreme position of the VisualContainer.</param>
            <param name="bottom">The current bottom position of the VisualContainer.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnCreateRowHeights">
            <summary>
            Creates a new instance of LineSizeCollection for creating the row heights.
            </summary>
            <returns>A new instance of LineSizeCollection for creating the row heights.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnCreateColumnWidths">
            <summary>
            Creates a new instance of LineSizeCollection for creating the column widths.
            </summary>
            <returns>A new instance of LineSizeCollection for creating the column widths.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.ResetSwipeOffset">
            <summary>
            Resets the swipe offset
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.InvalidateLayout">
            <summary>
            Begins a layout pass for the container
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnItemsSourceChanged">
            <summary>
            Occurs when Items Source property is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.SetRowGenerator(Syncfusion.SfDataGrid.RowGenerator)">
            <summary>
            Sets the row generator 
            </summary>
            <param name="rg">RowGenerator instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.UpdateScrollBars">
            <summary>
            Updates the scroll bar
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.UpdateRegion">
            <summary>
            Updates the region and the child elements in the region
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.SetRowHeights">
            <summary>
            Sets the row height
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.RowHeightHelper(System.Int32,System.Int32,Syncfusion.SfDataGrid.RowRegion)">
            <summary>
            Sets the row height for the visible rows based on the values specified in the <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowHeight"/> event.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="region">The row region.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.GetStartEndIndex(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the start and end index value
            </summary>
            <param name="visibleLines">VisibleLines Collection</param>
            <param name="region">current region</param>
            <param name="startIndex">start index</param>
            <param name="endIndex">end index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.RefreshDraw">
            <summary>
            Draw the refresh arc
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnScrollColumnsChanged(System.Object,Syncfusion.GridCommon.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Occurs when scroll column is changed.
            </summary>
            <param name="sender">The instance of Gridcolumn</param>
            <param name="e">ScrollChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.Initialize">
            <summary>
             Initializes the VisualContainer with the required elements.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.CreateScrollAxis(System.Boolean,Syncfusion.GridCommon.ScrollAxis.IScrollBar,Syncfusion.GridCommon.ScrollAxis.ILineSizeHost)">
            <summary>
            Creates a new instance of pixel scroll axis.
            </summary>
            <param name="pixelScroll">Specifies whether the scrolling is pixel scrolling or not.</param>
            <param name="scrollBar">The scroll bar of the specified orientation</param>
            <param name="lineSizes">The size of the lines in the specified orientation.</param>
            <returns>returns a created a instance of pixel scroll axis.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.PregenerateItems">
            <summary>
            Generates the items that occupy the view space for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.EnsureItems(System.Boolean)">
            <summary>
            Ensures the rows and columns that are available in the view.
            </summary>
            <param name="needToRefresh">boolean value specifying whether the columns also need to be ensured.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.UpdateAxis(System.Drawing.Size)">
            <summary>
             Updates the render size of the horizontal and vertical axis.
            </summary>
            <param name="availableSize">srollviews available size</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.GetRowVisibleLineInfo(System.Int32)">
             <summary>
             Gets the line information of the specified row index.
             </summary>
            <param name="index">The lineIndex of the line that has to be returned.</param>
            <returns>Returns the line information of the specified row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.GetColumnVisibleLineInfo(System.Int32)">
             <summary>
              Gets the line information of the specified column index.
             </summary>
            <param name="index">The lineIndex of the line that has to be returned.</param>
            <returns>Returns the line information of the specified column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.ResetScrollRows">
            <summary>
            Resets the scrollRows to null.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.ResetScrollColumns">
            <summary>
             Resets the scrollColumns to null.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.OnScrollViewportChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Occurs when the scroll view port is changed. 
            </summary>
            <param name="left">The port change in the left position.</param>
            <param name="top">The port change in the top position.</param>
            <param name="right">The port change in the right position.</param>
            <param name="bottom">The port change in the bottom position.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VisualContainer.RowsGenerator">
            <summary>
            Gets a reference to the class that implements <see cref="T:Syncfusion.SfDataGrid.IRowGenerator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VisualContainer.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCellRendererBase">
            <summary>
            The <see cref="T:Syncfusion.SfDataGrid.GridCellRendererBase"/> class provides a default implementation of the <see cref="T:Syncfusion.SfDataGrid.IGridCellRenderer"/> interface
            for a cell renderer. You should derive from this class to implement custom cell renderer classes. There is however no 
            dependency on GridCellRendererBase inside of the control. 
            <para/>
            If you want to implement a renderer with support for live views inside the cell you should derive from the 
            <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2"/> or grid adapted VirtualizingCellRendererBase classes.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.#ctor">
            <summary>
            Initializes a new instance of the GridCellRendererBase class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.SupportsRenderOptimization">
            <summary>
            Gets or sets a value indicating whether the renderer supports rendering itself directly to the drawing context. When this is possible the 
            UIElement will only be created when the user moves the mouse over the cell or if the UIElement is needed for other reasons, 
            e.g. animate after change. The benefit of rendering directly to the DrawingContext instead of creating the UIElement 
            is a much improved scrolling performance.
            </summary>
            <value><b>True</b> if the renderer supports optimization, otherwise <b>false</b>. 
            The default value is true.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.IsHeaderRenderer">
            <summary>
            Gets or sets a value indicating whether the currrent renderer is header renderer
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.CurrentCellIndex">
            <summary>
            Gets or sets the current cell's row column index.
            </summary>
            <value>The current cell's row column index.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.CurrentCellElement">
            <summary>
            Gets the view of the current cell.
            </summary>
            <value>The view of the current cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.CurrentCellRendererElement">
            <summary>
            Gets the view of the current cell element.
            </summary>
            <value>The view of the current cell element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.IsInEditing">
            <summary>
            Gets or sets a value indicating whether the current cell is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.IsFocused">
            <summary>
            Gets or sets a value indicating whether the current cell is focused or not.
            </summary>
            <value><b>true</b> if the current cell is focused; otherwise , <b>false</b>.</value>
            <exception cref="T:System.InvalidOperationException">Thrown when the cell is focused before the current cell state is maintained.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnLayout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.Layout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)"/> to arrange the GridCell's children view(s).
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding UiElement</param>
            <param name="left">left end of the cell for arranging the view</param>
            <param name="top">top value for arranging the view</param>
            <param name="right">right end of the cell for arranging the view</param>
            <param name="bottom">bottom value for arranging the view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnMeasure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.Measure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)"/> to Measure the GridCell's children view(s). 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding view</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnPrepareViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.PrepareViews(Syncfusion.SfDataGrid.DataColumnBase)"/> to prepare the GridCell's children view(s).
            VirtualizingCellRendererBase overrides this method and creates new views and wires them with the parent cells control.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnUnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.DataColumnBase)"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether GridVirtualizingCellRendererBase.AllowRecycle was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnUpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the value of the Cell view corresponding to GridColumn.
            In our control we are reusing the cell views for horizontal scrolling. Hence we need to update the value of the cell view.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the cell value of the column element. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnUpdateCellStyle(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the cell style for the column element in a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.OnRefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the cell appearance as per the customer need through API's. 
            In our control we are reusing the cell views for scrolling. Hence we need to update the styles of the cell views.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.DataGrid">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.Context">
            <summary>
            Gets the context of the SfDataGrid.
            </summary>
            <value>The context of the SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.IsEditable">
            <summary>
            Gets or sets a value indicating whether the cell is editable.
            </summary>
            <value><b>True</b> if the cell is editable, otherwise <b>false</b>. 
            The default value is false.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.IsFocusable">
            <summary>
            Gets or sets a value indicating whether the grid cell is focusable.
            </summary>
            <value><b>True</b> if the current cell is focusable, otherwise <b>false</b>. 
            The default value is true.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the cell state for the current cell has been set.
            </summary>
            <value><b>True</b> if the cell state for the current cell is set, otherwise <b>false</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Layout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderer will arrange the views using this method.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell.</param>
            <param name="view">The corresponding UIElement of the cell.</param>
            <param name="left">The left end of the cell for arranging the view.</param>
            <param name="top">The top end of the cell for arranging the view.</param>
            <param name="right">The right end of the cell for arranging the view.</param>
            <param name="bottom">The bottom end of the cell for arranging the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Measure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)">
            <summary>
            Method which is used by the renderer to measure the cell views.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell.</param>
            <param name="view">The corresponding view of the cell.</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size.</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.PrepareViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to create and initiate the view for the cell.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <returns>Returns the view of the cell.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.UnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.DataColumnBase)"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether <see cref="P:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.AllowRecycle"/> was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.RefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to refresh the display value of the Cell.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Syncfusion#SfDataGrid#IGridCellRenderer#UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to Update the Binding Information of the Cell UIElement
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to Update the Binding Information of the Cell UIElement
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.UpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to update the cell value.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.UpdateCellStyle(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method used to update the cell style.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.SetCurrentCellState(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.CellElement,System.Boolean)">
            <summary>
            Update the current cell information in the renderer while current cell was activated.
            </summary>
            <param name="currentCellIndex">The row column index of the current cell.</param>
            <param name="currentCellElement">The UIElement of the current cell.</param>
            <param name="isInEditing">The value indicating whether the view is in edit mode or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.UpdateCurrentCellState(Android.Views.View,System.Boolean)">
            <summary>
            Updates the current cell state for the specified current cell renderer element.
            </summary>
            <param name="currentRendererElement">Specifies the current cell UIElement to update the current cell state.</param>
            <param name="isInEdit">Specifies whether the current cell is editable.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.ResetCurrentCellState">
            <summary>
            Resets the current cell information in renderer, when the current cell is deactivated.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.SetFocus(System.Boolean)">
            <summary>
            Sets the focus to the current cell renderer element.
            </summary>
            <param name="setFocus">The value indicating whether the current cell renderer element is focusable or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.BeginEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.CellElement,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            This method fires when editing in the current cell begins.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell which is in edit mode.</param>
            <param name="cellElement">The UIElement of the cell which is in edit mode.</param>
            <param name="column">The corresponding grid column of the cell which is in edit mode.</param>
            <param name="rowData">The corresponding record of the row which is in edit mode.</param>
            <returns>Returns a value indicating whether the cell enters into the editing mode or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.EndEdit(Syncfusion.SfDataGrid.DataColumnBase,System.Object)">
            <summary>
            This method fires when the editing in the current cell is ended.
            </summary>
            <param name="dataColumn">The corresponding data column of the cell, which leaves the edit mode.</param>
            <param name="record">The underlying data of the cell, which leaves the edit mode.</param>
            <returns>A boolean value indicating whether the current cell has focus.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.CommitCellValue(System.Boolean)">
            <summary>
            Commits the edited value to the underlying data. 
            </summary>
            <param name="isNewValue">A value indicating whether the edited value is new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.ClearRecycleBin">
            <summary>
            Clears the recycle bin. The cell element will be stored for recycling purpose, when the cell element is scrolled 
            out of view. This method clears all the cell elements which are stored for recycling purpose.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.CanUpdateBinding(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="column">The corresponding column for which the binding update should be determined.</param>
            <returns>
            <b>True</b> if the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.SetFocus(Android.Views.View,System.Boolean)">
            <summary>
            Sets the focus for the editing view.
            </summary>
            <param name="view">Current cell renderer element</param>
            <param name="needToFocus">Returns whether focus has to be set or not. </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Dispose">
            <summary>
            Releases all resources used by the GridCellRendererBase class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererBase.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCellRendererCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.SfDataGrid.GridCellRendererBase"/> objects in the view.
            </summary>
            <remarks>
            In a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control, you can access the GridCellRendererCollection through the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers"/> property.
            <para/>
            The <see cref="T:Syncfusion.SfDataGrid.GridCellRendererCollection"/> uses standard <see cref="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Add(System.String,Syncfusion.SfDataGrid.IGridCellRenderer)"/> and <see cref="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Remove(System.String)"/>
            methods to manipulate the collection.
            Use the Contains method to determine if a specific cell type exists in the collection.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Syncfusion.SfDataGrid.GridCellRendererCollection" /> class from being created.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridCellRendererCollection class.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.Values">
            <summary>
            Gets the renderers in the collection.
            </summary>
            <value>The renderers in the collection.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.Keys">
            <summary>
            Gets the keys of the renderers in the collection.
            </summary>
            <value>The keys of the renderers in the collection.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.Count">
             <summary>
             Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
             </summary>
             <returns>
             The number of elements contained in the <see cref="T:System.Collections.ICollection" />.
             </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            True if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCellRendererCollection.Item(System.String)">
            <summary>
            Indexer will return the corresponding renderer for the given key value.
            </summary>
            <param name="key">The key for which the renderer should be obtained.</param>
            <returns>The corresponding renderer for the given key value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Add(System.String,Syncfusion.SfDataGrid.IGridCellRenderer)">
            <summary>
            Adds the given renderer to the renderer dictionary.
            </summary>
            <param name="key">The key of the renderer.</param>
            <param name="renderer">The renderer which should be added to the collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Remove(System.String)">
            <summary>
            Removes the renderer with the given key value from the dictionary.
            </summary>
            <param name="key">The key whose renderer should be removed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the renderer dictionary contains the corresponding renderer key.
            </summary>
            <param name="key">The key which should be queried in the renderer collection.</param>
            <returns>Returns true if the Key is found in the dictionary, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.ContainsValue(Syncfusion.SfDataGrid.GridCellRendererBase)">
            <summary>
            Checks whether the renderer dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer">The cell renderer which should be queried in the renderer collection.</param>
            <returns>Returns true if the renderer is found in the dictionary, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.CopyTo(Syncfusion.SfDataGrid.GridCellRendererBase[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>,
             starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing. </param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or- The number of elements in the 
            source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> 
            to the end of the destination <paramref name="array"/>.-or-The type of the source <see cref="T:System.Collections.ICollection"/>
            cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null. </exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Clear">
            <summary>
            Clear the values in the renderer dictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />,  starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional.-or- The number of elements in the 
            source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> 
            to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.ICollection" />
            cannot be cast automatically to the type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null. </exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.GetEnumerator">
            <summary>
            Returns the enumerator for retrieving the values in the cell renderer collection.
            </summary>
            <returns>The enumerator for retrieving the values in the cell renderer collection.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing">The value indicating whether both managed and unmanaged resources should be released.
            if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="T:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCellTextViewRenderer">
            <summary>
            GridCellTextViewRenderer is a class for cell renderer that displays <see cref="T:Android.Widget.TextView"/> in a <see cref="T:Syncfusion.SfDataGrid.GridCell"/>.
            The class provides strong typed override methods for initializing content of the cell and arranging the cell visuals.
            <para/>
            Upon editing it displays <see cref="T:Android.Widget.EditText"/> for editing values.
            Updates to appearance and content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellTextViewRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new view or reuses the existing view if reusing can be applied here
            </summary>
            <returns>Returns a created new view or reuses the existing view if reusing can be applied here</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.OnInitializeEditView(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.EditText)">
            <summary>
            Initializes the edit element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.EditText"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.EditText)">
            <summary>
            Updates the cell style of the edit element in a grid cell.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view hosted inside a column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCellTextViewRenderer.SetFocus(Android.Views.View,System.Boolean)">
            <summary>
            Sets the focus for the editing view.
            </summary>
            <param name="view">Current cell renderer element</param>
            <param name="needToFocus">Returns whether focus has to be set or not. </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridHeaderCellRenderer">
            <summary>
            GridHeaderCellRenderer is a class for cell renderer that displays header contents in a <see cref="T:Syncfusion.SfDataGrid.GridHeaderCellControl"/>.
            The class provides strong typed override methods for initializing content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and content of child elements, creation and unloading of views will not trigger 
            Layout or Render calls in parent canvas.
            </summary>
            <remarks>GridHeaderCellRenderer loads a view inside the GridHeaderCellControl inside which 
            it hosts an <see cref="T:Android.Views.View"/> for displaying the <see cref="P:Syncfusion.SfDataGrid.GridColumn.HeaderText"/> and also displays the sort icon adjacent 
            to it upon sorting the column.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridHeaderCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Android.Views.View)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Views.View"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="uiView">An <see cref="T:Android.Widget.TextView"/> object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,Android.Views.View)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Views.View"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="uiView">A <see cref="T:Android.Views.View"/> to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Views.View"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Android.Views.View"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellRenderer.UpdateColumnElement(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the column element of the passed dataColumn.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHeaderCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the header column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridEngine">
            <summary>
            GridEngine is a class, it will helps to customize the SfDataGrid rendering.
            The class provides the override methods for update the display view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridEngine"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEngine.OnUpdateDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Android.Views.View)">
            <summary>
            Updates the view <see cref="T:Android.Views.View"/> hosted inside the column element of the <see cref="T:Syncfusion.SfDataGrid.DataColumn"/>.
            </summary>
            <param name="dataColumn"> Current datacolumn.</param>
            <param name="view">A <see cref="T:Android.Views.View"/> View hosted inside the column element.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2">
            <summary>
            GridVirtualizingCellRenderer is an abstract base class for cell renderer classes that need live views displayed in a cell.
            You can derive from this class and provide the type of the UIElement you want to show inside cells as type parameter.
            The class provides strong typed virtual methods for initializing content of the cell and arranging the cell visuals.
            See <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2"/> for more details.
            <para/>
            The idea behind this class is to provide a place where we can add general code that should be shared for all 
            cell renderer classes in the tree derived from GridVirtualizingCellRendererBase. While this class does at the moment 
            not add meaningful functionality to GridVirtualizingCellRendererBase we created this extra layer of inheritance to make it 
            easy to share code for the GridVirtualizingCellRendererBase base class between grid and common assemblies and keep grid control 
            specific code out of the base class. It is currently not possible with C# to the base class as template type parameter.
            </summary>
            <typeparam name="T1">The type of the UIElement that should be placed inside cells in display mode.</typeparam>
            <typeparam name="T2">The type of the UIElement that should be placed inside cells in edit mode.</typeparam>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2.#ctor">
            <summary>
            Initializes a new instance of the GridVirtualizingCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,`0)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2.OnUpdateCellStyle(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
             To update the cell style for the column element in a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,`0)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2.OnInitializeEditView(Syncfusion.SfDataGrid.DataColumnBase,`1)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.DataColumnBase,`1)">
            <summary>
            Updates the cell style of the edit element in a grid cell.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view hosted inside a column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRenderer`2.UpdateCellStyle(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the cell style of the <see cref="T:Syncfusion.SfDataGrid.GridCaptionSummaryCell"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="label">The UILabel</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2">
            <summary>
            VirtualizingCellRendererBase is an abstract base class for cell renderer classes that need live views displayed in a cell.
            You can derive from this class and provide the type of the view you want to show inside cells as type parameter.
            The class provides strong typed virtual methods for initializing content of the cell and arranging the cell visuals.
            <para/>
            The class manages the creation of cells View objects when the cell is scrolled into view and also unloading of the Views.
            The class offers an optimization in which Views can be recycled when <see cref="P:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.AllowRecycle"/> is set. 
            In this case when a cell is scrolled out of view it is moved into a recycle bin and the next time a new View is scrolled 
            into view the element is recovered from the recycle bin and reinitialized with the new content of the cell.
            <para/>
            Updates to appearance and content of child elements, creation and unloading of views will not trigger 
            Layout or Render calls in parent canvas.
            </summary>
            <typeparam name="T1">The type of the UIElement that should be placed inside cells in display mode.</typeparam>
            <typeparam name="T2">The type of the UIElement that should be placed inside cells in edit mode.</typeparam>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.displayRecycleBin">
            <summary>
            The recycle bin which holds the UI which is loaded in the display mode of the cell.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.editRecycleBin">
            <summary>
            The recycle bin which holds the UI which is loaded in the edit mode of the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.#ctor">
            <summary>
            Initializes a new instance of the GridVirtualizingCellRendererBase class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.AllowRecycle">
            <summary>
            Gets or sets a value indicating whether views can be recycled when scrolled out of view. In this case when a cell is 
            scrolled out of view it is moved into a recycle bin and the next time a new element is scrolled into view the element is 
            recovered from the recycle bin and reinitialized with the new Content of the cell.
            </summary>
            <value><b>True</b> if elements can be recycled when scrolled out of view, otherwise <b>false</b>. 
            The default value is true.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnPrepareViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.PrepareViews(Syncfusion.SfDataGrid.DataColumnBase)"/> to prepare the GridCell's children view(s).
            VirtualizingCellRendererBase overrides this method and creates new views and wires them with the parent cells control.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.UpdateColumnElement(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the column element of the passed dataColumn.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">Data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnUnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.DataColumnBase)"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether GridVirtualizingCellRendererBase.AllowRecycle was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnUpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the value of the Cell view corresponding to GridColumn.
            In our control we are reusing the cell views for horizontal scrolling. Hence we need to update the value of the cell view.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnRefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the cell appearance as per the customer need through API's. 
            In our control we are reusing the cell views for scrolling. Hence we need to update the styles of the cell views.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnLayout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.Layout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)"/> to arrange the GridCell's children view(s).
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding UiElement</param>
            <param name="left">left end of the cell for arranging the view</param>
            <param name="top">top value for arranging the view</param>
            <param name="right">right end of the cell for arranging the view</param>
            <param name="bottom">bottom value for arranging the view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnMeasure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.Measure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)"/> to Measure the GridCell's children view(s). 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding view</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.BeginEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.CellElement,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            This method fires when editing in the current cell begins.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell which is in edit mode.</param>
            <param name="cellElement">The UIElement of the cell which is in edit mode.</param>
            <param name="column">The corresponding grid column of the cell which is in edit mode.</param>
            <param name="rowData">The corresponding record of the row which is in edit mode.</param>
            <returns>Returns a value indicating whether the cell enters into the editing mode or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.CommitCellValue(System.Boolean)">
            <summary>
            Commits the edited value to the underlying data. 
            </summary>
            <param name="isNewValue">A value indicating whether the edited value is new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.EndEdit(Syncfusion.SfDataGrid.DataColumnBase,System.Object)">
            <summary>
            This method fires when the editing in the current cell is ended.
            </summary>
            <param name="dataColumnBase">The corresponding data column of the cell, which leaves the edit mode.</param>
            <param name="record">The underlying data of the cell, which leaves the edit mode.</param>
            <returns>A boolean value indicating whether the current cell has focus.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="!:UILabel"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="!:UILabel"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.CreateOrRecycleDisplayUIView">
            <summary>
            Creates a new view or reuses the existing view if reusing can be applied here
            </summary>
            <returns>Returns a created new view or reuses the existing view if reusing can be applied here</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.CreateOrRecycleEditUIView">
            <summary>
            Creates a new view or reuses the existing view if reusing can be applied here
            </summary>
            <returns>Returns a created new view or reuses the existing view if reusing can be applied here</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnCreateEditUIView">
            <summary>
            Creates a new view for the edit mode of cell.
            </summary>
            <returns>
            Returns the new view for edit mode of cell. 
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.WireEditUIElement(`1)">
            <summary>
            Wires the edit element to the view.
            </summary>
            <param name="editElement">The edit element </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.UnwireEditUIElement(`1)">
            <summary>
            Unwire the edit element to the view.
            </summary>
            <param name="editElement">The edit element </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnEnteredEditMode(Syncfusion.SfDataGrid.DataColumnBase,Android.Views.View)">
            <summary>
            Invoked when the cell is being entered on the edit mode.
            </summary>
            <param name="dataColumn">The corresponding data column being entered on the edit mode.</param>
            <param name="currentRendererElement">The corresponding renderer element in edit mode.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnEditingComplete(Syncfusion.SfDataGrid.DataColumnBase,Android.Views.View)">
            <summary>
            Invoked when editing completed.
            </summary>
            <param name="dataColumn">The corresponding data column being entered on the edit mode.</param>
            <param name="currentRendererElement">The corresponding renderer element in edit mode.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnInitializeEditView(Syncfusion.SfDataGrid.DataColumnBase,`1)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,`0)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">A view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,`0)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">A view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.InitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,`0)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.InitializeEditView(Syncfusion.SfDataGrid.DataColumnBase,`1)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.UpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,`0)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">A view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.UnloadDisplayUIView(Syncfusion.SfDataGrid.CellElement,Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Unloads the display view
            </summary>
            <param name="view">current view</param>
            <param name="column">current column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.UnloadEditUIView(Syncfusion.SfDataGrid.CellElement,Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Unloads the edit view
            </summary>
            <param name="view">current view</param>
            <param name="column">current column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.UpdatePaintProperties(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the paint properties
            </summary>
            <param name="dataColumn">current data column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2.ClearRecycleBin">
            <summary>
            Clears the recycle bin. The cell element will be stored for recycling purpose, when the cell element is scrolled 
            out of view. This method clears all the cell elements which are stored for recycling purpose.
            </summary>
            <remarks>This method clears both the display recycle bin which stores the display cell elements and 
            edit recycle bin which stores the edit cell elements.</remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IGridCellRenderer">
            <summary>
            Defines the interface for all cell renderer.
            A default implementation of this interface is provided by the <see cref="T:Syncfusion.SfDataGrid.GridCellRendererBase"/> class
            from which you should derive custom cell renderer classes. There is however no dependency on <see cref="T:Syncfusion.SfDataGrid.GridCellRendererBase"/>.
            We should access the renderer by using this interface only. Do not create any objects for renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.DataGrid">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.Context">
            <summary>
            Gets the context of the SfDataGrid.
            </summary>
            <value>The context of the SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.IsEditable">
            <summary>
            Gets or sets a value indicating whether the cell is editable or not.
            </summary>
            <value><b>True</b> if the current cell is editable, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.IsFocusable">
            <summary>
            Gets or sets a value indicating whether a grid cell is focusable or not.
            </summary>
            <value><b>True</b> the current cell is focusable, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IGridCellRenderer.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the cell state for the current cell has been set.
            </summary>
            <value><b>True</b> if the cell state for the current cell is set, otherwise <b>false</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.Layout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Renderer will arrange the views using this method.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell.</param>
            <param name="view">The corresponding UIElement of the cell.</param>
            <param name="left">The left end of the cell for arranging the view.</param>
            <param name="top">The top end of the cell for arranging the view.</param>
            <param name="right">The right end of the cell for arranging the view.</param>
            <param name="bottom">The bottom end of the cell for arranging the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to update the cell value.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.Measure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.View,System.Int32,System.Int32)">
            <summary>
            Method which is used by the renderer to measure the cell views.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell.</param>
            <param name="view">The corresponding view of the cell.</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size.</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.PrepareViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to create and initiate the view for cell.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used for unloading the view of the cell.(For Recycling Purpose)
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to refresh the display value of the cell.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method which is used to update the binding information of the cell UIElement.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.SetCurrentCellState(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.CellElement,System.Boolean)">
            <summary>
            Update the current cell information in the renderer while current cell was activated.
            </summary>
            <param name="currentCellIndex">The row column index of the current cell.</param>
            <param name="currentCellElement">The UIElement of the current cell.</param>
            <param name="isInEditing">The value indicating whether the view is in edit mode or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.SetFocus(System.Boolean)">
            <summary>
            Sets the focus to the current cell renderer element.
            </summary>
            <param name="setFocus">The value indicating whether the current cell renderer element is focusable or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.ResetCurrentCellState">
            <summary>
            Resets the current cell information in renderer, when the current cell is deactivated.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.BeginEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.CellElement,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            This method fires when editing in the current cell begins.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell which is in edit mode.</param>
            <param name="cellElement">The UIElement of the cell which is in edit mode.</param>
            <param name="column">The corresponding grid column of the cell which is in edit mode.</param>
            <param name="rowData">The corresponding record of the row which is in edit mode.</param>
            <returns>Returns a value indicating whether the cell enters into the editing mode or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.EndEdit(Syncfusion.SfDataGrid.DataColumnBase,System.Object)">
            <summary>
            This method fires when the editing in the current cell is ended.
            </summary>
            <param name="dataColumn">The corresponding data column of the cell, which leaves the edit mode.</param>
            <param name="record">The underlying data of the cell, which leaves the edit mode.</param>
            <returns>A boolean value indicating whether the current cell has focus.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.CommitCellValue(System.Boolean)">
            <summary>
            Commits the edited value to the underlying data. 
            </summary>
            <param name="isNewValue">A value indicating whether the edited value is new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.GridColumn)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="column">The corresponding column for which the binding update should be determined.</param>
            <returns>
            <b>True</b> if the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.ClearRecycleBin">
            <summary>
            Clears the recycle bin. The cell element will be stored for recycling purpose, when the cell element is scrolled 
            out of view. This method clears all the cell elements which are stored for recycling purpose.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Method used to update the cell style.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1">
            <summary>
            This class implements a cache of view of the given type parameter T. It is used by the 
            <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingCellRendererBase`2"/> renderer to recycle View elements for cells 
            that were scrolled out of view and delay unloading of views.
            <para/>
            This reduces the number of times the views needs to be created or unloaded and instead only the 
            contents of the views will be reinitialized with cell contents.
            </summary>
            <typeparam name="T">Type of the view.</typeparam>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1.#ctor">
            <summary>
            Initializes a new instance of the VirtualizingCellUIElementBin class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            The constructor is created as per the fxcop error : CA2229 (https://msdn.microsoft.com/library/ms182343.aspx): Implement serialization constructors 
            <summary>
            Initializes a new instance of the VirtualizingCellUIElementBin class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1.Item(Syncfusion.SfDataGrid.GridCellRendererBase)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified renderer.
            </summary>
            <value>the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified renderer.</value>
            <param name="renderer">GridCellRenderer Base</param>
            <returns>Returns the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified renderer.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1.Enqueue(Syncfusion.SfDataGrid.GridCellRendererBase,`0)">
            <summary>
            Enqueues the specified UI view for the given renderer.
            </summary>
            <param name="renderer">The renderer whose view is to be enqueued.</param>
            <param name="view">The UI view to be enqueued.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.VirtualizingCellUIElementBin`1.Dequeue(Syncfusion.SfDataGrid.GridCellRendererBase)">
            <summary>
            Dequeues a view from the specified renderer.
            </summary>
            <param name="renderer">The renderer from which the renderer is to be dequeued.</param>
            <returns>Returns the view of the specified renderer.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridRowHeaderCellRenderer">
            <summary>
            GridRowHeaderCellRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.GridRowHeaderCell"/>.
            The class provides strong typed override methods for initializing content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowHeaderCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridRowHeaderCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowHeaderCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.GridRowHeaderCell)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowHeaderCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,Syncfusion.SfDataGrid.GridRowHeaderCell)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowHeaderCellRenderer.OnRefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.DataColumnBase)"/> to update the cell appearance as per the customer need through API's. 
            In our control we are reusing the cell views for scrolling. Hence we need to update the styles of the cell views.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowHeaderCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.GridRowHeaderCell"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.GridRowHeaderCell"/> view.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SfDataGrid">
            <summary>
            A data bound list control that displays the items from data source in a tabular view. The SfDataGrid control allows you to select, sort and group these items.
            </summary>
            <remarks>
            <para>
            The SfDataGrid control provides a flexible way to display a collection of data in rows and columns. 
            The SfDataGrid includes built-in column types and a template column for hosting custom content.
            </para>
            <para>
            To bind the SfDataGrid to data, set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> property to an IEnumerable implementation.
            Each row in the data grid is bound to an object in the data source, and each column in the data grid is bound 
            to a property of the data object. In order for the SfDataGrid user interface to update automatically when items are 
            added to or removed from the source data, the SfDataGrid must be bound to a collection that implements the 
            <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> interface, such as an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>. To automatically reflect property changes, 
            the objects in the source collection must implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface.
            </para>
            </remarks>    
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/getting-started"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AutoExpandGroups">
            <summary>
            Gets or sets a value indicating whether the <seealso cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> should auto expand groups when grouping. By enabling,
            this property, when the user group any column, then all groups will be in expanded state.
            </summary>
            <value><b>True</b> if auto expand groups is enabled, otherwise, <b>false</b>. 
            The default value is true.</value>
            <example>
            <code lang="C#">
            <![CDATA[
            this.dataGrid.AutoExpandGroups = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#expand-groups-while-grouping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowGroupExpandCollapse">
            <summary>
            Gets or sets a value indicating whether to allow expanding and collapsing of groups in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            By default, the groups will be in expanded state in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, when grouped. However, the user can expand or collapse a 
            group in runtime by enabling this property.
            </summary>
            <value><b>True</b> if expand and collapse groups is enabled, otherwise <b>false</b>. The default value is false.</value>
            <example>
            <code lang="C#">
            <![CDATA[
            this.dataGrid.AllowGroupExpandCollapse = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#expand-groups-while-grouping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSwiping">
            <summary>
            Gets or sets a boolean value denoting whether to enable/disable the swiping in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. Swipe views are displayed
            when swiping from ‘left to right’ or ‘right to left’ on a data row when swiping is enabled. 
            </summary>
            <value><b>True</b>, if swiping is enabled, otherwise <b>false</b>. The default 
            value is false.</value>
            <remarks>
            When swiping is enabled in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, the swipe view can be displayed when swiping from ‘left to right’ or ‘right to left’ 
            on a data row. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows the user to customize the swipe views to be displayed by using 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LeftSwipeView"/> and <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RightSwipeView"/>. The swipe gesture can be restricted up to a 
            certain point by using <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.MaxSwipeOffset"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowSwiping = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/swiping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.MaxSwipeOffset">
            <summary>
            Gets or sets the maximum swipe offset of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables the swiping option by setting the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSwiping"/> to true. Swipe views are displayed when swiping from ‘left to right’ or ‘right to left’ on a data row. 
            The swipe gesture can be restricted up to a certain point by using this property.
            </summary>
            <value>The maximum swipe offset of SfDataGrid. The default value is 200.</value>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.MaximumSwipeOffset = 300;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/swiping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshView">
            <summary>
            Gets or sets the view to indicate the <b>Progress</b> of pulling operation in a SfDataGrid. Any view that can indicate the <b>Progress</b> of the pulling 
            can be assigned to the property such that it animates the values of the <b>Progress</b> of pulling.
            </summary>
            <value>The view that is displayed when pull to refresh is done.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides you an option to refresh it when performing the pulling action. A command will be fired when 
            pulling action is performed and it can be used to refresh (add, delete or modify the underlying data) in the grid. To enable the pull to refresh feature, 
            you must set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowPullToRefresh"/> to true and also must set the command to <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand"/> property. 
            By default, a busy indicator will be displayed when doing the pulling action. However, 
            SfDataGrid allows you to customize this view based on the requirement using <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshView"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.PullToRefreshView = new CustomPullToRefreshView();
            
            // CustomPullToRefreshView.cs
            public class CustomPullToRefreshView : PullToRefreshView
            {
            
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand">
            <summary>
            Gets or sets the command to be executed when performing the pulling operation to refresh the grid. 
            You must set this property to an <see cref="T:System.Windows.Input.ICommand"/> and the property to true to enable pulling operation in SfDataGrid. 
            This command will be fired upon performing the pulling operation for doing the refreshing operation.
            </summary>
            <value>The command to be executed when PullToRefresh action is performed.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides an option to refresh it when performing the pulling action. 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand"/> will be fired to refresh (add, delete or modify the underlying data) 
            the grid. A busy indicator will be displayed to denote the pulling and refreshing operation.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[        
            dataGrid.AllowPullToRefresh = true;
            dataGrid.PullToRefreshCommand = new Command(ExecutePullToRefreshCommand);
            
            private async void ExecutePullToRefreshCommand()
            {
               this.dataGrid.IsBusy = true;
               await Task.Delay(new TimeSpan(0, 0, 5));
               viewModel.ItemsSourceRefresh ();
               this.dataGrid.IsBusy = false;
            }
            
            //Command.cs
            public class Command : ICommand
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/pulltorefresh#pulltorefreshcommand"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMorePosition">
            <summary>
            Gets or sets the position to load the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. When the grid is scrolled to the 
            last record of the collection, a view will be displayed which provides an option to load more items when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> 
            is tapped. The user can customize the position of the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> either to appear in the bottom or top below the header 
            using this property. To enable the load more option, it is mandatory to set <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowLoadMore"/> as true.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.LoadMoreViewPosition"/> to display the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> in SfDataGrid. The default value is 
            <see cref="F:Syncfusion.SfDataGrid.LoadMoreViewPosition.Bottom"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows the user to customize the position of the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/>. 
            By default, the load more view will be positioned at the bottom of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. The user can customize the load more view to 
            appear in the top below the header by setting <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMorePosition"/> as <see cref="F:Syncfusion.SfDataGrid.LoadMoreViewPosition.Top"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.LoadMorePosition = LoadMoreViewPosition.Top;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/loadmore#customize-loadmoreview-position"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, which will be displayed when the grid is scrolled 
            to the last position of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, provided that <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowLoadMore"/> is set as true.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> of SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides an option to load more items in runtime, when the grid is scrolled to the last record of the collection.
            A command will be fired when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> is tapped and it can be used to add more items to the underlying data. 
            To enable the load more feature, you must set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowLoadMore"/> to true and also must set the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/> property. 
            <para/>
            By default, load more view is a button, containing the text "LOAD MORE ITEMS". <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> 
            allows to customize the load more view, by implementing the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> class and setting 
            the customized load more view class to <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.LoadMoreView = new CustomLoadMoreView();
            
            //CustomLoadMoreView.cs
            public class CustomLoadMoreView : LoadMoreView
            {
            
            }
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/loadmore#customize-loadmoreview"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreText">
            <summary>
            Gets or sets the load more text to be displayed in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/>. 
            By default, the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> displays the "LOAD MORE ITEMS" text, the user can customize the text to be displayed 
            in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> by using this property.
            </summary>
            <value>The text to be displayed in <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/>. By default, 
            the value is "LOAD MORE ITEMS".</value>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.LoadMoreText = "Load More Items";
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/loadmore#customize-load-more-display-text"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand">
            <summary>
            Gets or sets the command to be executed when an end-user taps the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> to load new data items 
            in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The command to be executed when load more view is clicked.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows to load more items in the datagrid, when the last data of the collection is reached, by executing the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/> when an end-user taps the <see cref="T:Syncfusion.SfDataGrid.LoadMoreView"/> of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowLoadMore = true;
            dataGrid.LoadMoreCommand = new Command(ExecuteLoadMoreCommand);
            
            private async void ExecuteLoadMoreCommand()
            {
                this.dataGrid.IsBusy = true;
                await Task.Delay(new TimeSpan(0, 0, 5));
                viewModel.LoadMoreItems();
                this.dataGrid.IsBusy = false;
            }
            ]]>
            </code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/loadmore#loadmorecommand"/>
            <seealso cref="!:https://www.syncfusion.com/kb/7383/how-to-improve-performance-when-doing-bulk-changes-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy">
            <summary>
            Gets or sets a value indicating the busy state of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> when executing the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/> or <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand"/>.
            </summary>
            <value><b>True</b> if SfDataGrid is executing either the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/> or <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand"/>, otherwise <b>false</b>. 
            By default the value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> will be busy when the underlying collection is refreshed or modified by executing the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/> or <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowPullToRefresh">
            <summary>
            Gets or sets a value indicating whether to enable/disable the refreshing option upon pulling the grid. 
            On enabling this property, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides an option to refresh it when performing the pulling action. 
            The refreshing can be done using the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand"/> and hence it is mandatory to set the property too for enabling the refreshing option.
            </summary>
            <value><b>True</b> if pull to refresh is enabled, otherwise <b>False</b>. By default, value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides an option to refresh it when performing the pulling action. A command will be fired and it can be used 
            to refresh (add, delete or modify the underlying data) the grid. To enable the pull to refresh feature, you must set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowPullToRefresh"/> 
            to true and also must set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshCommand"/> property. By default, a busy indicator will be displayed when doing the pulling animation. 
            However, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize this view based on the requirement using <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.PullToRefreshView"/> property.
            </remarks>
            <example><code lang="C#"><![CDATA[
            dataGrid.AllowPullToRefresh = true;
            dataGrid.PullToRefreshCommand = new Command(ExecutePullToRefreshCommand);
            
            private async void ExecutePullToRefreshCommand()
            {
                this.dataGrid.IsBusy = true;
                await Task.Delay(new TimeSpan(0, 0, 5));
                viewModel.ItemsSourceRefresh ();
                this.dataGrid.IsBusy = false;
            }
            
            //Command.cs
            public class Command : ICommand
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/pulltorefresh"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowLoadMore">
            <summary>
            Gets or sets a value indicating whether to enable/disable the load more option for adding more records in runtime, when the 
            grid is scrolled to the last record of the collection. On enabling this property, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides an option 
            to add more items to the underlying collection when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> is tapped, 
            by executing the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/> and hence it is mandatory to set the property too for enabling the load more option.
            </summary>
            <value><b>True</b>, if load more is enabled, otherwise <b>false</b>. The 
            default value is false.</value>
            <remarks> 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides an option to load more items in runtime, when the grid is scrolled to the last record of the collection.
            A command will be fired when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> is tapped and it can be used to add more items to the underlying data. 
            To enable the load more feature, you must set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowLoadMore"/> to true and also must set the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreCommand"/> property. By default, a button will be displayed when the grid is scrolled
            to the last record. However, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize this view based on the requirement using 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreView"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowLoadMore = true;
            dataGrid.LoadMoreCommand = new Command(ExecuteLoadMoreCommand);
            
            private async void ExecuteLoadMoreCommand()
            {
                this.dataGrid.IsBusy = true;
                await Task.Delay(new TimeSpan(0, 0, 5));
                viewModel.LoadMoreItems();
                this.dataGrid.IsBusy = false;
            }
            ]]>
            </code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.SfDataGrid.IsBusy"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/loadmore"/>
            <seealso cref="!:https://www.syncfusion.com/kb/7383/how-to-improve-performance-when-doing-bulk-changes-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource">
            <summary>
            Gets or set the external data source of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, to display the data in the grid.
            It supports the data sources such as <see cref="T:System.Collections.Generic.List`1"/>, <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>, and so on. 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> property helps to bind the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> with the collection of objects.
            </summary>
            <value>The items source of the SfDataGrid.</value>
            <remarks>
            To bind the SfDataGrid to data, set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> property to an <see cref="T:System.Collections.IEnumerable"/> implementation.
            Each row in the data grid is bound to an object in the data source, and each column in the data grid is bound 
            to a property of the data object. In order for the SfDataGrid user interface to update automatically when items are 
            added to or removed from the source data, the SfDataGrid must be bound to a collection that implements the 
            <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> interface, such as an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>. To automatically reflect property changes, 
            the objects in the source collection must implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[        
            dataGrid.ItemsSource = viewModel.OrderInfoCollection;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/data-binding"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SortComparers">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Data.SortComparers"/> of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, 
            for applying sorting to the columns based on the custom logic. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to sort columns based on custom logic when the standard sorting techniques do not meet the requirements. 
            For each column, you can apply different sorting criteria by adding <see cref="T:Syncfusion.Data.SortComparer"/> objects 
            to <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortComparers"/> collection.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.SortComparers"/> of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</value>
            <remarks>
            <see cref = "T:Syncfusion.SfDataGrid.SfDataGrid" /> allows you to sort columns based on custom logic when the standard sorting techniques do not meet the requirements.
            For each column, you can apply different sorting criteria by adding <see cref="T:Syncfusion.Data.SortComparer"/> objects 
            to <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortComparers"/> collection. 
            The <see cref="T:Syncfusion.Data.SortComparer"/> has the two properties : <see cref="P:Syncfusion.Data.SortComparer.PropertyName"/> 
            which refers to <see cref="!:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> of the column to apply sorting. 
            and <see cref="P:Syncfusion.Data.SortComparer.Comparer"/> which refers to the custom sort comparer that implements the <see cref="T:System.Collections.IComparer"/> 
            and <see cref="T:Syncfusion.Data.ISortDirection"/> interfaces.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[        
            dataGrid.SortComparers.Add (new SortComparer () 
                {
                PropertyName = "FirstName",
                Comparer = new CustomComparer()
                });
            dataGrid.SortColumnDescriptions.Add (new SortColumnDescription()
                {
                ColumnName = "FirstName",
                SortDirection = ListSortDirection.Descending
                });
                
            //CustomComparer.cs
            public class CustomComparer : IComparer<Object>, ISortDirection
            {
            
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.View">
            <summary>
            Gets the current view of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> has the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> property of type <see cref="T:Syncfusion.Data.ICollectionViewAdv"/> interface 
            that implements <see cref="T:Syncfusion.Data.ICollectionView"/> interface. View is responsible for maintaining and manipulating data 
            and other advanced operations like Sorting, Grouping, and etc.
            </summary>
            <value>The collection view of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> has the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> property of type <see cref="T:Syncfusion.Data.ICollectionViewAdv"/> interface 
            that implements <see cref="T:Syncfusion.Data.ICollectionView"/> interface. When you bind collection to <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> 
            property, the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> will be created and maintains the operations on data such as 
            grouping, sorting, insert, delete, and modification.
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/data-binding#view"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.GridCellRendererCollection"/> that contains the cell renderers in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers"/> manages the creation of cells view objects when the cell is scrolled 
            into view and also unloading of the views. Contains logics to place the UIElement inside cells in display and edit mode. 
            </summary>
            <value>
            The collection containing the renderers in the SfDataGrid.
            </value>
            <remarks>
            The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers"/> manages the creation of cells view objects when the cell is scrolled 
            into view and also unloading of the views. Contains logics to place the UIElement inside cells in display and edit mode. 
            The user can implement the renderer by extending it from the renderer he needs 
            and customize the type of cell to be loaded for each column type in editing and normal mode.
            <para/>
            <b>Note:</b>When the user overrides the renderer, he needs to replace it in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers"/> collection.
            For example, if the user implements the <see cref="T:Syncfusion.SfDataGrid.GridCellTextViewRenderer"/> class, to customize the cell in the <see cref="T:Syncfusion.SfDataGrid.GridTextColumn"/>, 
            then he needs to replace it in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers"/> collection.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            dataGrid.CellRenderers.Remove("TextView");
            dataGrid.CellRenderers.Add("TextView", CustomTextViewRenderer);  
            
            //CustomTextViewRenderer.cs
            public class CustomTextViewRenderer : GridCellTextViewRenderer
            { 
            
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.Columns">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.Columns"/> collection of the SfDataGrid. The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> 
            collection contains the columns in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> which are created for each property in the model class. The user can add
            the various column types to the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> based on the requirement by specifying the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> 
            which associates the property in the data source.
            </summary>
            <value>The columns collection of the SfDataGrid.</value>
            <remarks>
            The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection contains the columns in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> which are created 
            for each property in the model class. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to define the columns manually by 
            adding the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> objects to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection. 
            There are different types of columns available in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> and you can create any column based on your requirement.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            dataGrid.Columns.Add(new GridTextColumn() { MappingName = "OrderID" });
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#manually-generate-columns"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-types#gridtextcolumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.ColumnSizer"/> of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, that specify 
            how columns in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> are sized. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> applies width 
            for all the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection.
            based on the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer"/> property.
            </summary>
            <value>The type of <see cref="T:Syncfusion.SfDataGrid.ColumnSizer"/> that is applied to the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.ColumnSizer.None"/>.</value>
            <remarks>
            The user can specify how columns in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> are sized. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> applies width for all the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection 
            based on the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer"/> property. When the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer"/> is 
            <see cref="F:Syncfusion.SfDataGrid.ColumnSizer.Star"/>, all the <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> are adjusted an equal column width to fit within the view.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.ColumnSizer = ColumnSizer.Star;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/column-sizer"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SourceType">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SourceType"/> of the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/>.
            </summary>
            <value>The type of the data source of SfDataGrid.</value>
            <remarks>
            The user can specify the type of <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SourceType"/> property. 
            The user may get the <see cref="T:System.InvalidCastException"/> sometimes when binding with complex data collections which can easily be handled by simply specifying the 
            type of <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SourceType"/> as given in the code example.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SourceType = typeof(OrderInfo);
            ]]>
            </code>
            </example>
            <exception cref="T:System.InvalidCastException">Sometimes you may get this exception, if you get this exception, you need to set this property
            as given in the code example.</exception>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a boolean value indicating whether to generate the columns automatically or not.
            The <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> creates columns automatically based on the property <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/>. 
            It decides columns generation for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> based on the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumnsMode"/> property.
            </summary>
            <value><b>True</b> if auto generate columns is enabled, otherwise <b>false</b>. The default value is true.</value>
            <remarks>
            The <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> creates columns automatically based on the property <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/>. 
            It decides columns generation for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> based on the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumnsMode"/> property.
            The user can also customize the automatically generated column by using the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.AutoGeneratingColumn"/> event.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AutoGenerateColumns = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#automatic-columns-generation"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumnsMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.AutoGenerateColumnsMode"/> of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. 
            To generate the columns automatically based on the underlying collection the user must set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> 
            as true. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> decides columns generation based on the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumnsMode"/> property.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.AutoGenerateColumnsMode"/> of SfDataGrid. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.Reset"/>.</value>
            <remarks>
            When columns are generated automatically by setting <c>SfDataGrid.AutoGenerateColumns = true</c>, the user can set the 
            mode in which the columns should be generated by using the <see cref="!:SfDataGrid.AutoGernerateColumnsMode"/> property. 
            The user can also customize the automatically generated column by using the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.AutoGeneratingColumn"/> event.
            In order to include only the columns defined manually in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection, the user must set the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumnsMode"/> as <see cref="F:Syncfusion.SfDataGrid.AutoGenerateColumnsMode.None"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AutoGenerateColumnsMode = AutoGenerateColumnsMode.None;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#automatic-columns-generation"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.HeaderRowHeight">
            <summary>
            Gets or sets the row height of the header in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The height of the header row. The default value is 50.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize the height of the header row by setting the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.HeaderRowHeight"/> property. The user can collapse the header row by setting <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.HeaderRowHeight"/> 
            to zero.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.HeaderRowHeight = 40; 
            ]]>
            </code>
            </example>       
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/row-height-customization#customize-headerrowheight"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeight">
            <summary>
            Gets or sets the height of the rows in the body and footer region of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The height of the rows in the body and footer region of SfDataGrid. The default value is 40.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize the height of the grid rows in the body and footer region 
            by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeight"/> property. This property responds to runtime changes 
            and hence you can customize it based on your requirement.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.RowHeight = 50; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/row-height-customization#customize-rowheight-for-all-rows"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.DefaultColumnWidth">
            <summary>
            Gets or sets the default column width of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> renders in view based on the value of 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.DefaultColumnWidth"/> property in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The default column width of the SfDataGrid. The default value is 120.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize the default column width property based on the requirement by setting the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.DefaultColumnWidth"/> property. Columns are arranged in view based on the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.DefaultColumnWidth"/> property when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer"/> is <see cref="F:Syncfusion.SfDataGrid.ColumnSizer.None"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.DefaultColumnWidth = 100; 
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader">
            <summary>
            Gets or sets a boolean value indicating whether to include the row header or not. By default, nothing will be displayed 
            in the row header.
            </summary>
            <value><b>True</b> if row header is visible, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            To include the RowHeader column to SfDataGrid, you need to set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> to true.
            Initially when you set the <c>SfDataGrid.ShowRowHeader = true</c>, you will be able to see empty cells in front of the rows. 
            To customize the RowHeaderCell the user needs to implement the <see cref="T:Syncfusion.SfDataGrid.GridRowHeaderCellRenderer"/> class and replace it in 
            the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CellRenderers"/> collection.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.ShowRowHeader = true; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://www.syncfusion.com/kb/7404/how-to-display-rowindex-at-rowheadercell-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row header column which will be frozen at the left end of the view. To include the row header column, the user needs to set <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> 
            as true.
            </summary>
            <value>The width of the row header column. The default value is 20.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize the width of the row header column based on the requirement 
            by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeaderWidth"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.ShowRowHeader = true; 
            dataGrid.RowHeaderWidth = 15;
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.FooterRowsCount">
            <summary>
            Gets or sets the footer rows count to freeze the rows at the bottom end. The default value is 0.
            </summary>
            <value>The footer rows count.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.FooterColumnsCount">
            <summary>
            Gets or sets the footer columns count to freeze the columns at the right end. The default value is 0.
            </summary>
            <value>The footer columns count.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenRowsCount">
            <summary>
            Gets or sets the frozen rows count to freeze the rows at the top below header. 
            </summary>
            <value>The number of rows to be frozen from top below header. The default value is 0.</value>
            <remarks>
            SfDataGrid provides extensive support to freeze the rows at the top of the view below the header row 
            by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenRowsCount"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.FrozenRowsCount = 2; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/freeze-panes#freeze-rows"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenColumnsCount">
            <summary>
            Gets or sets the frozen columns count to freeze the columns at the left, next to the row header column if <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> is true.
            </summary>
            <value>The number of columns to be frozen from left end, next to row header, if <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> is true. 
            The default value is 0.</value>
            <remarks>
            SfDataGrid also provides support to freeze the columns at the left of the view by setting the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenColumnsCount"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.FrozenColumnsCount = 2; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/freeze-panes#freeze-columns"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. The user can get the columns that
            represent sorting from the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> collection. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> also allows 
            the user to programmatically sort the column by adding the <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> to the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> collection. The user must set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSorting"/> as true for 
            enabling interactive sorting in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The collection of columns which represent sorting.</value>
            <remarks>
            The user can get the columns that represent sorting from the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> collection. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> also allows the user to programmatically sort the column by adding the 
            <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> collection. The user must specify the column 
            to be sorted in the <see cref="P:Syncfusion.SfDataGrid.SortColumnDescription.ColumnName"/> which represents the <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName"/> of the column and 
            the user can optionally set the direction of sorting to be applied by setting the <see cref="P:Syncfusion.SfDataGrid.SortColumnDescription.SortDirection"/>. 
            By default columns will be sorted in the ascending order.
            </remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.AllowSorting = true;
            dataGrid.SortColumnDescriptions.Add (new SortColumnDescription()
                {
                    ColumnName = "OrderID",
                    SortDirection = ListSortDirection.Descending
                });
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting#programmatic-sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSorting">
            <summary>
            Gets or sets a value indicating whether to enable/disable sorting in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. When 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSorting"/> is set as true, the user can sort the data simply by tapping the column header he wishes to sort. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> also allows the user to programmatically sort the column by adding the <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> to the 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> collection. 
            </summary>
            <value><b>True</b> if sorting is enabled, otherwise <b>false</b>. 
            The default value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows to sort the data by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSorting"/> as true. The user can sort the data
            by just tapping the column header he wishes to sort or programmatically sort the column by adding the <see cref="T:Syncfusion.SfDataGrid.SortColumnDescription"/> 
            to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortColumnDescriptions"/> collection. Once sorting is applied, the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> shows a sort icon 
            in the respective column header indicating the direction of sorting. 
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            dataGrid.AllowSorting = true;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowMultiSorting">
            <summary>
            Gets or sets a value indicating whether to enable multi sorting or not. By enabling the multi sorting, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows the 
            user to sort the data against more than one columns.
            </summary>
            <value><b>True</b> if multi sorting is enabled, otherwise <b>false</b>. 
            The default value is false.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows multiple sorting by which the underlying 
            data can be sorted by more than one columns. To apply sorting for multiple columns, 
            tap the desired column headers after setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowMultiSorting"/> property to true.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AllowMultiSorting = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting#multi-sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowTriStateSorting">
            <summary>
            Gets or sets a value indicating whether to enable tri-state sorting or not. By enabling the tri-state sorting in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, 
            the data can be sorted in three states : ascending,  descending and unsorted.
            </summary>
            <value><b>true</b> if tri-state sorting is enabled, otherwise <b>false</b>. 
            The default value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> also allows you to unsort the data in the original order by clicking the header again after sorting 
            to descending order by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowTriStateSorting"/> property to true.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AllowTriStateSorting = true;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting#tri-state-sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SortTapAction">
            <summary>
            Gets or sets a value indicating whether to sort the data on single tap or double tap action.
            </summary>
            <value>The value indicating the sort tap action. The default value is <see cref="F:Syncfusion.SfDataGrid.SortTapAction.SingleTap"/>.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows to customize the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SortTapAction"/> by which the user 
            can apply sorting either in single tap or double tap action.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SortTapAction = SortTapAction.DoubleTap;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting#sort-column-in-double-click"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.CellBorderStyle">
            <summary>
            Gets or sets the cell border style.
            </summary>
            <value>The cell border style of SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridStyle">
            <summary>
            Gets or sets the grid style of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. The default style will be applied to the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, the user 
            can customize the style applied to the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The grid style of the SfDataGrid.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows to customize the style of datagrid, by implementing 
            the <see cref="T:Syncfusion.SfDataGrid.DataGridStyle"/> class and setting the customized grid style 
            class as <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.GridStyle"/>.</remarks>
            <example>
            <code>
            <![CDATA[
            dataGrid.GridStyle = new CustomGridStyle();
            
            //CustomGridStyle.cs
            public class CustomGridStyle : DataGridStyle
            {
            
            }
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/styles"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AlternatingRowColor">
            <summary>
            Gets or sets the color of the alternating row of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The color of the alternating row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AlternationCount">
            <summary>
            Gets or sets the alternation count for applying alternate row color to the rows of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The alternation count of the rows for which the alternate row color should 
            be applied.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows the user to set alternate row color by setting the <see cref="!:SfDataGrid.GridStyle.AlternatingRowColor"/> 
            property. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize the rows for which the alternate row color needs to be updated based 
            on the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AlternationCount"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.GridStyle.AlternatingRowColor = Color.Fuschia;
            dataGrid.AlternationCount = 3;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://www.syncfusion.com/kb/6212/how-to-apply-alternate-row-colors-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.DataFetchSize">
            <summary>
            Gets or sets the data fetch size for the Incremental Source. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> supports incremental loading, the user can
            customize the size of data to be fetched in incremental loading by using <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.DataFetchSize"/> property.
            </summary>
            <value>The size of the data to be fetched for the incremental source. The default value is 5.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> supports Incremental loading, by which when the user reaches the end of the collection in the dataGrid, 
            the data will be fetched automatically. The user can customize the size of the data to be fetched by setting 
            the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.DataFetchSize"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.DataFetchSize = 10;
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionController">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.GridSelectionController"/> of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            The <see cref="T:Syncfusion.SfDataGrid.GridSelectionController"/> handles the selection operations of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The selection controller of the SfDataGrid.</value>
            <remarks>The <see cref="T:Syncfusion.SfDataGrid.GridSelectionController"/> contains methods that handle selection feature of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            The user can customize the <see cref="T:Syncfusion.SfDataGrid.GridSelectionController"/> by implementing the <see cref="T:Syncfusion.SfDataGrid.GridSelectionController"/> class
            and by setting the customized selection controller class to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionController"/>. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides extensibility to have multiple selection colors and to animate the selected rows by extending the 
            <see cref="T:Syncfusion.SfDataGrid.GridSelectionController"/> class.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            sfGrid.SelectionController = new CustomSelectionController(sfGrid);
            
            //CustomSelectionController.cs
            public class CustomSelectionController : GridSelectionController
            {
            
            }
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#multiple-selection-colors"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#selection-animation"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#clear-selection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.SelectionMode"/> of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. To enable Selection in 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, you need to set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode"/> property to value other than 
            <see cref="F:Syncfusion.SfDataGrid.SelectionMode.None"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode"/> of the SfDataGrid. The default value is <see cref="F:Syncfusion.SfDataGrid.SelectionMode.None"/>.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> lets you to select a specific row or group of rows either programmatically or by touch interactions. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows to control the selection mode by using the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode"/> property. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> supports different selection modes : <see cref="F:Syncfusion.SfDataGrid.SelectionMode.Single"/>, 
            <see cref="F:Syncfusion.SfDataGrid.SelectionMode.Multiple"/>, <see cref="F:Syncfusion.SfDataGrid.SelectionMode.None"/>None and <see cref="F:Syncfusion.SfDataGrid.SelectionMode.SingleDeselect"/>.
            </remarks>
            <example>
            <code>
            <![CDATA[
            dataGrid.SelectionMode = SelectionMode.Single;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#multiple-selection-colors"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.CaptionSummaryRow">
            <summary>
            Gets or sets the caption summary row of the group in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. Every group as a caption summary row,  
            which is used to display the summary information in the caption of the group.
            </summary>
            <value>The caption summary row of the group in the SfDataGrid.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides built-in support for caption summaries. 
            The caption summary value calculated based on the records in a group and the summary information 
            will be displayed in the caption of group.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/summary#caption-summaries"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.TableSummaryRows">
            <summary>
            Gets or sets the collection of table summary rows of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. The table summary value is calculated 
            based on all the records in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to add multiple table summary 
            rows either at top or bottom or at both positions.
            </summary>
            <value>The collection of <see cref="T:Syncfusion.SfDataGrid.GridTableSummaryRow"/> of 
            SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides built-in support for table summaries. Table Summary is used to display the summary information at 
            top and/or bottom in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. The user can add table summary row in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> by 
            adding <see cref="T:Syncfusion.SfDataGrid.GridTableSummaryRow"/> to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.TableSummaryRows"/> collection.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            GridTableSummaryRow summaryRow = new GridTableSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn()
               {
               Name = "TotalSalary",
               MappingName = "Salary",
               Format = "{Sum}",
               SummaryType = SummaryType.DoubleAggregate
               });
            sfGrid.TableSummaryRows.Add(summaryRow);        
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedIndex">
            <summary>
            Gets or sets the selected row's index in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. To enable Selection in 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, you need to set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode"/> property to value other than 
            <see cref="F:Syncfusion.SfDataGrid.SelectionMode.None"/>.
            </summary>
            <value>The index of the selected row in the SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> lets you to select a specific row either programmatically or by touch interactions.
            Selection can also be done programmatically by setting the row index to be selected to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedIndex"/> property.
            </remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.SelectedIndex = 3;
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#programmatic-selection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.CurrentItem">
            <summary>
            Gets or sets the current selected item of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>The current selected item of the SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItem">
            <summary>
            Gets or sets the selected item of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. To enable Selection in 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, you need to set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode"/> property to value other than 
            <see cref="F:Syncfusion.SfDataGrid.SelectionMode.None"/>.
            </summary>
            <value>The selected item of the SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> lets you to select a specific row either programmatically or by touch interactions.
            Selection can also be done programmatically by setting the underlying object to be selected to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItem"/> 
            property.
            </remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.SelectedItem = viewModel.OrdersInfo[5];
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#programmatic-selection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems">
            <summary>
            Gets the selected items collection of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. To enable multiple Selection in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, 
            you need to set the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode"/> property to <see cref="F:Syncfusion.SfDataGrid.SelectionMode.Multiple"/>.
            </summary>
            <value>The selected items collection of the SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> lets you to select a specific row or group of rows either programmatically or by touch interactions.
            When the selection mode is <see cref="F:Syncfusion.SfDataGrid.SelectionMode.Multiple"/> the user can programmatically select more than one row 
            by adding the underlying object to be selected to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> property.
            </remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.SelectedItems.Add (viewModel.OrdersInfo [4]);
            dataGrid.SelectedItems.Add (viewModel.OrdersInfo [5]);
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#programmatic-selection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GroupColumnDescriptions">
            <summary>
            Gets or sets the group column descriptions of the SfDataGrid.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.GroupColumnDescriptions"/> collection 
            of SfDataGrid.</value>
            <remarks>SfDataGrid allows grouping by which the underlying data is 
            grouped based on the column added in the group column descriptions collection.</remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.GroupColumnDescriptions.Add (new GroupColumnDescription () {
                ColumnName = "CustomerID",
                });
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#programmatic-grouping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GroupingMode">
            <summary>
            Gets or sets the grouping mode.
            </summary>
            <value>The grouping mode.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GroupCaptionTextFormat">
            <summary>
            Gets or sets the group caption text format of the caption summary rows in SfDataGrid.
            </summary>
            <value>The group caption text format of the caption summary rows in SfDataGrid.</value>
            <seealso cref="!:https://www.syncfusion.com/kb/6908/how-to-customize-groupcaptiontextformat-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ScrollingMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.ScrollingMode"/> of the <seealso cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. By default, 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> scrolls based on the pixel values. The user can customize the scrolling mode of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> 
            by using the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ScrollingMode"/> property.
            </summary>
            <value>
            The <seealso cref="P:Syncfusion.SfDataGrid.SfDataGrid.ScrollingMode"/> of the SfDataGrid. The default value is <see cref="F:Syncfusion.SfDataGrid.ScrollingMode.Pixel"/>.
            </value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows to customize the scrolling mode of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> using the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ScrollingMode"/> 
            property. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides three types of scrolling mode : <see cref="F:Syncfusion.SfDataGrid.ScrollingMode.Line"/>, 
            <see cref="F:Syncfusion.SfDataGrid.ScrollingMode.PixelLine"/> and <see cref="F:Syncfusion.SfDataGrid.ScrollingMode.Pixel"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.ScrollingMode = ScrollingMode.PixelLine;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/scrolling#scrollingmode"/>
            <seealso cref="!:https://www.syncfusion.com/kb/6934/how-to-make-sfdatagrid-scroll-like-an-excel-sheet"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.NotificationSubscriptionMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Data.NotificationSubscriptionMode"/> of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. By default, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> 
            gets the notification for collection and property change of the underlying data. The user can customize the datagrid to get notifications from
            underlying data for either collection change or property change or both or none of them by using this property.
            </summary>
            <value>
            The <see cref="T:Syncfusion.Data.NotificationSubscriptionMode"/> of SfDataGrid. The default value is 
            <see cref="F:Syncfusion.Data.NotificationSubscriptionMode.CollectionChange"/> and 
            <see cref="F:Syncfusion.Data.NotificationSubscriptionMode.PropertyChange"/>.
            </value>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.NotificationSubscriptionMode = NotificationSubscriptionMode.PropertyChange;
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowDraggingColumn">
            <summary>
            Gets or sets a value indicating whether to enable/disable the column dragging functionality in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to drag and drop a column header by enabling this property.
            </summary>        
            <value><b>True</b> if column dragging is enabled, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to drag and drop a column header by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowDraggingColumn"/> property 
            to true. Drag view is displayed while dragging a column header. The drag and drop operation can be handled based on the requirement using 
            <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryColumnDragging"/> event.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowDraggingColumn = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columndraganddrop"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridColumnDragDropController">
            <summary>
            Gets or sets the grid column drag and drop controller.
            </summary>
            <value>The grid column drag and drop controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowDragDropTemplate">
            <summary>
            Gets or sets the view to be displayed when row drag and drop action is performed. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows 
            the user to load a desired content when performing row drag and drop operation using this property. To enable row drag and drop, it is 
            mandatory to set <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowDraggingRow"/> to true.
            </summary>
            <value>The view that is displayed when row drag and drop action is done.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to drag and drop a row by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowDraggingRow"/> property 
            to true. A customizable row drag and drop view is displayed while dragging a row. The default view will be displayed, if 
            row drag and drop view is empty. The drag and drop operation can be handled based on the requirement using 
            <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowDragging"/> event.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.RowDragDropTemplate = new RowTemplate();
            
            //RowTemplate.cs
            public class RowTemplate : LinearLayout
            {
            
            }
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/rowdraganddrop#row-drag-and-drop-template"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowDraggingRow">
            <summary>
            Gets or sets a value indicating whether to enable/disable the row dragging functionality in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> 
            also allows you to customize the row drag and drop popup using the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RowDragDropTemplate"/> property.
            </summary>
            <value><b>True</b> if row dragging is enabled, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to drag and drop a row by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowDraggingRow"/> property 
            to true. A customizable row drag and drop view is displayed while dragging a row. The drag and drop operation can be handled 
            based on the requirement using <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowDragging"/> event.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowDraggingRow = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/rowdraganddrop"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridRowDragDropController">
            <summary>
            Gets or sets the grid row drag and drop controller.
            </summary>
            <value>The grid column row and drop controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.VerticalOverScrollMode">
            <summary>
            Gets or sets a value indicating what effect to be applied when <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> is vertically over scrolled. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables either to provide a bounce effect or no effect when <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> is vertically over-scrolled.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.VerticalOverScrollMode"/> of SfDataGrid. By default, <see cref="F:Syncfusion.SfDataGrid.VerticalOverScrollMode.Bounce"/> 
            effect is applied.
            </value>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.VerticalOverScrollMode = VerticalOverScrollMode.None;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/scrolling#vertical-over-scroll-mode"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LeftSwipeView">
            <summary>
            Gets or sets the left swipe view to be displayed when swiping from 'left to right'. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables you 
            to load a desired content to be displayed when swiping towards right using this property. The swipe views will be displayed only when 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSwiping"/> is set as true.
            </summary>
            <value>The view that is displayed when left swipe action is performed.</value>
            <remarks>
            When swiping is enabled in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, the swipe view can be displayed when swiping from ‘left to right’ or ‘right to left’ 
            on a data row. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows the user to customize the swipe views to be displayed by using 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.LeftSwipeView"/> and <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RightSwipeView"/>. The swipe gesture can be restricted upto a 
            certain point by using <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.MaxSwipeOffset"/> property. The contents inside the swipe view are arranged based on 
            the offset values when you swipe a data row.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            SwipeView leftSwipeView = new SwipeView(BaseContext);
            
            sfGrid.LeftSwipeView = leftSwipeView;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/swiping#swipeviews"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RightSwipeView">
            <summary>
            Gets or sets the left swipe view to be displayed when swiping from 'right to left'. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enables you 
            to load a desired content to be displayed when swiping towards left using this property. The swipe views will be displayed only when 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowSwiping"/> is set as true.
            </summary>
            <value>The view that is displayed when right swipe action is performed.</value>
            <remarks>
            When swiping is enabled in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, the swipe view can be displayed when swiping from ‘left to right’ or ‘right to left’ 
            on a data row. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows the user to customize the swipe views to be displayed by using 
            <see cref="!:SfDataGrid.LeftSwipeTemplate"/> and <see cref="!:SfDataGrid.RightSwipeTemplate"/>. The swipe gesture can be restricted upto a 
            certain point by using <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.MaxSwipeOffset"/> property. The contents inside the swipe view are arranged based on 
            the offset values when you swipe a data row.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            SwipeView rightSwipeView = new SwipeView(BaseContext);
            
            sfGrid.RightSwipeView = rightSwipeView;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/swiping#swipeviews"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowResizingColumn">
            <summary>
            Gets or sets a value indicating whether to enable the column resizing or not. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows to resize the 
            columns by tapping and dragging the right border of the column headers, by enabling this property.
            </summary>
            <value><b>True</b> if column resizing is enabled, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            By enabling column resizing in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> by setting <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowResizingColumn"/> to true, the columns 
            can be resized from <see cref="P:Syncfusion.SfDataGrid.GridColumn.MinimumWidth"/> to <see cref="P:Syncfusion.SfDataGrid.GridColumn.MaximumWidth"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowResizingColumn = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#resizing-columns"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnResizingController">
            <summary>
            Gets or sets the column resizing controller.
            </summary>
            <value>The column resizing controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ResizingMode">
            <summary>
            Gets or sets a value indicating the <see cref="T:Syncfusion.SfDataGrid.ResizingMode"/> for the resizing operation in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control. 
            Columns in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> can be resized either on touch-up or on-move.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.ResizingMode"/> of SfDataGrid. The default 
            value is <see cref="F:Syncfusion.SfDataGrid.ResizingMode.OnMoved"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows two modes of resizing, which can be set using this property. 
            The available resizing modes are: <see cref="F:Syncfusion.SfDataGrid.ResizingMode.OnMoved"/> and <see cref="F:Syncfusion.SfDataGrid.ResizingMode.OnTouchUp"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.ResizingMode = ResizingMode.OnTouchUp;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#resizing-modes"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.AllowEditing">
            <summary>
            Gets or sets a value indicating whether to enable/disable editing in runtime. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides support for editing the cell values, when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowEditing"/> is set as true.
            </summary>
            <value><b>True</b> if editing is enabled, otherwise <b>false</b>. The 
            default value is false.</value>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowEditing = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.EditTapAction">
            <summary>
            Gets or sets the edit <see cref="T:Syncfusion.SfDataGrid.TapAction"/> to enter edit mode in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. 
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides support for editing the cell values, when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowEditing"/> is set as true.
            </summary>
            <value>The tap action selected for entering into editing mode. The default value is 
            <see cref="F:Syncfusion.SfDataGrid.TapAction.OnDoubleTap"/>.</value>
            <remarks>
            The user can customize the edit tap action by setting the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.EditTapAction"/> property.
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enters into edit mode either by just tapping or double tapping the grid cells.
            </remarks>
            <example>
            <code>
            <![CDATA[
            this.dataGrid.EditTapAction = TapAction.OnTap;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing#entering-into-edit-mode"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.EditorSelectionBehavior">
            <summary>
            Gets or sets the editor selection behavior, when a grid cell enters into edit mode. The editor selection behavior indicates
            the position of cursor and selection in edit element, when entering into edit mode.
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides support for editing the cell values, when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AllowEditing"/> is set as true.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfDataGrid.EditorSelectionBehavior"/>, when <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> enters into editing mode. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.EditorSelectionBehavior.MoveLast"/>.
            </value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> provides support for customizing the editor selection behavior when the cell enters into edit mode.
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> either selects the text of edit element loaded inside cell or places the cursor at the last of 
            edit element loaded inside cell. By default, <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> places the cursor at the last of the edit element.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.EditorSelectionBehavior = EditorSelectionBehavior.SelectAll;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing#cursor-behavior"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridColumnSizer">
            <summary>
            Gets or sets the <see cref= "T:Syncfusion.SfDataGrid.GridColumnSizer" /> of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, which handles the column 
            sizing for all the columns in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/> collection of <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfDataGrid.GridColumnSizer"/> of SfDataGrid.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.EnableDataVirtualization">
            <summary>
            Gets or sets a value that indicates whether to create RecordEntry for all the objects in <see cref="P:Syncfusion.Data.CollectionViewAdv.SourceCollection"/> while loading itself.
            By default RecordEntry created for all the objects of <see cref="P:Syncfusion.Data.CollectionViewAdv.SourceCollection"/>.
            </summary>
            <value><b>True</b> to create RecordEntry only when try to access this index.</value>                      
            <remarks>
            If the <see cref="P:Syncfusion.Data.CollectionViewAdv.SourceCollection"/> is null then <see cref="M:Syncfusion.Data.CollectionViewAdv.GetItemAt(System.Int32)"/> used to populates the <see cref="P:Syncfusion.Data.CollectionViewAdv.Records"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.EnableDataVirtualization = true;
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.Engine">
            <summary>
            Gets or sets the <see cref= "T:Syncfusion.SfDataGrid.GridEngine" /> of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>, which notifies the renderering of cells inside the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> 
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfDataGrid.GridEngine"/> of SfDataGrid.
            <remarks>The default value value is null  </remarks>
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LiveDataUpdateMode">
            <summary>
            Gets or sets a value to control data manipulation operations during data updates.
            </summary>
            <value>
            Indicates how data manipulation operations are handled during data updates. 
            The default value is <see cref="F:Syncfusion.Data.LiveDataUpdateMode.Default"/>.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.EditingController">
            <summary>
            Gets or sets the editing controller.
            </summary>
            <value>The editing controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.VisualContainer">
            <summary>
            Gets the VisualContainer of the SfDataGrid.
            </summary>
            <value>The visual container.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.HeaderLineCount">
            <summary>
            Gets or Sets the header line count of the SfDataGrid. The default value is 1.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowGenerator">
            <summary>
            Gets or Sets the RowGenerator.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.GridModel">
            <summary>
            Gets or Sets the GridModel of the SfDataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.InRowHeaderChange">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> in row header change.
            </summary>
            <value><c>true</c> if in row header change; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.LoadMoreViewHeight">
            <summary>
            Gets the load more view height
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.HasView">
            <summary>
            Return true if the View is not null, otherwise false.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnGridThemeChanged">
            <summary>
            Raises the grid theme changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnCaptionSummaryRowChanged(Syncfusion.SfDataGrid.GridSummaryRow)">
            <summary>
            Raises the caption summary row changed event.
            </summary>
            <param name="row">Row.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnTableSummaryRowsPropertyChanged(System.Collections.ObjectModel.ObservableCollection{Syncfusion.SfDataGrid.GridTableSummaryRow})">
            <summary>
            Raises the table summary rows changed event.
            </summary>
            <param name="oldSummaryRows">A collection of <see cref="T:Syncfusion.SfDataGrid.GridTableSummaryRow"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnAlternationCountChanged">
            <summary>
            Raises the alternation count changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnAlternatingRowColorchanged(Android.Graphics.Color)">
            <summary>
            Raises the alternating rowstylechanged event.
            </summary>
            <param name="newvalue">Newvalue.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnItemsSourceChanged(System.Object,System.Object)">
            <summary>
            Occurs when the SfDataGrid's <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnColumnsPropertyChanged(Syncfusion.SfDataGrid.Columns,Syncfusion.SfDataGrid.Columns)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.Columns"/>  property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnColumnSizerChanged(Syncfusion.SfDataGrid.ColumnSizer,Syncfusion.SfDataGrid.ColumnSizer)">
            <summary>
            Occcurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnSizer"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnHeaderRowHeightChanged(System.Double,System.Double)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.HeaderRowHeight"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnRowHeightChanged(System.Double,System.Double)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeight"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.onDefaultColumnWidthChanged(System.Double,System.Double)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.DefaultColumnWidth"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnRowHeaderWidthChanged(System.Double,System.Double)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.RowHeaderWidth"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnShowRowHeaderChanged(System.Boolean,System.Boolean)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnFooterRowsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FooterRowsCount"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnFooterColumnsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FooterColumnsCount"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnFrozenRowsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenRowsCount"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnFrozenColumnsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.FrozenColumnsCount"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSelectedItemChanged(System.Object,System.Object)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItem"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSelectionModeChanged(Syncfusion.SfDataGrid.SelectionMode,Syncfusion.SfDataGrid.SelectionMode)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectionMode"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSelectedIndexChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedIndex"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnCurrentItemChanged(System.Object,System.Object)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CurrentItem"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSelectedItemsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> property is changed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InvalidateRowHeight(System.Int32)">
            <summary>
            Invalidates the height of the specified row to raise in the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowHeight"/> event programmatically.
            </summary>
            <param name="rowIndex">Specifies the corresponding row index to invalidate its row height.</param>
            <remarks>Resets the particular row height. 
            Once row heights are reset, need to call the InvalidateMeasureInfo method of <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.VisualContainer"/> to refresh the view.</remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.InvalidateRowHeight(2);
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnLiveDataUpdateModePropertyChanged(Syncfusion.Data.LiveDataUpdateMode,Syncfusion.Data.LiveDataUpdateMode)">
            <summary>
            Occurs when the LiveDataUpdateMode property is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.#ctor(Android.Content.Context)">
            <summary>
            Initializes the new instance of SfDataGrid class.
            </summary>
            <param name="context">The context of SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the SfDataGrid class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the SfDataGrid class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value indicating the defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the SfDataGrid class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnMeasure(System.Int32,System.Int32)">
            <summary>
            Raises the measure event.
            </summary>
            <param name="widthMeasureSpec">Width measure spec.</param>
            <param name="heightMeasureSpec">Height measure spec.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnDetachedFromWindow">
            <summary>
            This is called when the view is detached from a window.
            </summary>
            <remarks>  This is called when the view is detached from a window. At this point it no longer has a surface for drawing.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Layout the children in the view. Derived classes with children should override this method and call layout on each of their children.
            </summary>
            <param name="changed">True if the size of the view is changed, otherwise false.</param>
            <param name="left">Left position, relative to parent</param>
            <param name="right">Right position, relative to parent</param>
            <param name="top">Top position, relative to parent</param>
            <param name="bottom">Bottom position, relative to parent</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GetUnboundCellValue(Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Gets the cell value to populate the unbound column by evaluating the expression or format with the record.
            </summary>
            <param name="column">
            Specifies the corresponding column to get the cell value.
            </param>
            <param name="record">
            Specifies the corresponding record to get the cell value.
            </param>
            <returns>
            Returns the cell value of the specified column based on expression or format with record.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Thrown when the GridUnboundColumn is defined with Expression for DataTable .
            </exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ExpandAllGroup">
            <summary>
            Expands all the groups in SfDataGrid.
            </summary>
            <remarks>This method expands all the groups in SfDataGrid programmatically.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#expand-or-collapse-all-the-groups"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CollapseAllGroup">
            <summary>
            Collapses all the groups in SfDataGrid.
            </summary>
            <remarks>This method collapses all the groups in SfDataGrid programmatically.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#expand-or-collapse-all-the-groups"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ExpandGroup(Syncfusion.Data.Group)">
            <summary>
            Expands the specified group.
            </summary>
            <param name="group">Specifies the group to expand it from view.</param>   
            <example><code lang="C#"><![CDATA[        
             var group = (dataGrid.View.Groups[0] as Group);
             this.dataGrid.ExpandGroup(group);
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#expand-or-collapse-the-specific-group"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CollapseGroup(Syncfusion.Data.Group)">
            <summary>
            Collapses the specified Group.
            </summary>
            <param name="group">Specifies the group to collapse it from view.</param>       
            <example><code lang="C#"><![CDATA[        
             var group = (dataGrid.View.Groups[0] as Group);
             this.dataGrid.CollapseGroup(group);
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#expand-or-collapse-the-specific-group"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InvalidateRowHeight(System.Int32,System.Boolean)">
            <summary>
            Invalidates the height of the specified row to raise in the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowHeight"/> event programmatically.
            </summary>
            <param name="rowIndex">Specifies the corresponding row index to invalidate its row height.</param>
            <param name="canInvalidate">Specifies whether to invalidate the row or not.</param>
            <remarks>Resets the particular row height. 
            Once row heights are reset, need to call the InvalidateMeasureInfo method of <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.VisualContainer"/> to refresh the view.</remarks>
            <example><code lang="C#"><![CDATA[
            dataGrid.InvalidateRowHeight(2, true);
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.SetItemsSource(System.Object)">
            <summary>
            Sets the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ItemsSource"/> property of the grid. This method is used to set the ItemsSource of the grid.
            </summary>
            <param name="source">The source collection that is passed by the user to be set as SfDataGrid's ItemsSource.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ResetSwipeOffset">
            <summary>
            Reset the swipe offset of SfDataGrid. This method will reset the swiping offset programmatically when we no need to maintain the swiping after navigating to another page.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ScrollToColumnIndex(System.Int32)">
            <summary>
            Scrolls the SfDataGrid to the column at the given index. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> scrolls to the given 
            column index, next to the RowHeader column if the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> is true.
            </summary>
            <param name="columnIndex">The destination column index to scroll.</param>
            <remarks>SfDataGrid supports programmatic scrolling. The user can scroll to the 
            required column by using this method.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/scrolling#scroll-to-column-index"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ScrollToRowIndex(System.Int32)">
            <summary>
            Scrolls the SfDataGrid to the row at the given index.
            </summary>
            <param name="rowIndex">The destination row index to scroll.</param>
            <remarks>SfDataGrid supports programmatic scrolling. The user can scroll to the 
            required row by using this method.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/scrolling#scroll-to-row-index"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ScrollToRowColumnIndex(System.Int32,System.Int32)">
            <summary>
            Scrolls the SfDataGrid to given row and column index. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> scrolls to the given 
            column index, next to the RowHeader column if the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.ShowRowHeader"/> is true.
            </summary>
            <param name="columnIndex">The destination column index to scroll.</param>
            <param name="rowIndex">The destination row index to scroll.</param>
            <remarks>SfDataGrid supports programmatic scrolling. The user can scroll to the 
            required row and column by using this method.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/scrolling#scroll-to-row-and-column-index"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ScrollToPosition(System.Double,System.Double)">
            <summary>
            Scrolls the grid to given x and y position.
            </summary>
            <param name="x">The X poisition.</param>
            <param name="y"> The Y position.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.BeginEdit(System.Int32,System.Int32)">
            <summary>
            Begins editing of the grid cell in the specified row and column index.
            </summary>
            <param name="rowIndex">The row index in which editing should be done.</param>
            <param name="columnIndex">The column index in which editing should be done.</param>
            <remarks>The user can edit the required cell programmatically by using this 
            method, specifying the row and column index of the cell to be edited.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing#begin-editing"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.EndEdit">
            <summary>
            Ends the editing of the grid cell which is currently being edited.
            </summary>
            <remarks>The user can end editing in the current cell programmatically by using this method. 
            Edited values will be committed to the GridCell.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing#end-editing"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CancelEdit">
            <summary>
            Cancels the editing of the grid cell which is currently being edited.
            </summary>
            <remarks>The user can cancel the editing in the current cell programmatically by using this method. 
            Edited values will not be committed to the GridCell.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing#cancel-editing"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanging">
            <summary>
            Occurs when the columns is being sorted in SfDataGrid.
            </summary>
            <remarks>The user can cancel the sorting based on the columns being sorted by using this event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SortColumnsChanging += DataGrid_SortColumnsChanging;
            
            void DataGrid_SortColumnsChanging (object sender, DataGridSortColumnsChangingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting#sorting-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanged">
            <summary>
            Occurs after the columns is sorted in SfDataGrid.
            </summary>
            <remarks>This event will raise only when the sorting is done. This event will not raise if 
            the sorting is canceled in the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SortColumnsChanging"/> event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SortColumnsChanged += DataGrid_SortColumnsChanged;
            
            void DataGrid_SortColumnsChanged (object sender, DataGridSortColumnsChangedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/sorting#sorting-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowHeight">
            <summary>
            Occurs when the row height of SfDataGrid is queried for each row data.
            </summary>
            <remarks>SfDataGrid supports auto row height feature, by using this event. 
            The user can query row the row height based on its content and set the queried height as its row height.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryRowHeight += DataGrid_QueryRowHeight;
            
            void DataGrid_QueryRowHeight (object sender, QueryRowHeightEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/row-height-customization#auto-fit-the-grid-rows-based-on-content"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.AutoGeneratingColumn">
            <summary>
             Occurs when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/>is set as true. Using this event, the user 
             can customize the columns being generated automatically.
             </summary>
             <example>
             <code lang="C#"><![CDATA[
             dataGrid.AutoGeneratingColumn += DataGrid_AutoGeneratingColumn;
             
             void DataGrid_AutoGeneratingColumn (object sender, AutoGeneratingColumnArgs e)
             {
             //You can achieve your requirement here.
             }
             ]]></code>
             </example>
             <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columns#customize-automatically-generated-columns"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.OnScrolled">
            <summary>
            Occurs when on scrolled.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanging">
            <summary>
            Occurs when the selection is changing in SfDataGrid.
            </summary>
            <remarks>The user can cancel the selection by using this event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SelectionChanging += DataGrid_SelectionChanging;
            
            void DataGrid_SelectionChanging (object sender, GridSelectionChangingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#selection-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanged">
            <summary>
            Occurs when selection is changed in SfDataGrid.
            </summary>
            <remarks>This event will raise only when the selection is done. This event will not raise if 
            the selection is canceled in the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanging"/> event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SelectionChanged += DataGrid_SelectionChanged;
            
            void DataGrid_SelectionChanged (object sender, GridSelectionChangedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/selection#selection-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridViewCreated">
            <summary>
            Occurs when the view for a SfDataGrid is created.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridViewCreated += DataGrid_GridViewCreated;
            
            void DataGrid_GridViewCreated (object sender, GridViewCreatedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grid-events#gridviewcreated-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridTapped">
            <summary>
            Occurs when the grid is tapped.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridTapped += DataGrid_GridTapped;
            
            void DataGrid_GridTapped (object sender, GridTappedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grid-events#gridtapped-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridLongPressed">
            <summary>
            Occurs when the SfDataGrid is long pressed.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridLongPressed += DataGrid_GridLongPressed;
            
            void DataGrid_GridLongPressed (object sender, GridLongPressedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grid-events#gridlongpressed-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridDoubleTapped">
            <summary>
            Occurs when the grid is double tapped.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridDoubleTapped += DataGrid_GridDoubleTapped;
            
            void DataGrid_GridDoubleTapped (object sender, GridDoubleTappedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grid-events#griddoubletapped-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SwipeStarted">
            <summary>
            Occurs when swiping is started in SfDataGrid.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SwipeStarted += DataGrid_SwipeStarted;
            
            void DataGrid_SwipeStarted (object sender, SwipeStartedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/swiping#swipe-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.Swiping">
            <summary>
            Occurs when swiping is in progress in SfDataGrid.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Swiping += DataGrid_Swiping;
            
            void DataGrid_Swiping (object sender, SwipingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/swiping#swipe-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.SwipeEnded">
            <summary>
            Occurs when swiping is ended in SfDataGrid.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SwipeEnded += DataGrid_SwipeEnded;
            
            void DataGrid_SwipeEnded (object sender, SwipeEndedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/swiping#swipe-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GridLoaded">
            <summary>
            Occurs when the SfDataGrid is loaded.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridLoaded += DataGrid_GridLoaded;
            
            void DataGrid_GridLoaded (object sender, GridLoadedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grid-events#gridloaded-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding">
            <summary>
            Occurs when a group is being expanded in SfDataGrid.
            </summary>
            <remarks>
            You can cancel or customize the group being expanded through <see cref="T:Syncfusion.SfDataGrid.GroupChangingEventArgs"/> arguments.
            This event will not be raised when the group is expanded programmatically. 
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupExpanding += DataGrid_GroupExpanding;
            
            void DataGrid_GroupExpanding (object sender, GroupChangingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#groupexpanding-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.QueryUnboundColumnValue">
            <summary>        
            Occurs to query or commit the values for <see cref="T:Syncfusion.SfDataGrid.GridUnboundColumn"/> when its cells is initialized or the value is committed.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryUnboundColumnValue += DataGrid_QueryUnboundColumnValue;
            
            void DataGrid_QueryUnboundColumnValue (object sender, GridUnboundColumnEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/unbound-column#using-queryunboundcolumnvalue-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing">
            <summary>
            Occurs when a group is being collapsed in SfDataGrid.
            </summary>
            <remarks>
            You can cancel or customize the group being collapsed through <see cref="T:Syncfusion.SfDataGrid.GroupChangingEventArgs"/> arguments.
            This event will not raise when the group is collapsed programmatically. 
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupCollapsing += DataGrid_GroupCollapsing;
            
            void DataGrid_GroupCollapsing (object sender, GroupChangingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#groupcollapsing-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded">
            <summary>
            Occurs when a group is expanded in SfDataGrid.
            </summary>
            <remarks>
            This event occurs after the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/> event, if that event is not canceled. 
            This event will not raised when the group is expanded programmatically.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupExpanded += DataGrid_GroupExpanded;
            
            void DataGrid_GroupExpanded (object sender, GroupChangedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#groupexpanded-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed">
            <summary>
            Occurs when a group is collapsed in SfDataGrid.
            </summary>
            <remarks>
            This event occurs after the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/> event, if that event is not canceled.
            This event will not raise when the group is collapsed programmatically.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupCollapsed += DataGrid_GroupCollapsed;
            
            void DataGrid_GroupCollapsed (object sender, GroupChangedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/grouping#groupcollapsed-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.QueryColumnDragging">
            <summary>
            Occurs when a column is being reordered to a new position.
            </summary>
            <remarks>
            You can cancel or customize the column being dragged through <see cref="T:Syncfusion.SfDataGrid.QueryColumnDraggingEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryColumnDragging += DataGrid_QueryColumnDragging;
            
            void DataGrid_QueryColumnDragging (object sender, QueryColumnDraggingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/columndraganddrop#column-drag-and-drop-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowDragging">
            <summary>
            Occurs when a row is being reordered to a new position.
            </summary>
            <remarks>
            You can cancel or customize the row being dragged through <see cref="T:Syncfusion.SfDataGrid.QueryRowDraggingEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryRowDragging += DataGrid_QueryRowDragging;
            
            void DataGrid_QueryRowDragging (object sender, QueryRowDraggingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/rowdraganddrop#row-drag-and-drop-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.CurrentCellBeginEdit">
            <summary>
            Occurs when entering edit mode on a grid cell in SfDataGrid.
            </summary>
            <remarks>
            You can cancel the current cell being edited through the <see cref="T:Syncfusion.SfDataGrid.GridCurrentCellBeginEditEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.CurrentCellBeginEdit += DataGrid_CurrentCellBeginEdit;
            
            void DataGrid_CurrentCellBeginEdit (object sender, GridCurrentCellBeginEditEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing#cancel-editing-1"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.CurrentCellEndEdit">
            <summary>
            Occurs when the edit mode ends for the current cell.
            </summary>
            <remarks>
            You can cancel committing the edited value through the <see cref="T:Syncfusion.SfDataGrid.GridCurrentCellEndEditEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.CurrentCellEndEdit += DataGrid_CurrentCellEndEdit;
            
            void DataGrid_CurrentCellEndEdit (object sender, GridCurrentCellEndEditEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/editing#cancel-edited-value-from-getting-committed"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.SfDataGrid.ColumnResizing">
            <summary>
            Occurs when a column's width is being resized in SfDataGrid.
            </summary>
            <remarks>
            You can cancel or customize the column being resized through <see cref="T:Syncfusion.SfDataGrid.GridResizingEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.ColumnResizing += DataGrid_ColumnResizing;
            
            void DataGrid_ColumnResizing (object sender, GridResizingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseQueryUnboundValue(Syncfusion.SfDataGrid.UnboundActions,System.Object,Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Helper method to raise UnboundColumn initializing and updating
            </summary>
            <param name="getAction">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="setAction">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="column">Specifies the current column</param>
            <param name="record">Specifies the current row data</param>
            <returns>Returns the GridUnboundColumnEventArgs</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UnWireEvents">
            <summary>
            UnWires the events in the GridModel.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.WireEvents">
            <summary>
            Wires the events in the GridModel.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.gridLoaded">
            <summary>
            Occurs when SfDataGrid is loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CanQueryRowHeight">
            <summary>
            Determines whether this instance can query row height.
            </summary>
            <returns><c>true</c> if this instance can query row height; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.SetSourceList(System.Object)">
            <summary>
            View is created and the source is set to the view. The events in the GridModel is wired in this method.
            </summary>
            
            <param name="source">The items source of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CreateCollectionView(System.Object)">
            <summary>
            The SfDataGrid's view is created and the columns are generated if the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> property is set.
            </summary>
            
            <param name="source">The items source of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CreateCollectionViewAdv(System.Collections.IEnumerable,Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            The QueryableCollectionViewWrapper is created and the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SourceType"/> is set.
            </summary>
            
            <param name="source">The items source of the SfDataGrid as IEnumerable collection.</param>
            <param name="dataGrid">The SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CheckColumnNameinItemProperties(System.String)">
            <summary>
            Checks the column name in item properties.
            </summary>
            <returns><c>true</c>, if column name in item properties was checked, <c>false</c> otherwise.</returns>
            <param name="column">Column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GetSourceList(System.Object)">
            <summary>
            Returns the passed items source as IEnumerable collection.
            </summary>
            
            <returns>The source list.</returns>
            <param name="source">The ItemsSource of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GenerateGridColumns">
            <summary>
            Generates the GridColumns when the SfDataGrid's <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> propety is set.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateRowAndColumnCount(System.Boolean)">
            <summary>
            Updates the row and column count of the SfDataGrid.
            
            </summary>
            
            <param name="canGenerateVisibleColumns">A boolean value based on which the GridColumns will be generated
            while updating the column count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateFreezePaneRows">
            <summary>
            Sets the number of rows to be in Frozen state in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateFreezePaneColumns">
            <summary>
            Sets the number of columns to be in Frozen state in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateRowCountAndScrollBars">
            <summary>
            Updates the row count and scroll bars.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateColumnCount(System.Boolean)">
            <summary>
            Updates the columnCount of the in the SfDataGrid in runtime.
            
            <param name="canGenerateVisibleColumns">A boolean value based on which the GridColumns will be generated while 
            updating the column count.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateRowCount">
            <summary>
            Updates the RowCount of the SfDataGrid in runtime.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.DeferRefresh">
            <summary>
            The SfDataGrid's View is refreshed by calling this method.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitialGroup">
            <summary>
            Initials the group.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitialSort">
            <summary>
            Initials the sort.
            Called when SortColumndescriptions is set from the user side
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InsertRow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts the row.
            insert the line if the row index is in visible rows
            </summary>
            <param name="insertAt">Insert at.</param>
            <param name="count">Count.</param>
            <param name="recordStartIndex">Record start index.</param>
            <param name="recordCount">Record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RemoveRow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the row.
            removes the line if the rowindex is in visible rows
            </summary>
            <param name="removeAt">Remove at.</param>
            <param name="count">Count.</param>
            <param name="recordStartIndex">Record start index.</param>
            <param name="recordCount">Record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSortColumnsChanged(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changed.
            </summary>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSortColumnsChanged(Syncfusion.SfDataGrid.DataGridSortColumnsChangedEventArgs)">
            <summary>
            Raises the sort columns changed.
            Checks whether SortColumnChanged Event is handled or not
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSortColumnsChanging(System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changing.
            </summary>
            <returns><c>true</c>, if sort columns changing was raised, <c>false</c> otherwise.</returns>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">Action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSortColumnsChanging(Syncfusion.SfDataGrid.DataGridSortColumnsChangingEventArgs)">
            <summary>
            Raises the sort columns changing.
            Checks whether SortColumnChanging Event is handled or not
            </summary>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSelectionChagingEvent(Syncfusion.SfDataGrid.GridSelectionChangingEventArgs)">
            <summary>
            Method which is used to raise the SelectionChanging Event
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSelectionChangedEvent(Syncfusion.SfDataGrid.GridSelectionChangedEventArgs)">
            <summary>
            Method which is used to rasie the selection changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseQueryRowHeight(Syncfusion.SfDataGrid.QueryRowHeightEventArgs)">
            <summary>
            Raises the height of the query row.
            </summary>
            <returns><c>true</c>, if query row height was raised, <c>false</c> otherwise.</returns>
            <param name="e">E.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseAutoGeneratingEvent(Syncfusion.SfDataGrid.AutoGeneratingColumnEventArgs)">
            <summary>
            Raises the auto generating event.
            </summary>
            <returns>The auto generating event.</returns>
            <param name="args">Arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGridTapped(Syncfusion.SfDataGrid.GridTappedEventArgs)">
            <summary>
            Raises the GridTapped event.
            </summary>
            <param name="e">The GridTappedEventsArgs.The data for the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGridLongPressed(Syncfusion.SfDataGrid.GridLongPressedEventArgs)">
            <summary>
            Raises the grid long pressed event.
            </summary>
            <param name="e">The GridLongPressedArgs.The data for the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGridDoubleTappedEvent(Syncfusion.SfDataGrid.GridDoubleTappedEventArgs)">
            <summary>
            Raises the grid double tapped event.
            </summary>
            <param name="e">The GridDoubleTappedEventArgs.The data for the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateLoadMoreViewVisibility">
            <summary>
            Collapses load more view if it does not meet the LoadMore enabling condition.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateLoadMoreView(System.Double)">
            <summary>
            Updates the load more visibility based on the VerticalOffset value.
            </summary>
            <param name="value">The VerticalOffset.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGroupExpandingEvent(Syncfusion.SfDataGrid.GroupChangingEventArgs)">
            <summary>
            Helper method to raise the Group Expanding Event
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGroupExpandedEvent(Syncfusion.SfDataGrid.GroupChangedEventArgs)">
            <summary>
            Helper method to raise the Group Expanded Event
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGroupCollapsingEvent(Syncfusion.SfDataGrid.GroupChangingEventArgs)">
            <summary>
            Helper method to raise the Group Collapsing Event
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseGroupCollapsedEvent(Syncfusion.SfDataGrid.GroupChangedEventArgs)">
            <summary>
            Helper method to raise the Group Collapsed Event
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.ExpandGroupsAtLevel(System.Int32)">
            <summary>
            Expands the group based on its level.
            </summary>
            <param name="groupLevel">Specifies the group level to expand the group.</param>       
            <example><code lang="C#"><![CDATA[        
             this.dataGrid.ExpandGroupsAtLevel(2);
            ]]></code></example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CollapseGroupsAtLevel(System.Int32)">
            <summary>
            Collapses the group based on its level.
            </summary>
            <param name="groupLevel">Specifies the group level to collapse the group.</param>
            <example><code lang="C#"><![CDATA[        
             this.dataGrid.CollapseGroupsAtLevel(2);
            ]]></code></example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSwipeStartedEvent(Syncfusion.SfDataGrid.SwipeStartedEventArgs)">
            <summary>
            Raises the swipe started event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSwipingEvent(Syncfusion.SfDataGrid.SwipingEventArgs)">
            <summary>
            Raises the swiping event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RaiseSwipeEndedEvent(Syncfusion.SfDataGrid.SwipeEndedEventArgs)">
            <summary>
            Raise the swipe ended event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitializeTableSummaries">
            <summary>
            Method which helps to initialize the Table Summary rows.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RefreshContainerAndView">
            <summary>
            The VisualContainer and the SfDataGrid's view is refreshed for the first time after the items source is set. 
            The HeaderLineCount, row and column count is updated in this method.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.RefreshHeaderLineCount">
            <summary>
            The SfDataGrid's HeaderLineCount is set.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.UpdateRowStyle">
            <summary>
            Updates the row style.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.Initialize">
            <summary>
            Initializes the SfDataGrid with the required elements.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitializeCollections">
            <summary>
            Initializes the required collections in the dataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.initializeLoadMore">
            <summary>
            Initializes a new instance of LoadMoreRowControl with the required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.arrangeLoadMoreView(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Arranges the load more view in the DataGrid.
            </summary>
            <param name="x">The horizontal start position.</param>
            <param name="y">The vertical start position.</param>
            <param name="width">The width for the load more view.</param>
            <param name="height">The height for the load more view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GenerateGridColumns(Syncfusion.SfDataGrid.Columns,Syncfusion.Data.ICollectionViewAdv)">
            <summary>
            Generates the GridColumns in the SfDataGrid if the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> property is set.
            </summary>
            
            <param name="gridColumns">The Columns collection.</param>
            <param name="view">The SfDataGrid's view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CreateColumn(System.ComponentModel.PropertyDescriptor,System.Boolean@)">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.GridColumn"/> if the SfDataGrid's <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AutoGenerateColumns"/> property is set.
            </summary>
            
            <param name="propertyInfo"> The property information of the column to be created.</param>
            <param name="cancelArgs"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.GenerateGridColumnsForDynamic(Syncfusion.SfDataGrid.Columns,Syncfusion.Data.ICollectionViewAdv)">
            <summary>
            Generates the GridColumns for Dynamic ItemsSource in the SfDataGrid if the AutoGenerateColumns property is set as true.
            </summary>
            <param name="gridColumns">The Columns collection.</param>
            <param name="view">The SfDataGrid's view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitializeCellRendererCollection">
            <summary>
            Initializes the <see cref="T:Syncfusion.SfDataGrid.GridCellRendererCollection"/> and adds all the renderers to it.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnSortColumnDescriptionChanged(Syncfusion.SfDataGrid.SortColumnDescriptions,Syncfusion.SfDataGrid.SortColumnDescriptions)">
            <summary>
            Raises the sort column description changed event.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.OnGridColumnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the grid column collection changed event.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">E.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnDragView">
            <summary>
            Gets or sets the instance of the column drag view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowDragView">
            <summary>
            Gets or sets the instance of the Row Drag View
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnDragIndicatorView">
            <summary>
            Gets or sets the instance of the ColumnDragIndicator view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.RowDragIndicatorView">
            <summary>
             Gets or sets the instance of the RowDragIndicator view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnResizingIndicatorLine">
            <summary>
             Gets or sets the instance of the ColumnResizing indicator view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SfDataGrid.ColumnResizingIndicatorView">
            <summary>
             Gets or sets the instance of the ColumnResizing indicator view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.InitializeResizingIndicatorView">
            <summary>
            Initialize a new instance of resizing indicator view with required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CreateColumnResizingIndicatorView(System.Int32)">
            <summary>
            Creates a drag indicator view.
            </summary>
            <param name="dragDownImage">instance for dragdown image</param>
            <param name="dragUpImage">instance for dragup image</param>
            <returns>Returns the drag indicator view</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.CheckForUnboundColumns(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Checks whether the SfDataGrid's column collection contains any UnboundColumns
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGrid.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridViewCreatedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridViewCreated"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTappedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridTapped"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLongPressedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLongPressed"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDoubleTappedEventHandler">
            <summary>
            Represents the method that will handle the GridDoubleTapped event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLoadedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLoaded"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridHandledEventArgs">
            <summary>
            Serves as a base class for the event argument classes in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.GridEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHandledEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridHandledEventArgs class using the specified source.
            </summary>
            <param name="originalSource">The original source which raises the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridHandledEventArgs.#ctor(System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the GridHandledEventArgs class using the specified handled value and original source.
            </summary>
            <param name="handled">A boolean value specifying whether the event is handled.</param>
            <param name="originalSource">The original source which raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridHandledEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event is handled.
            </summary>
            <value><b>True</b> if the event has been handled, otherwise <b>false</b>. The default value is false.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridEventArgs">
            <summary>
            Serves as a base class for the event argument classes in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <seealso cref="T:System.EventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridEventArgs" /> class. 
            </summary>
            <param name="originalSender">The original source which raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridEventArgs.OriginalSender">
            <summary>
            Gets the original reporting source that raising this event.
            </summary>
            <value>The original reporting source that raising this event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCancelEventArgs">
            <summary>
            Serves as a base class for the event argument classes that can cancel the event handling in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <seealso cref="T:System.ComponentModel.CancelEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCancelEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridCancelEventArgs" /> class. 
            </summary>
            <param name="originalSender">The original source which raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridCancelEventArgs.OriginalSender">
            <summary>
            Gets the original reporting source that raising this event.
            </summary>
            <value>The original reporting source that raising this event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridViewCreatedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridViewCreated"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridViewCreatedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the GridViewCreatedEventArgs class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTappedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridTapped"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTappedEventArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridTappedEventArgs class using the specified row column index and the row data.
            </summary>
            <param name="rowColIndex">The row column index for the tapped position.</param>
            <param name="rowData">The underlying data of the tapped row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLongPressedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLongPressed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridLongPressedEventArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridLongPressedEventArgs class using the specified row column index and row data.
            </summary>
            <param name="rowColIndex">The row column index for the long pressed position.</param>
            <param name="rowData">The underlying data of the long pressed row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDoubleTappedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridDoubleTapped"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDoubleTappedEventArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridDoubleTappedEventArgs class using the specified row column index and row data.
            </summary>
            <param name="rowColIndex">The row column index for the double tapped.</param>
            <param name="rowData">The underlying data of the double tapped row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLoadedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLoaded"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridLoadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the GridLoadedEventArgs class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridTappedEventsArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridTapped"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridTappedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridTappedEventsArgs class using the specified row column index.
            </summary>
            <param name="rowColIndex">The row column index for the tapped position.</param>
            <param name="rowData">The dataContext of the tapped row.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridTappedEventsArgs.RowColumnIndex">
            <summary>
            Gets the row column index at the tapped position.
            </summary>
            <value>An object that represents the row and column index at the tapped position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridTappedEventsArgs.RowData">
            <summary>
            Gets the row data of the tapped row.
            </summary>
            <value>An object that represents row data of the tapped row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridLongPressedEventsArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridLongPressed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridLongPressedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridLongPressedEventsArgs class using the specified row column index.
            </summary>
            <param name="rowColIndex">The row column index for the long pressed position.</param>
            <param name="rowData">The row data of the long pressed row.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridLongPressedEventsArgs.RowColumnIndex">
            <summary>
            Gets the row column index at the long pressed position.
            </summary>
            <value>An object that represents the row and column index at the long pressed position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridLongPressedEventsArgs.RowData">
            <summary>
            Gets the row data of the long pressed row.
            </summary>
            <value>An object that represents row data of the long pressed row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GridDoubleTapped"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridDoubleTappedEventsArgs class using the specified row column index.
            </summary>
            <param name="rowColIndex">The row column index for the double tapped.</param>
            <param name="rowData">The row data of the double tapped row.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs.RowColumnIndex">
            <summary>
            Gets the row column index at the double tapped position.
            </summary>
            <value>An object that represents the row and column index at the double tapped position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridDoubleTappedEventsArgs.RowData">
            <summary>
            Gets the row data of the double tapped row.
            </summary>
            <value>An object that represents row data of the double tapped row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryRowHeightEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowHeight"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.RowHeightManager">
            <summary>
            Represents a class that manages the row heights in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.RowHeightManager"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.Contains(System.Int32,Syncfusion.SfDataGrid.RowRegion)">
            <summary>
            Method to check if the given row index is available in the given <see cref="T:Syncfusion.SfDataGrid.RowRegion"/>.
            </summary>
            <param name="index">The row index to be found in the given row region.</param>
            <param name="region">The row region in which the given row index is to be found.</param>
            <returns>A boolean value denoting whether the given index is available in the given row region.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.SetDirty(System.Int32)">
            <summary>
            Sets the row at the given row index as dirty to refresh it in view.
            </summary>
            <param name="rowIndex">The row index to be refreshed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.GetRange(System.Int32)">
            <summary>
            Gets the range of rows at the given index
            </summary>
            <param name="index">index value</param>
            <returns>Returns the range of rows at the given index</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.Reset">
            <summary>
            Resets the ranges of rows in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.ResetBody">
            <summary>
            Resets the body range in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.ResetFooter">
            <summary>
            Resets the footer range in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.UpdateBody(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the rows in the body region in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="index">The Start index to update.</param>
            <param name="count">The number of items to be updated.</param>
            <param name="action">The collection changed action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.UpdateRegion(System.Int32,System.Int32,Syncfusion.SfDataGrid.RowRegion)">
            <summary>
            Updates the region of the rows in the given index.
            </summary>
            <param name="start">The Start index to update.</param>
            <param name="end">The End index to update.</param>
            <param name="region">The region to be updated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.RowHeightManager.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Range">
            <summary>
            Represents a class that specifies the range of the rows belonging to a <see cref="T:Syncfusion.SfDataGrid.RowRegion"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Range.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.Range"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.Range.IsEmpty">
            <summary>
            Gets a value indicating whether the range is empty.
            </summary>
            <value>A boolean value denoting whether the range is empty.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.QueryRowHeightEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.QueryRowHeight"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.GridHandledEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.QueryRowHeightEventArgs.#ctor(System.Int32,System.Double,System.Object)">
            <summary>
            Initializes a new instance of the QueryRowHeightEventArgs class using the specified index, height and source.
            </summary>
            <param name="index">The index of the row for which the height is queried.</param>
            <param name="height">The queried height of the row.</param>
            <param name="originalSource">The source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowHeightEventArgs.RowIndex">
            <summary>
            Gets the row index for which the event is fired.
            </summary>
            <value>The index of the row for which the event is fired.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.QueryRowHeightEventArgs.Height">
            <summary>
            Gets or sets the height for the row for which the event is fired.
            </summary>
            <value>The height of the row for which the event is fired.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridRowSizingOptions">
            <summary>
            Represents a class that contains the options for row sizing in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowSizingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridRowSizingOptions"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowSizingOptions.ExcludeColumns">
            <summary>
            Gets or sets the list of columns that can be excluded.
            </summary>
            <value>The list of columns that can be excluded.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowSizingOptions.CanIncludeHiddenColumns">
            <summary>
            Gets or sets a value indicating whether the hidden columns can be included.
            </summary>
            <value>A boolean value denoting whether the hidden columns can be included.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ColumnPropertyChanged">
            <summary>
            Represents the method that will handle the property changes in grid columns.
            </summary>
            <param name="column">A grid column whose property is changed.</param>
            <param name="property">The name of the property that is changed.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.AutoGeneratingColumnEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.AutoGeneratingColumn"/> event of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.AutoGeneratingColumnEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.AutoGeneratingColumn"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.AutoGeneratingColumnEventArgs.#ctor(Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Initializes a new instance of the AutoGeneratingColumnEventArgs class with the specified values.
            </summary>
            <param name="column">The column that is being generated.</param>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.AutoGeneratingColumnArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.AutoGeneratingColumn"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.AutoGeneratingColumnArgs.#ctor(Syncfusion.SfDataGrid.GridColumn,System.Object)">
            <summary>
            Initializes a new instance of the AutoGeneratingColumnArgs class with the specified values.
            </summary>
            <param name="column">The column that is being generated.</param>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.AutoGeneratingColumnArgs.Column">
            <summary>
            Gets or sets column that is being generated.
            </summary>
            <value>The grid column being generated.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.DataGridStyle">
            <summary>
            Represents the style of a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <remarks>DataGridStyle allows you to set style for all the elements in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            To apply a custom style to change the visual appearance of all the elements in the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>,
            write a class overriding from DataGridStyle and assigning it to the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.GridStyle"/> property.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin-android/sfdatagrid/styles"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.#ctor">
            <summary>
            Initializes a new instance of the DataGridStyle class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.GridLinesVisibility">
            <summary>
            Gets or sets the constant based on which the border lines are drawn for SfDataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.HeaderForeground">
            <summary>
            Gets or sets the header's foreground color.
            </summary>
            <value>The header's foreground color.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.HeaderBackground">
            <summary>
            Gets or sets the header's background color.
            </summary>
            <value>The header's background color.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.CellBackground">
            <summary>
            Gets or sets the record's background color.
            </summary>
            <value>The record's background color.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.CellForeground">
            <summary>
            Gets or sets the record's foreground color.
            </summary>
            <value>The record's foreground color.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.BorderColor">
            <summary>
            Gets or sets the border color of SfDataGrid.
            </summary>
            <value>The border color of SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.AlternatingRowColor">
            <summary>
            Gets or sets the alternate row color of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>. The alternation count of the rows for which the alternate row color 
            can be customized by using <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AlternationCount"/> property.
            </summary>
            <value>The alternate row color of the SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows the user to set alternate row color by setting the <see cref="!:SfDataGrid.GridStyle.AlternatingRowColor"/> 
            property. <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> allows you to customize the rows for which the alternate row color needs to be updated based 
            on the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.AlternationCount"/> property.
            </remarks>        
            <example>
            <code lang="C#">
            <![CDATA[
            DataGrid.GridStyle.AlternatingRowColor = Color.Blue;
            DataGrid.AlternationCount = 3;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://www.syncfusion.com/kb/6212/how-to-apply-alternate-row-colors-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.DefaultRowColor">
            <summary>
            Gets or sets the default row color of SfDataGrid.
            </summary>
            <value>The default row color of SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.SelectionBackgroundColor">
            <summary>
            Gets or sets the background color of the selected row.
            </summary>
            <value>The background color of the selected row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.SelectionForegroundColor">
            <summary>
            Gets or sets the foreground color of the selected row.
            </summary>
            <value>The foreground color of the selected row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.CaptionRowBackgroundColor">
            <summary>
            Gets or sets the CaptionSummaryRow's background color.
            </summary>
            <value>The CaptionSummaryRow's background color.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.CaptionRowForegroundColor">
            <summary>
            Gets or sets the CaptionSummaryRow's foreground color.
            </summary>
            <value>The CaptionSummaryRow's foreground color.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.HeaderSortIndicatorUp">
            <summary>
            Gets or sets the Resource ID from the Android resources for the header sort up indicator icon.
            </summary>
            <value>The Resource ID from the Android resources for the header sort up indicator icon.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.HeaderSortIndicatorDown">
            <summary>
            Gets or sets the Resource ID from the Android resources for the header sort down indicator icon.
            </summary>
            <value>The Resource ID from the Android resources for the header sort down indicator icon.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.CurrentCellBorderColor">
            <summary>
            Gets or sets the editing border color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.LoadMoreViewBackgroundColor">
            <summary>
            Gets or sets the load more view background color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.LoadMoreViewForegroundColor">
            <summary>
            Gets or sets the load more view foreground color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.ColumnDragViewBorderColor">
            <summary>
            Gets or sets the column drag view border color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.ColumnDragViewBackgroundColor">
            <summary>
            Gets or sets the column drag view background color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.ColumnDragViewForegroundColor">
            <summary>
            Gets or sets the column drag view foreground color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.DragDownIndicator">
            <summary>
            Gets or sets the drag down indicator
            </summary>
            <returns>Returns the drag down indicator</returns>
        </member>
        <member name="P:Syncfusion.SfDataGrid.DataGridStyle.DragUpIndicator">
            <summary>
            Gets or sets the drag up indicator
            </summary>
            <returns>Returns the drag up indicator</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets or sets the RGB color for the current view
            </summary>
            <param name="red">red color</param>
            <param name="green">green color</param>
            <param name="blue">blue color</param>
            <returns>Returns the RGB color for the current view</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetDragUpIndicator">
            <summary>
            Gets the drag up indicator
            </summary>
            <returns>Returns the drag up indicator</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetDragDownIndicator">
            <summary>
            Gets the drag down indicator
            </summary>
            <returns>Returns the drag down indicator</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetAlternatingRowBackgroundColor">
            <summary>
            Gets the AlternatingRow's background color.
            </summary>
            <returns>The AlternatingRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderBackgroundColor">
            <summary>
            Gets the header's background color.
            </summary>
            <returns>The header's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderForegroundColor">
            <summary>
            Gets the header's foreground color.
            </summary>
            <returns>The header's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetRecordBackgroundColor">
            <summary>
            Gets the record's background color.
            </summary>
            <returns>The record's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetRecordForegroundColor">
            <summary>
            Gets the record's foreground color.
            </summary>
            <returns>The record's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetBorderColor">
            <summary>
            Gets the border color of SfDataGrid.
            </summary>
            <returns>The border color of SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderBorderColor">
            <summary>
            Gets the Headerborder color of SfDataGrid.
            </summary>
            <returns>The Headerborder color of SfDataGrid </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetCaptionSummaryRowBackgroundColor">
            <summary>
            Gets the CaptionSummaryRow's background color.
            </summary>
            <returns>The CaptionSummaryRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetCaptionSummaryRowForegroundColor">
            <summary>
            Gets the CaptionSummaryRow's foreground color.
            </summary>
            <returns>The CaptionSummaryRow's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetTableSummaryBackgroundColor">
            <summary>
            Gets the TableSummaryRow's background color.
            </summary>
            <returns>The TableSummaryRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetTableSummaryForegroundColor">
            <summary>
            Gets the TableSummaryRow's foreground color.
            </summary>
            <returns>The TableSummaryRow's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetLoadMoreViewBackgroundColor">
            <summary>
            Gets the load more view background color.
            </summary>
            <returns>The load more view background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetLoadMoreViewForegroundColor">
            <summary>
            Gets the load more view foreground color.
            </summary>
            <returns>The load more view foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderSortIndicatorDown">
            <summary>
            Gets the Resource ID from the Android resources for the header sort down indicator icon.
            </summary>
            <returns>The Resource ID from the Android resources for the header sort down indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetHeaderSortIndicatorUp">
            <summary>
            Gets the Resource ID from the Android resources for the header sort up indicator icon.
            </summary>
            <returns>The Resource ID from the Android resources for header sort indicator up icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetGroupExpanderIcon">
            <summary>
            Gets the Resource ID from the Android resources for group expander icon.
            </summary>
            <returns>The Resource ID from the Android resources for group expander icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetGroupCollapseIcon">
            <summary>
            Gets the Resource ID from the Android resources for the group collapse icon.
            </summary>
            <returns>The Resource ID from the Android resources for the group collapse icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragUpIndicator">
            <summary>
            Gets the Resource ID from the Android resources for the column drag up indicator icon.
            </summary>
            <returns>The Resource ID from the Android resources for the column drag up indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragDownIndicator">
            <summary>
            Gets the Resource ID from the Android resources for the column drag down indicator icon.
            </summary>
            <returns>The Resource ID from the Android resources for the column drag down indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetRowDragUpIndicator">
            <summary>
            Gets the Resource ID from the Android resources for the row drag up indicator icon.
            </summary>
            <returns>The Resource ID from the Android resources for the row drag up indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetRowDragDownIndicator">
            <summary>
            Gets the Resource ID from the Android resources for the row drag down indicator icon.
            </summary>
            <returns>The Resource ID from the Android resources for the row drag down indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnResizingIndicatorIcon">
            <summary>
            Gets the Resource ID from the Android resources for the column resizing indicator icon.
            </summary>
            <returns>The Resource ID from the Android resources for the column resizing indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetSelectionBackgroundColor">
            <summary>
            Gets the background color of the selected row.
            </summary>
            <returns>The background color of the selected row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetSelectionForegroundColor">
            <summary>
            Gets the foreground color of the selected row.
            </summary>
            <returns>The foreground color of the selected row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetGridLinesVisibility">
            <summary>
            Gets the type of the borders to be drawn in <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <returns>The <see cref="T:Syncfusion.SfDataGrid.GridLinesVisibility"/> for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragViewBorderColor">
            <summary>
            Gets the column drag view border color.
            </summary>
            <returns>The column drag view border color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragViewBackgroundColor">
            <summary>
            Gets the column drag view background color.
            </summary>
            <returns>The column drag view background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetColumnDragViewForegroundColor">
            <summary>
            Gets the column drag view foreground color.
            </summary>
            <returns>The column drag view foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetCurrentCellBorderColor">
            <summary>
            Gets the border color of the current cell which is focused.
            </summary>
            <returns>The border color of the current cell which is focused.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetResizingIndicatorColor">
            <summary>
            Gets the color of the column resizing cursor.
            </summary>
            <returns>The color of the column resizing cursor.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetCaptionSummaryFontAttribute">
            <summary>
            Gets the <see cref="!:FontattributeForCaptionSummary"/> property.
            </summary>
            <returns>Returns the <see cref="!:FontattributeForCaptionSummary"/> property.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetTableSummaryFontAttribute">
            <summary>
            Gets the <see cref="!:FontattributeForTableSummary"/> property.
            </summary>
            <returns>Returns the <see cref="!:FontattributeForTableSummary"/> property.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetGroupSummaryFontAttribute">
            <summary>
            Gets the <see cref="!:FontattributeForGroupSummary"/> property.
            </summary>
            <returns>Returns the <see cref="!:FontattributeForGroupSummary"/> property.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetBordercolor">
            <summary>
            Gets the border color of SfDataGrid.
            </summary>
            <returns>The border color of SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.GetCaptionSummaryRowForeGroundColor">
            <summary>
            Gets the CaptionSummaryRow's foreground color.
            </summary>
            <returns>The CaptionSummaryRow's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.DataGridStyle.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ResourceHelper">
            <summary>
            Initializes the ResourceHelper class to use specified resources
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ResourceHelper.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Syncfusion.SfDataGrid.ResourceHelper" /> class from being created.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ResourceHelper.LoadResource(System.String)">
            <summary>
            Loads the specified resource.
            </summary>
            <returns>The resource.</returns>
            <param name="name">The name.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridScrolledEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.OnScrolled"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridScrolledEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.OnScrolled"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridScrolledEventArgs.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the GridScrolledEventArgs class with the given vertical offset value.
            </summary>
            <param name="value">The vertical offset value.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridScrollingEvents">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.OnScrolled"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridScrollingEvents.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridScrollingEvents"/> class.
            </summary>
            <param name="value">The new vertical offset value.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridScrollingEvents.ChangedValue">
            <summary>
            Gets the changed vertical offset value.
            </summary>
            <value>The changed vertical offset value.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ImageHelper">
            <summary>
            Defines the image helper class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ImageHelper.ToUIImage(Syncfusion.SfDataGrid.ImageMapStream)">
            <summary>
            Gets the UIImage for the given image map stream.
            </summary>
            <param name="image">The image map stream for which the UIImage is to be obtained.</param>
            <returns>The UIImage for the given image map stream.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.Imagehelper">
            <summary>
            Defines the image helper class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.Imagehelper.ToUIImage(Syncfusion.SfDataGrid.ImageMapStream)">
            <summary>
            Gets the UIImage for the given image map stream.
            </summary>
            <param name="image">The image map stream for which the UIImage is to be obtained.</param>
            <returns>The UIImage for the given image map stream.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.ImageMapStream">
            <summary>
            Defines the BitMap class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ImageMapStream.#ctor">
            <summary>
            Initializes a new instance of the ImageMapStream class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.ImageMapStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the ImageMapStream class.
            </summary>
            <param name="data">The image data.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.ImageMapStream.ImageData">
            <summary>
            Gets or sets the image data.
            </summary>
            <value>The image data.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IncrementalList`1">
            <summary>
            The list that implements <see cref="T:Syncfusion.Data.ISupportIncrementalLoading"/> to load the data for SfDataGrid incrementally.
            </summary>
            <typeparam name="T">The type of data object.</typeparam>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.#ctor(System.Action{System.UInt32,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.IncrementalList`1"/> class.
            </summary>
            <param name="loadMoreItemsFunc">An action to be executed to load items to the bound collection.</param>
        </member>
        <member name="E:Syncfusion.SfDataGrid.IncrementalList`1.CollectionChanged">
            <summary>
            Represents the method that handles the collection changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IncrementalList`1.MaxItemsCount">
            <summary>
            Gets or sets the maximum items count that the bound collection can have. 
            </summary>
            <value>The maximum items count that the bound collection can have.</value>  
        </member>
        <member name="P:Syncfusion.SfDataGrid.IncrementalList`1.MaxItemCount">
            <summary>
            Gets or sets the maximum items count that the bound collection can have. 
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IncrementalList`1.HasMoreItems">
            <summary>
            Gets a value indicating whether it supports incremental loading implementations.
            </summary>
            <value>A sentinel value that supports incremental loading implementations.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IncrementalList`1.Count">
            <summary>
            Gets the items count of the bound collection.
            </summary>
            <value>The items count of the bound collection.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IncrementalList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the given source is read only.
            </summary>
            <value>A value indicating whether the given source is read only.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.IncrementalList`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements 
            in the bound collection that extends from the specified index to the last element.
            </summary>
            <param name="item">The object to locate in the bound collection. The value can be null for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the range of elements in the bound collection that 
            extends from index to the last element, if found; otherwise, –1.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element into the bound collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">: index is less than 0.-or-index is greater than <see cref="P:System.Collections.Generic.List`1.Count"/>"</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the bound collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">: index is less than 0.-or-index is equal to or greater than bound collection count.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.Add(`0)">
            <summary>
            Adds an object to the End of the bound collection.
            </summary>
            <param name="item">The object to be added to the End of the bound collection. The value can be null for reference types.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.Clear">
            <summary>
            Clears the items in the incremental list.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.Contains(`0)">
            <summary>
            Determines whether an element is in the bound collection.
            </summary>
            <param name="item">The object to locate in the bound collection. The value can be null for reference types.</param>
            <returns><b>True</b> if item is found in the bound collection, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Method that copies the entire bound collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from bound collection. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.Remove(`0)">
            <summary>
            Removes the specified item from the collection. 
            </summary>
            <param name="item">The item to be removed</param>
            <returns>A boolean value denoting whether the given item is removed or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.GetEnumerator">
            <summary>
            Gets the enumerator of the internal list.
            </summary>
            <returns>Returns the enumerator of the internal list.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumeratoe of the collection.
            </summary>
            <returns>Returns the enumeratoe of the collection.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.LoadMoreItemsAsync(System.UInt32)">
            <summary>
            Loads more items asynchronously to the data grid.
            </summary>
            <param name="count">The number of items to be added.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.RaiseCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise the collection changed event
            </summary>
            <param name="args">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.NotifyOfInsertedItems(System.Int32,System.Int32)">
            <summary>
            Notifies whether the new items are inserted in the collection
            </summary>
            <param name="baseIndex">index value</param>
            <param name="count">number of items</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.LoadItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the data objects incrementally. 
            </summary>
            <param name="items">Specifies the collection of data items to be added incrementally.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IncrementalList`1.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupChangingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/> and <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.GroupChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/> and <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.GroupChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupChangingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanding"/> and <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsing"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GroupChangingEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GroupChangingEventArgs class.
            </summary>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupChangingEventArgs.Group">
            <summary>
            Gets the corresponding group that is being expanded or collapsed in view.
            </summary>
            <value>
            The <see cref="T:Syncfusion.Data.Group"/> that is being changed in view.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GroupChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupExpanded"/> and <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.GroupCollapsed"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GroupChangedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GroupChangedEventArgs class.
            </summary>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GroupChangedEventArgs.Group">
            <summary>
            Gets the corresponding group that is expanded or collapsed in view.
            </summary>
            <value>
            The <see cref="T:Syncfusion.Data.Group"/> that is being changed in view.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridVirtualizingCollectionView">
            <summary>
            Represents the wrapper class that inherits the <see cref="T:Syncfusion.Data.VirtualizingCollectionView"/> to create a collection view.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.dataGrid">
            <summary>
            Gets or sets the reference of the SfDataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the GridVirtualizingCollectionView class.
            </summary>
            <param name="source">The underlying collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.#ctor">
            <summary>
            Initializes a new instance of the GridVirtualizingCollectionView class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.ConvertToType(System.Object,System.Type)">
            <summary>
            Converts the given object to the given type
            </summary>
            <param name="value">value to which convertion has be applied</param>
            <param name="type">type to be convered</param>
            <returns>Returns the converted type</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetGroupConverterFunc(System.String)">
            <summary>
            Gets the group converter func for the given property name.
            </summary>
            <param name="propertyName">The name of the property for which the group converter func is to be obtained.</param>
            <returns>The group converter func for the given property name.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Func for the given property, data operation and the reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for the property, data operation and reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Expression Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetBindingFunc">
            <summary>
            Gets the binding func
            </summary>
            <returns>Returns the binding func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetBindingExpressionFunc">
            <summary>
            Gets the binding expression func
            </summary>
            <returns>Returns the binding expression func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetDisplayValueFunc(System.String,Syncfusion.Data.DataOperation)">
            <summary>
            Returns a Func for getting the display value for the given property and data operation.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <returns>Func for getting the display value for the given property and data operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetDisplayValueExpressionFunc(System.String,Syncfusion.Data.DataOperation)">
            <summary>
            Returns a ExpressionFunc for getting the display value for the given property and data operation.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <returns>ExpressionFunc for getting the display value for the given property and data operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.CreateItemPropertiesProvider">
            <summary>
            Method to create the item properties provider for the Grid CollectionView wrapper. 
            </summary>
            <returns>Returns the item properties provider for the Grid CollectionView wrapper.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.CreateTopLevelGroup">
            <summary>
            Creates TopLevelGroup while grouping for view.
            </summary>
            <returns>Returns TopLevelGroup.</returns>
            <remarks>
            Creates <see cref="T:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup"/> when <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>  
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.GetUnboundFunc(Syncfusion.SfDataGrid.GridUnboundColumn)">
            <summary>
            Gets Unbound Func Value for sorting and grouping
            </summary>
            <param name="column">Specfies the current grid column</param>
            <returns>Returns the Unbound Func Value for sorting and grouping</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.SetDataGrid(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initialize an instance for <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> class.
            </summary>
            <param name="sfDataGrid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingCollectionView.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup">
            <summary>
            Represents the class that inherits <see cref="T:Syncfusion.Data.VirtualizingTopLevelGroup"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup.dataGrid">
            <summary>
            Gets or sets the reference of the SfDataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup.#ctor(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.Data.CollectionViewAdv)">
            <summary>
            Initializes a new instance of the GridVirtualizingTopLevelGroup class.
            </summary>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</param>
            <param name="collectionView">The <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.View"/> representing the underlying collection of the datagrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup.Invalidate(System.Int32,System.Int32)">
            <summary>
            Invalidates the rows that lies between the given index and the count.
            </summary>
            <param name="index">The starting index of th row to be invalidated.</param>
            <param name="count">The number of rows to be invalidated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridVirtualizingTopLevelGroup.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SfDataGridHelpers">
            <summary>
            Represents an extension class that provides resolving methods for a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetRowHeight(Syncfusion.SfDataGrid.SfDataGrid,System.Int32,Syncfusion.SfDataGrid.GridRowSizingOptions)">
            <summary>
            Gets the row height of the specified row index in the given SfDataGrid based on the given <see cref="T:Syncfusion.SfDataGrid.GridRowSizingOptions"/>. 
            The GridRowSizingOptions provides an option to exclude certain column when calculating the height and also provides option to decide whether to consider hidden columns when calculating the height.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the row height is to be obtained.</param>
            <param name="rowIndex">The index of the row, whose height is to be obtained.</param>
            <param name="options">The <see cref="T:Syncfusion.SfDataGrid.GridRowSizingOptions"/> is an optional parameter that provides an option to exclude certain column and to decide whether to consider hidden columns when calculating the height.</param>
            <returns>The row height of the specified row index in the given SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetRowHeight(Syncfusion.SfDataGrid.SfDataGrid,System.Object,System.Int32,Syncfusion.SfDataGrid.GridRowSizingOptions)">
            <summary>
            Calculates the height for the row based on the given model data object and <see cref="T:Syncfusion.SfDataGrid.GridRowSizingOptions"/>  for the specified row index.
            </summary>
            <param name="datagrid">The SfDataGrid.</param>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="options">The <see cref="T:Syncfusion.SfDataGrid.GridRowSizingOptions"/> is an optional parameter that provides an option to exclude certain column and to decide whether to consider hidden columns when calculating the height.</param>
            <returns>The row height of the specified row object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.IsCaptionSummaryRow(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Returns a boolean value specifying whether the row available in the given row index is a <see cref="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the given row is to be checked whether it is a CaptionSummaryRow.</param>
            <param name="rowIndex">The index of the row, which should be checked whether it is a caption summary row.</param>
            <returns>A boolean value specifying whether the row available in the given row index is a CaptionSummaryRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.IsTableSummaryRow(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Returns a boolean value specifying whether the row available in the given row index is a <see cref="T:Syncfusion.SfDataGrid.TableSummaryRowControl"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the given row is to be checked whether it is a TableSummaryRow.</param>
            <param name="rowIndex">The index of the row, which should be checked whether it is a table summary row.</param>
            <returns>A boolean value specifying whether the row available in the given row index is a CaptionSummaryRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetCellValue(Syncfusion.SfDataGrid.SfDataGrid,System.Object,System.String)">
            <summary>
            Gets the cell value of the given column from the given data object.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the cell value should be obtained.</param>
            <param name="recordData">The underlying data object from the binded data source.</param>
            <param name="columnName">The <see cref="P:Syncfusion.SfDataGrid.GridColumn.MappingName">MappingName</see> of the column whose cell value is to be obtained.</param>
            <returns>The cell value of the given column from the given data object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.CanPullToRefresh(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Returns a boolean value specifying whether the view can be refreshed when performing pull to refresh action.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the refreshing is to be checked when pull to refresh action is performed.</param>
            <returns>A boolean value specifying whether the view can be refreshed when performing pull to refresh action.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetCaptionSummaryValue(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.SfDataGrid.SpannedDataColumn)">
            <summary>
            Gets the value displayed in the <see cref="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl"/> based on the given <see cref="T:Syncfusion.SfDataGrid.SpannedDataColumn"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the caption summary value is to be obtained.</param>
            <param name="column">The SpannedDataColumn of the caption summary row.</param>
            <returns>The value displayed in the <see cref="T:Syncfusion.SfDataGrid.CaptionSummaryRowControl"/> based on the given <see cref="T:Syncfusion.SfDataGrid.SpannedDataColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetTableSummaryValue(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.SfDataGrid.SpannedDataColumn)">
            <summary>
            Get the value displayed in the <see cref="T:Syncfusion.SfDataGrid.TableSummaryRowControl"/> based on the given <see cref="T:Syncfusion.SfDataGrid.SpannedDataColumn"/>.
            </summary>
            <param name="datagrid">The SfDataGrid.</param>
            <param name="column">The SpannedDataColumn.</param>
            <returns>The value displayed in the TableSummaryRow based on the given SpannedDataColumn.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetGroupedColumn(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.Data.Group)">
            <summary>
            Gets the grouped column in the grid column information based on the given Group.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the grouped column should be obtained.</param>
            <param name="group">The group whose grouped column should be obtained.</param>
            <returns>The grouped grid column from the given group.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.UpdateDataRow(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Updates the data row with the given row index.in the view.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the row should be updated.</param>
            <param name="rowIndex">The index of the row whose data should be updated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetRowGenerator(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Gets the current instance of the <see cref="T:Syncfusion.SfDataGrid.RowGenerator"/> in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid whose row generator is to be obtained.</param>
            <returns>The row generator of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.ConvertDpToPixels(Syncfusion.SfDataGrid.SfDataGrid,System.Double)">
            <summary>
            Converts the given density pixels to pixels.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the density should be considered for calculation of pixel value.</param>
            <param name="densityPixels">The density independent pixel value for which the pixel 
            value should be obtained.</param>
            <returns>The pixels for the given density pixels value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.ConvertPixelsToDp(Syncfusion.SfDataGrid.SfDataGrid,System.Double)">
            <summary>
            Converts the pixels to density pixels.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the pixels should be converted to density pixels.</param>
            <param name="pixels">The pixel value for which the density independent pixel should be obtained.</param>
            <returns>The density pixels for the given pixels.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.QueryRowHeights(Syncfusion.SfDataGrid.SfDataGrid,System.Int32,System.Int32)">
            <summary>
            Queries the row heights for the rows between the given start and end index.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the row height should be queried.</param>
            <param name="startIndex">The start index of the row in which query row height should start.</param>
            <param name="endIndex">The end index of the row in which the query row height should end.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetVerticalCumulativeDistance(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the vertical cumulative distance of the SfDataGrid for the given row index.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the vertical cumulative distance of the given row index is to be determined.</param>
            <param name="rowIndex">The index of the row whose vertical cumulative distance is to be obtained.</param>
            <returns>The vertical cumulative distance of the SfDataGrid for the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetHorizontalCumulativeDistance(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the horizontal cumulative distance of the SfDataGrid for the given column index.
            </summary>
            <param name="dataGrid">The DataGrid in which the horizontal 
            cumulative distance of the given column index is to be determined.</param>
            <param name="columnIndex">The index of the column whose horizontal cumulative distance is to be obtained.</param>
            <returns>The horizontal cumulative distance of the SfDataGrid for the given column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.CanSwipe(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.SfDataGrid.SwipeDirection,System.Double)">
            <summary>
            Decides whether swiping can be done or not based on the given swipe direction and offset values.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the swiping should be checked.</param>
            <param name="swipeDirection">The direction in which swipe action is performed.</param>
            <param name="swipeOffset">The swipe offset value.</param>
            <returns>A boolean value deciding whether swipe can be done or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.PointToCellRowColumnIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Drawing.Point,System.Boolean)">
            <summary>
            Gets the row column index of the specified point in the given SfDataGrid.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the given <see cref="T:System.Drawing.Point"/> is to be obtained.</param>
            <param name="point">The <see cref="T:System.Drawing.Point"/> in the SfDataGrid whose <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> is to be obtained.</param>
            <param name="allowOutsideLines">Need to pass allowOutSideLines as true, to return row column index while reordering the columns.</param>
            <returns>The row column index corresponding to the given point.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.RowColumnIndexToPoint(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Gets the point for the specified row column index in the given SfDataGrid.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the <see cref="T:System.Drawing.Point"/> corresponding to the given <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> is to be obtained.</param>
            <param name="rowColumnIndex">The <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the SfDataGrid whose <see cref="T:System.Drawing.Point"/> is to be obtained.</param>
            <returns>The point corresponding to the given row column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.UpdateUnboundColumn(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.SfDataGrid.DataRowBase,System.String)">
            <summary>
            Checks whether any UnboundColumn in view has its expression/format dependent on the bound column in view and updates its cell value to reflect the changes made to the bound column.
            </summary>
            <param name="datagrid">The SfDataGrid.</param>
            <param name="dataRow">The current row undergoing property change.</param>
            <param name="propertyName">The current property undergoing property change.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetFrozenColumnsExtent(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Provides the overall extent of the columns frozen in view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.GetHiddenColumnCount(Syncfusion.SfDataGrid.SfDataGrid,System.Int32,System.Int32)">
            <summary>
            Provides the number of hidden columns within a specified start and end index
            </summary>
            <param name="datagrid">The SfDataGrid.</param>
            <param name="dataRow">Start index of the range.</param>
            <param name="propertyName">End index of the range.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.UpdateCaptionSummaryRow(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.SfDataGrid.DataRowBase,System.String)">
            <summary>
            Updates all the visible columns of the given caption row.
            </summary>
            <param name="dataGrid">SfDataGrid</param>
            <param name="dataRowBase">DataRowBase</param>
            <param name="columnName">string</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.UpdateCaptionSummaries(Syncfusion.SfDataGrid.SfDataGrid,System.String)">
            <summary>
            Updates the visible columns of all caption summary rows exist in view.
            </summary>
            <param name="dataGrid">SfDataGrid</param>
            <param name="columnName">string</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.UpdateTableSummaries(Syncfusion.SfDataGrid.SfDataGrid,System.String)">
            <summary>
            Updates the visible columns of all the table summary rows.
            </summary>
            <param name="dataGrid">SfDataGrid</param>
            <param name="columnName">string</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.UpdateColumnElements(Syncfusion.Data.SummaryRecordEntry,Syncfusion.SfDataGrid.DataRowBase,System.String)">
            <summary>
            Update all the visible columns of the given spanned data row.
            </summary>
            <param name="record">SummaryRecordEntry</param>
            <param name="summaryRow">DataRowBase</param>
            <param name="columnName">string</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.SetGridTableSummaryCellBorder(Android.Graphics.Canvas,Syncfusion.SfDataGrid.GridTableSummaryCell,Android.Graphics.Paint)">
            <summary>
            Sets border lines for the table summary cells.
            </summary>
            <param name="view">UIView</param>
            <param name="layer">CALayer</param>
            <param name="element">element</param>
            <param name="color">Color</param>
            <param name="style">GridLinesVisibility</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.DrawTopBorder(Android.Graphics.Canvas,Android.Views.View,Android.Graphics.Paint)">
            <summary> 		/// Draws top border for the given view 		/// </summary> 		/// <param name="path">Path of the line</param> 		/// <param name="bounds">Logical bounds of the view</param> 
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.DrawBottomBorder(Android.Graphics.Canvas,Android.Views.View,Android.Graphics.Paint)">
            <summary> 		/// Draws bottom border for the given view 		/// </summary> 		/// <param name="path">Path of the line</param> 		/// <param name="bounds">Logical bounds of the view</param> 
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.DrawRightBorder(Android.Graphics.Canvas,Android.Views.View,Android.Graphics.Paint)">
            <summary> 		/// Draws right border for the given view 		/// </summary> 		/// <param name="path">Path of the line</param> 		/// <param name="bounds">Logical bounds of the view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.DrawLeftBorder(Android.Graphics.Canvas,Android.Views.View,Android.Graphics.Paint)">
            <summary> 		/// Draws left border for the given view 		/// </summary> 		/// <param name="path">Path of the line</param> 		/// <param name="bounds">Logical bounds of the view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SfDataGridHelpers.ApplyFontStyle(System.String,Android.Graphics.TypefaceStyle,Android.Graphics.Paint)">
            <summary>
            Applies the specified font attribute for TableSummary Row.
            </summary>
            <param name="font">Record font</param>
            <param name="fontAttributes">User Defined Font attribute</param>
            <param name="paintText">instance for Paint text</param>
            <param name="multiLineTextPaint">instance for multiline text</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSelectionController">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.SfDataGrid.IGridSelectionController"/> that contains methods through IGridSelectionController
            for handling selection operations in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.#ctor(Syncfusion.SfDataGrid.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridSelectionController"/> class.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
        </member>
        <member name="E:Syncfusion.SfDataGrid.GridSelectionController.PropertyChanged">
            <summary>
            Handles the property changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionController.DataGrid">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionController.SelectedRows">
            <summary>
            Gets or sets the collection of selected rows.
            </summary>
            <value>The collection of selected rows.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionController.LastSelectedRowIndex">
            <summary>
            Gets or sets a value for maintains the Last selected index
            </summary>
            <value>The last index of the selected row.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessingPointerTouchUp(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Android.Views.MotionEvent)">
            <summary>
            Method to process the pointer touch up. Handles the touch up operation of each row in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <param name="rowColumnIndex">The row column index in which the touch up action is performed.</param>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.CollectionChangedReason)">
            <summary>
            Handles the collection changes such as selected items and source collection changed to process selection. 
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/></param>
            <param name="reason">The reason for the collection change.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSelectedItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Processes the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> collection changed to update the selection.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.HandleSelectionPropertyChanges(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Handles the selection when the selection related properties gets changed.
            </summary>
            <param name="handle">The <see cref="T:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSelectedIndexChanged(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Processes the selected index changed.
            Adds the first selected index to the selected index
            </summary>
            <param name="args">SelectionPropertyChangedHandler arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSelectionModeChanged(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Processes the selection mode changed.
            When selection mode changed from single/singleDeselect to multiple clears all the selection expect last selection
            </summary>
            <param name="args">SelectionPropertyChangedHandler arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSelectedItemChanged(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Adds the firstSelection to the selected item 
            </summary>
            <param name="args">SelectionPropertyChangedHandler arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessCurrentItemChanged(Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Adds the last selection to the current item 
            </summary>
            <param name="args">SelectionPropertyChangedHandler arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessSourceCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.CollectionChangedReason)">
            <summary>
            Processes the source collection changed.
            Based on the collection changed reason.
            </summary>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
            <param name="reason">CollectionChanged Reason</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.GetSelectionColor(System.Int32,System.Object)">
            <summary>
            Returns the selection color for selected row. This method can be overridden to apply multiple selection color.
            </summary>
            <param name="rowIndex">The index of the selected row.</param>
            <param name="rowData">The row data of the selected row.</param>
            <returns>The selection color for selected row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.SetSelectionAnimation(Syncfusion.SfDataGrid.VirtualizingCellsControl)">
            <summary>
             Sets animation for the selected row.
            </summary>
            <param name="rowElement">The view which holds the row data of the selected row </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.RefreshSelection">
            <summary>
            Refreshes the selections and sets values for the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedIndex"/>, <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItem"/>, 
            <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.CurrentItem"/> and <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ClearSelection">
            <summary>
            Clears the selection in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.HandlePointerOperation(Syncfusion.SfDataGrid.GridPointerEventArgs,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the pointer operation (touch-down or touch-up or double tap or moved) to handle selection.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.GridPointerEventArgs"/>.</param>
            <param name="rowColumnIndex">The row column index in which the pointer operation is performed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.HandleGridOperation(Syncfusion.SfDataGrid.GridOperationHandlerArgs)">
            <summary>
            Handles the grid operation to update selection.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.GridOperationHandlerArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.RaisePropertyChanged(System.String)">
            <summary>
            Occurs when <see cref="T:Syncfusion.SfDataGrid.SelectionMode"/> property is changed
            </summary>
            <param name="name">property value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessOnSortChanged(Syncfusion.SfDataGrid.SortColumnChangedHandleArgs)">
            <summary>
            Processes on sort changed.
            </summary>
            <param name="sortColumnHandleArgs">The arguments for handling the sorting in the columns.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ProcessOnGroupChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Processes on group changed.
            </summary>
            <param name="args">The collection changed arguments.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ResetSelection">
            <summary>
            Resets the selected index for the rows in <see cref="P:Syncfusion.SfDataGrid.GridSelectionController.SelectedRows"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.ScrollerToCurrentItem">
            <summary>
            Scrollers to current item while sorting if AllowAutoScroll is true 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.UpdateSelectionStyle(Syncfusion.SfDataGrid.DataRowBase)">
            <summary>
            Updates row and column style of selected row. 
            </summary>
            <param name="rowBase">DataRowBase instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.InvalidateSelectionOfRow(System.Object)">
            <summary>
            Invalidates the selected and previously selected row.
            </summary>
            <param name="rowData">Row data</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.RaiseSelectionChanging(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to raise the selection changing event.
            </summary>
            <returns>Returns the boolean value indicating whether to handle Selection Changing event</returns>
            <param name="addedItems">added items</param>
            <param name="removedItems">removed items</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.RaiseSelectionChanged(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to Raise the SelectionChanged event.
            </summary>
            <param name="addedItems">added items</param>
            <param name="removedItems">removed items</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridRowInfo">
            <summary>
            Represents a class that implements <see cref="T:System.IEquatable`1"/> to store the required informations of a selected row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowInfo.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridRowInfo"/> class.
            </summary>
            <param name="rowIndex">The zero-based index of the row.</param>
            <param name="rowData">The underlying data in the row.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowInfo.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the GridRowInfo class using the specified rowIndex.
            </summary>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowInfo.RowData">
            <summary>
            Gets the data in the particular row.
            </summary>
            <value>The data in the particular row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowInfo.IsDataRow">
            <summary>
            Gets a value indicating whether this object is data row cell.
            </summary>
            <value><b>True</b> if this object is data row, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowInfo.RowIndex">
            <summary>
            Gets a value indicating the row index of the particular row.
            </summary>
            <value>The row index of the particular row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridRowInfo.NodeEntry">
            <summary>
            Gets a NodeEntry information of the particular row.
            </summary>
            <value> Node Entry. </value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowInfo.GetHashCode">
            <summary>
            GetHashCode is intended to serve as a hash function for this object. Based on the contents of the object, 
            the hash function will return a suitable value with a relatively random distribution over the various inputs.
            <para/>
            The default implementation returns the [....] block index for this instance. Calling it on the same object multiple 
            times will return the same value, so it will technically meet the needs of a hash function, but it's less than ideal.
            Objects (especially value classes) should override this method.
            </summary>
            <returns>Return a suitable value with a relatively random distribution over the various inputs based on the contents of the object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridRowInfo.Equals(Syncfusion.SfDataGrid.GridRowInfo)">
            <summary>
            Returns a boolean indicating if the passed <see cref="T:Syncfusion.SfDataGrid.GridRowInfo"/> object is Equal to this.
            Equality is defined as object equality for reference types and bitwise equality for value types 
            using a loader trick to replace Equals with EqualsValue for value types.
            </summary>
            <param name="other">A <see cref="T:Syncfusion.SfDataGrid.GridRowInfo"/> object to compare with the current object.</param>
            <returns>Returns a boolean indicating if the passed object is Equal to this.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSelectedRowsCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.SfDataGrid.GridRowInfo"/> objects that represent the selected rows in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.#ctor">
            <summary>
            Initializes a new instance of the GridSelectedRowsCollection class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.Contains(Syncfusion.SfDataGrid.GridRowInfo)">
            <summary>
            Determines whether the given object is in <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> collection.
            </summary>
            <param name="rowInfo">A <see cref="T:Syncfusion.SfDataGrid.GridRowInfo"/> object to be queried in the selected items collection.</param>
            <returns>A boolean value denoting whether the given <see cref="T:Syncfusion.SfDataGrid.GridRowInfo"/> object is available.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.Contains(System.Int32)">
            <summary>
            Determines whether the object in the given row index is in <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> collection.
            </summary>
            <param name="rowIndex">The row index whose corresponding object is to be queried in the selected items collection.</param>
            <returns>A boolean value denoting whether a <see cref="T:Syncfusion.SfDataGrid.GridRowInfo"/> object with the given row index is available.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.Contains(System.Object)">
            <summary>
            Determines whether the given row object is in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> collection.
            </summary>
            <param name="rowData">An object to be queried in the selected items collection.</param>
            <returns>A boolean value denoting whether the given object is available.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.Contains(Syncfusion.Data.NodeEntry)">
            <summary>
            Determines whether the given object is in the <see cref="P:Syncfusion.SfDataGrid.SfDataGrid.SelectedItems"/> collection.
            </summary>
            <param name="nodeEntry">A <see cref="T:Syncfusion.Data.NodeEntry"/> object which is to be queried in the selected items collection.</param>
            <returns>A boolean value denoting whether the given <see cref="T:Syncfusion.Data.NodeEntry"/> object is available.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.Find(Syncfusion.Data.NodeEntry)">
            <summary>
            To be added
            </summary>
            <param name="nodeEntry">NodeEntry instance</param>
            <returns>Returns the row entry</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.Find(System.Int32)">
            <summary>
            Finds and returns the row info of the given row index
            </summary>
            <param name="rowIndex">NodeEntry instance</param>
            <returns>Returns the row entry</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.Find(System.Object)">
            <summary>
            To be added
            </summary>
            <param name="rowData">NodeEntry instance</param>
            <returns>Returns the row entry</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.Find(Syncfusion.SfDataGrid.GridRowInfo)">
            <summary>
            To be added
            </summary>
            <param name="rowInfo">NodeEntry instance</param>
            <returns>Returns the row entry</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectedRowsCollection.GetRowIndexes">
            <summary>
            Gets the row index
            </summary>
            <returns>Returns the row index</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.IGridSelectionController">
            <summary>
            Defines methods that must be implemented when handling selection in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridSelectionController.HandlePointerOperation(Syncfusion.SfDataGrid.GridPointerEventArgs,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the pointer operation (touch-down or touch-up or double tap or moved) to handle selection.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.GridPointerEventArgs"/>.</param>
            <param name="rowColumnIndex">The row column index in which the pointer operation is performed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.IGridSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.CollectionChangedReason)">
            <summary>
            Handles the collection changes such as selected items and source collection changed to process selection. 
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/></param>
            <param name="reason">The reason for the collection change.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridPointerEventArgs">
            <summary>
            Provides data for handling the pointer touch operations for selection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridPointerEventArgs.#ctor(Syncfusion.SfDataGrid.PointerOperation,Android.Views.MotionEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridPointerEventArgs"/> class.
            </summary>
            <param name="operation">Pointer Operation</param>
            <param name="eventArgs">Motion Event</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridPointerEventArgs.Operation">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.PointerOperation"/> related to the event.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.PointerOperation"/> related to the event.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridPointerEventArgs.OriginalEventArgs">
            <summary>
            Gets the pointer arguments related to the event.
            </summary>
            <value>An object that represents the pointer arguments related to the event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridOperationHandlerArgs">
            <summary>
            Provides data for handling the grid operations to update selection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridOperationHandlerArgs.#ctor(Syncfusion.SfDataGrid.GridOperation,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridOperationHandlerArgs"/> class.
            </summary>
            <param name="operation">Grid Operation</param>
            <param name="operationArgs">operation argments</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs">
            <summary>
            Provides data for handling selection when the selection related properties are changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs.#ctor">
            <summary>
            Initializes a new instance of the SelectionPropertyChangedHandlerArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs.NewValue">
            <summary>
            Gets or sets the new value of the selection property changed.
            </summary>
            <value>An object representing the new value of the selection property changed.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs.OldValue">
            <summary>
            Gets or sets the old value of the selection property changed.
            </summary>
            <value>An object representing the old value of the selection property changed.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SelectionPropertyChangedHandlerArgs.PropertyName">
            <summary>
            Gets or sets the name of the property related to the event.
            </summary>
            <value>The name of the property related to the event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridOPerationHandlerArgs">
            <summary>
            Provides data for handling the grid operations to update selection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridOPerationHandlerArgs.#ctor(Syncfusion.SfDataGrid.GridOperation,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.GridOPerationHandlerArgs"/> class.
            </summary>
            <param name="operation">Grid Operation</param>
            <param name="operationArgs">operation argments</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridOPerationHandlerArgs.Operation">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.GridOperation"/> related to the event.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.GridOperation"/> related to the event.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridOPerationHandlerArgs.OperationArgs">
            <summary>
            Gets the operation arguments related to the event.
            </summary>
            <value>An object that represents the operation arguments related to the event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SelectionHelper">
            <summary>
            Represents an extension class that provides resolving methods for a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SelectionHelper.ResolveToRowIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Object)">
            <summary>
            Gets the resolved row index of the given record.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
            <param name="recordItem">The underlying data of the row.</param>
            <returns>The resolved row index of the given record.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SelectionHelper.GetRecordAtRowIndex(Syncfusion.SfDataGrid.SfDataGrid,System.Int32)">
            <summary>
            Gets the record at the given row index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="index">The index of the row.</param>
            <returns>The record at the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SelectionHelper.GetDataColumnBase(Syncfusion.SfDataGrid.SfDataGrid,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Gets the data column at given row column index.
            </summary>
            <param name="dataGrid">The SfDataGrid</param>
            <param name="rowColumnIndex">The row column index</param>
            <returns>Returns the data column at the specified row column index.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSelectionChangingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanging"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs"/> that contains the event data.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.GridSelectionChangedEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSelectionChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanged"/> event in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs"/> that contains the event data.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.GridSelectionChangingEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanging"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs"/>
            <seealso cref="T:System.ComponentModel.CancelEventArgs"/>  
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridSelectionChangingEventArgs class.
            </summary>
            <param name="originalSource">The original source that raises the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanging"/> event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items to be selected.
            </summary>
            <value>A list of items to be selected.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items to be unselected.
            </summary>
            <value>A list of items to be unselected.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.SfDataGrid.SelectionChanged"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.GridSelectionChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridSelectionChangedEventArgs class using the specified source.
            </summary>
            <param name="originalSource">The original source that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were selected.
            </summary>
            <value>A list of items selected.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.GridSelectionChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unselected.
            </summary>
            <value>A list of items unselected.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CoveredCellInfo">
            <summary>
            A class that contains the information about the covered cells.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.CoveredCellInfo"/> class.
            </summary>
            <param name="left">The left column index of the covered cell.</param>
            <param name="right">The right column index of the covered cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.CoveredCellInfo"/> class.
            </summary>
            <param name="left">The left column index of the covered cell.</param>
            <param name="right">The right column index of the covered cell.</param>
            <param name="name">The name of the covered cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.CoveredCellInfo"/> class.
            </summary>
            <param name="index">The row index of the covered cell.</param>
            <param name="left">The left column index of the covered cell.</param>
            <param name="right">The right column index of the covered cell.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.RowIndex">
            <summary>
            Gets the row index for the covered cell.
            </summary>
            <value>A value that determines the row index of the covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.Left">
            <summary>
            Gets the left column index of the covered cell.
            </summary>
            <value>A value that determines the left column index of the covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.Right">
            <summary>
            Gets the right column index of the covered cell.
            </summary>
            <value>A value that determines the right column index of the covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.Name">
            <summary>
            Gets the name of the column for the corresponding covered cell.
            </summary>
            <value>The name of the column for the corresponding covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.Width">
            <summary>
            Gets the width of the covered cell.
            </summary>
            <value>A value that determines the width of the covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CoveredCellInfo.RowSpan">
            <summary>
            Gets the row span for the covered cell.
            </summary>
            <value>A value that determines the row span of the covered cell.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.CompareTo(System.Object)">
            <summary>
            Compares the given object to another object, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given object, 
            zero if this is equal to the given object, or a value greater than zero if this is greater than the given object.
            </summary>
            <param name="obj">An object to be compared with the current object.</param>
            <returns>An integer that indicates the relationship between the current object and the given object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.CompareTo(Syncfusion.SfDataGrid.CoveredCellInfo)">
            <summary>
            Compares the values in the given CoveredCellInfo object with the current instance, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given CoveredCellInfo, 
            zero if this is equal to the given CoveredCellInfo, or a value greater than zero if this is greater than the given CoveredCellInfo.
            </summary>
            <param name="coveredCellInfo">A CoveredCellInfo object which is to be compared with the current 
            instance.</param>
            <returns>An integer that indicates the relationship between the current instance and the given 
            CoveredCellInfo object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.Equals(System.Object)">
            <summary>
            Returns a boolean value indicating if the passed object is Equal to the current object. 
            Equality is defined as object equality for reference types and bitwise equality for value types 
            using a loader trick to replace Equals with EqualsValue for value types.
            </summary>
            <param name="obj">An object to be compared with the current object.</param>
            <returns>Returns a boolean value indicating whether the passed object is equal to the current object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.ToString">
            <summary>
            Returns a string which represents the object instance. The default for an object is to return the fully 
            qualified name of the class.
            </summary>
            <returns>The fully qualified name of the class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.GetHashCode">
            <summary>
            GetHashCode is intended to serve as a hash function for this object. Based on the contents of the object, 
            the hash function will return a suitable value with a relatively random distribution over the various inputs.
            <para/>
            The default implementation returns the [....] block index for this instance. Calling it on the same object multiple 
            times will return the same value, so it will technically meet the needs of a hash function, but it's less than ideal.
            Objects (especially value classes) should override this method.
            </summary>
            <returns>Return a suitable value with a relatively random distribution over the various inputs based on the contents of the object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CoveredCellInfo.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SpannedDataColumn">
            <summary>
            Represents a spanned column of data in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SpannedDataColumn"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataColumn.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            Initialize the column element for spanned data column.
            </summary>
            <param name="rowData">row data value</param>
            <param name="isInEdit">boolean value></param>
            <returns>Returns the current column element</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataColumn.RefreshCellValue">
            <summary>
            Refreshes the cell value of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataColumn.UpdateColumn(System.Object)">
            <summary>
            Updates the cell value and the binding context of the column element when scrolling vertically.
            Binding of the column element also updated in the renderer when scrolling horizontally.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataColumn.UpdateCellValue">
            <summary>
            Update the cell value.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.SpannedDataRow">
            <summary>
            Represents a spanned row of data in a <see cref="T:Syncfusion.SfDataGrid.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.SpannedDataRow"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.SpannedDataRow.CoveredCells">
            <summary>
            Gets the current covered cells for spanned data row
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.RefreshCellDraw">
            <summary>
            Refreshes the drawing in the cell to update its borders.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.OnCreateRowElement">
            <summary>
            Create the row element for spanned data row.
            </summary>
            <returns>Returns the caption row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.OnGenerateVisibleColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the visible columns.
            </summary>
            <param name="visibleColumnLines">size of visible column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.OnRowIndexChanged">
            <summary>
            Occurs when row index value is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the column elements that has to be arranged in the view.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.UpdateRowStyles">
            <summary>
            Updates the row style applied to the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.ApplyRowStyle">
            <summary>
            Applies the appropriate background color for the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.UpdateRow">
            <summary>
            Updates the data in the row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.CreateIndentColumn(System.Int32)">
            <summary>
            Creates the indent column.
            </summary>
            <returns>The indent column.</returns>
            <param name="index">The index.</param>
            <remarks>Method is held Unimplemented for multiple grouping feature.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.GetColumnSize(System.Int32,System.Boolean)">
            <summary>
            Gets the size of the column.
            </summary>
            <param name="index">The index of the column.</param>
            <param name="lineNull">A boolean value indicating whether the line is null.</param>
            <returns>The size of the column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.UpdateRowInfo(System.Int32)">
            <summary>
            Updates the row information
            </summary>
            <param name="rowIndex">current row index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.ResolveToGridColumnIndex(System.Int32)">
            <summary>
            Method to resolve the given index to grid column index.
            </summary>
            <param name="index">The index.</param>
            <returns>The resolved index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.CreateColumn(Syncfusion.SfDataGrid.CoveredCellInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the spanned data column
            </summary>
            <param name="cc">covered cell information</param>
            <param name="index">column index</param>
            <param name="heightIncrementation">increase in height</param>
            <param name="widthIncrementation">increase in width</param>
            <returns>Returns the spanned data column</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.CheckAvailablity(System.Int32,System.Boolean)">
            <summary>
            Checks the availability of spanned data row
            </summary>
            <param name="index">column index</param>
            <param name="forIndentColumn">boolean value</param>
            <returns>Returns the availability of spanned data row</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.UpdateColumn(Syncfusion.SfDataGrid.DataColumnBase,System.Int32)">
            <summary>
            Update the spanned data column
            </summary>
            <param name="dc">data column base</param>
            <param name="index">column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.IsExpandedChanged(System.Boolean)">
            <summary>
            Callback method to handle group expand or collapse state change.
            </summary>
            <param name="isExpanded">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.SpannedDataRow.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.GridCaptionSummaryCellRenderer">
            <summary>
            GridCaptionSummaryCellRenderer is a class for cell renderer that displays <see cref="T:Android.Widget.TextView"/> in a <see cref="T:Syncfusion.SfDataGrid.GridCaptionSummaryCell"/>.
            The class provides strong typed override methods for initializing content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCaptionSummaryCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.TextView"/> view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">A <see cref="T:Android.Widget.TextView"/> view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.DataColumnBase,Android.Widget.TextView)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.DataColumn"/> object with the given <see cref="T:Android.Widget.TextView"/> view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">A <see cref="T:Android.Widget.TextView"/> view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Android.Widget.TextView"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Android.Widget.TextView"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCellRenderer.UpdateColumnElement(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the column element of the passed dataColumn.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.GridCaptionSummaryCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.DataColumnBase)">
            <summary>
            Updates the cell value of the grouped column. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.CellElement">
            <summary>
            Serves as base class for different types of Cells.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the CellElement class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the CellElement class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.CellElement"/> class.
            </summary>
            <param name="context">The <see cref="T:Android.Content.Context"/>.</param>
            <param name="attributeSet">The <see cref="T:Android.Util.IAttributeSet"/>.</param>
            <param name="definedStyle">The value for defined style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.CellElement"/> class.
            </summary>
            <param name="javaReference">The <see cref="T:System.IntPtr"/>.</param>
            <param name="transfer">The <see cref="T:Android.Runtime.JniHandleOwnership"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CellElement.CanRendererUnload">
            <summary>
            Gets or sets a value indicating whether the View can be unloaded by Renderer.
            </summary>
            <value><b>True</b> if the renderer can unload this view, otherwise <b>false</b>. The default is true.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.CellElement.CanRenderUnLoad">
            <summary>
            Gets or sets a value indicating whether the View can be unloaded by Renderer.
            </summary>
            <value><b>True</b> if the renderer can unload this view, otherwise <b>false</b>. The default is true.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Positions and sizes the child views.
            </summary>
            <param name="changed">A boolean value indicating whether it is a new size or position for this view.</param>
            <param name="l">A value that represents the x coordinate of the child.</param>
            <param name="t">A value that represents the y coordinate of the child.</param>
            <param name="r">A value that represents the width of the child.</param>
            <param name="b">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.GetHorizontalAlignment(Android.Views.GravityFlags,Android.Views.GravityFlags)">
            <summary>
            Gets the Horizontal alignment of the cell element.
            </summary>
            <param name="originalAlignment">The original alignment.</param>
            <param name="alignment">The horizontal alignment to be set.</param>
            <returns>The horizontal alignment based on the original alignment.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.GetVerticalAlignment(Android.Views.GravityFlags,Android.Views.GravityFlags)">
            <summary>
            Gets the Vertical alignment of the cell element.
            </summary>
            <param name="originalAlignment">The original alignment.</param>
            <param name="alignment">The vertical alignment to be set.</param>
            <returns>The vertical alignment based on the original alignment.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.CalculateLeftAndRightPadding(Android.Views.GravityFlags,Android.Widget.TextView,System.String,System.Int32,Syncfusion.SfDataGrid.Thickness,System.Int32@,System.Int32@,Syncfusion.SfDataGrid.LineBreakMode)">
            <summary>
            Calculates the left and right padding for the cell element.
            </summary>
            <param name="alignment">The alignment of the grid column.</param>
            <param name="view">The view loaded inside the cell element.</param>
            <param name="text">The text of the cell element.</param>
            <param name="actualWidth">The actual width of the cell element.</param>
            <param name="columnPadding">The padding for the cell element.</param>
            <param name="leftPadding">The left padding value for the cell element.</param>
            <param name="rightPadding">The right padding value for the cell element.</param>
            <param name="lineBreakMode">The line break mode of the associated grid column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.CalculateTopAndBottomPadding(Android.Views.GravityFlags,Android.Widget.TextView,System.String,System.Int32,Syncfusion.SfDataGrid.Thickness,System.Int32@,System.Int32@,Android.Graphics.Paint,Syncfusion.SfDataGrid.LineBreakMode,System.Double)">
            <summary>
            Calculates the top and bottom padding for the cell element.
            </summary>
            <param name="alignment">The alignment of the grid column.</param>
            <param name="view">The view loaded inside the cell element.</param>
            <param name="text">The text of the cell element.</param>
            <param name="height">The height of the cell element.</param>
            <param name="columnPadding">The padding of the cell element.</param>
            <param name="topPadding">The top padding value for the cell element.</param>
            <param name="bottomPadding">The bottom padding value for the cell element.</param>
            <param name="paintText">The paint for the cell element.</param>
            <param name="lineBreakMode">The line break mode of the associated grid column.</param>
            <param name="actualWidth">the actual width</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.GetTopAndBottomPaddingForCenterAlignment(Android.Widget.TextView,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Gets the Top and Bottom padding values to layout the text in the center of the grid cell with equal spacing in the top and bottom.
            </summary>
            <param name="view">The text view loaded inside the grid cell.</param>
            <param name="actualWidth">The width remaining after the applied padding for the grid cell.</param>
            <param name="topPadding">The top padding value of the grid cell</param>
            <param name="bottomPadding">The bottom padding value of the grid cell</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.Load">
            <summary>
            Called when the view is created
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.UnLoad">
            <summary>
            Called when the view is disposed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.OnCellValueChanged">
            <summary>
            This method fires when the cell value is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.GetAutoWidth(System.Object)">
            <summary>
            Override method that enables the user to set a desired column width value for UserCellType columns
            </summary>
            <returns>Returns the double value indicating whether to set a desired column width value for UserCellType columns. </returns>
            <param name="rowData">Row data</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.CellElement.GetAutoHeight(System.Object)">
            <summary>
            Override method that enables the user to set a desired row height value for UserCellType columns
            </summary>
            <returns>Returns the double value indicating whether to set a desired row height value for UserCellType columns. </returns>
            <param name="rowData">Row data</param>
        </member>
    </members>
</doc>
