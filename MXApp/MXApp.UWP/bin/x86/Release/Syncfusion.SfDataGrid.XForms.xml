<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfDataGrid.XForms</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer">
            <summary>
            GridCellDateTimeRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            Upon editing it displays <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker"/> for editing values.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellDateTimeRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.OnCreateEditUIView">
            <summary>
            Creates a new view for the edit mode of cell.
            </summary>
            <returns>
            Returns the new view for edit mode of cell. 
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.OnInitializeEditView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.SetControlValue(System.Object)">
            <summary>
            Sets the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker)">
            <summary>
            Updates the style of edit view. 
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellDateTimeRenderer.InitializeEditBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker)">
            <summary>
            Initialize the edit binding
            </summary>
            <param name="dataColumn">current data column</param>
            <param name="view">current view</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Renderers.NamespaceDoc">
            <summary>
            Provides classes and interface for all cell renderer that manages the creation of cells 
            view objects when the cell is scrolled into view and also unloading of the views. 
            Contains logics to place the UIElement inside cells in display and edit mode. It also contains the custom 
            views that are created for rendering in the grid.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer">
            <summary>
            GridCellNumericRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            Upon editing it displays <see cref="T:Syncfusion.SfNumericTextBox.XForms.SfNumericTextBox"/> for editing values.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellNumericRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.OnInitializeEditView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfNumericTextBox.XForms.SfNumericTextBox)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.OnCreateEditUIView">
            <summary>
            Creates a new view for the edit mode of cell.
            </summary>
            <returns>
            Returns the new view for edit mode of cell. 
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfNumericTextBox.XForms.SfNumericTextBox)">
            <summary>
            Updates the cell style of the edit element in a grid cell.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view hosted inside a column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellNumericRenderer.SetFocus(Xamarin.Forms.View,System.Boolean)">
            <summary>
            Sets the focus for the editing view.
            </summary>
            <param name="view">The current cell renderer element.</param>
            <param name="needToFocus">Returns whether focus has to be set or not. </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer">
            <summary>
            GridCellPickerRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            Upon editing it displays <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker"/> for editing values.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellPickerRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.OnCreateEditUIView">
            <summary>
            Creates a new view for the edit mode of cell.
            </summary>
            <returns>
            Returns the new view for edit mode of cell. 
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.OnInitializeEditView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.Renderers.GridPicker)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.Renderers.GridPicker)">
            <summary>
            Updates the cell style of the edit element in a grid cell.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view hosted inside a column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.WireEditUIElement(Syncfusion.SfDataGrid.XForms.Renderers.GridPicker)">
            <summary>
            Wires the edit element to the view.
            </summary>
            <param name="editElement">The edit element </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.UnwireEditUIElement(Syncfusion.SfDataGrid.XForms.Renderers.GridPicker)">
            <summary>
            Unwires the edit element to the view.
            </summary>
            <param name="editElement">The edit element </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridCellPickerRenderer.InitializeEditBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.Renderers.GridPicker)">
            <summary>
            Initialize the edit view and it's properties.
            </summary>
            <param name="dataColumn">The data column</param>
            <param name="view">current view</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker">
            <summary>
            A customized <see cref="T:Xamarin.Forms.DatePicker"/> view that allows date picking. ​
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker.TextSizeProperty">
            <summary>
            Identifies the text size bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker.TextAlignmentProperty">
            <summary>
            Identifies the text alignment bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker.TextAlignment">
            <summary>
            Gets or sets the text alignment of the date picker.
            </summary>
            <value>The text alignment of the date picker. The default value is <see cref="F:Xamarin.Forms.TextAlignment.Center"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker.TextSize">
            <summary>
            Gets or sets the font size of the text in the date picker.
            </summary>
            <value>The font size of the text in the date picker. The default value is 14.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Renderers.SfEntry">
            <summary>
            A customized <see cref="T:Xamarin.Forms.View"/> that can edit a single line of text.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.SfEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfEntry"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker">
            <summary>
            A customized <see cref="T:Xamarin.Forms.Picker"/> view for picking an element in a list. 
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.TextSizeProperty">
            <summary>
            Identifies the text size bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.DisplayMemberPathProperty">
            <summary>
            Identifies the display member path bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.ValueMemberPathProperty">
            <summary>
            Identifies the value member path bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.TextAlignmentProperty">
            <summary>
            Identifies the text alignment bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.ItemsSourceProperty">
            <summary>
            Identifies the TextAlignment bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.SelectedItemProperty">
            <summary>
            Identifies the TextAlignment bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.ItemsSource">
            <summary>
            Gets or sets the items source of the picker.
            </summary>
            <value>The item source of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.SelectedItem">
            <summary>
            Gets or sets the selected item of the picker.
            </summary>
            <value>The selected item of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.TextAlignment">
            <summary>
            Gets or sets the text alignment of the picker.
            </summary>
            <value>The text alignment of the picker. 
            The default value is <see cref="F:Xamarin.Forms.TextAlignment.Center"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.TextSize">
            <summary>
            Gets or sets the text size of the picker.
            </summary>
            <value>The text size of the picker. The default value is 14.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.DisplayMemberPath">
            <summary>
            Gets or sets the display member path of the picker.
            </summary>
            <value>The display member path of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.ValueMemberPath">
            <summary>
            Gets or sets the value member path of the picker.
            </summary>
            <value>The value member path of the picker.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.IsComplexType">
            <summary>
            Gets or sets a value indicating whether the collection is a simple or complex collection
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.PropertyInfoCollection">
            <summary>
            Gets or sets the individual properties in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.SelectedDisplayValue">
            <summary>
            Gets or sets the selected item from the picker's display value 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.OnItemsSourceChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the ItemSource property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldvalue">The old value.</param>
            <param name="newvalue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.OnSelectedItemChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the SelectedItem property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldvalue">The old value.</param>
            <param name="newvalue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.RefreshItems">
            <summary>
            Refresh the items of the <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker.OnPropertyChanged(System.String)">
            <summary>
            Method that is called when a bound property is changed.
            </summary>
            <param name="propertyName">The name of the bound property that changed.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer">
            <summary>
            GridGroupSummaryCellRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCell"/>. 
            The class provides the strong typed override methods for initializing content of the cell and arranging the cell visuals. 
            <para/>
            Updates to appearance and content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer" /> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/>Object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/>Object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="dataColumnBase">The corresponding column for which the binding update should be determined.</param>
            <returns>
            <b>True</b>If the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates cell value of the spanned data column.
            </summary>
            <param name="dataColumn">The spanned data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer.UpdateColumnElement(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the column element of the passed spanned data column.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">The spanned data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer.OnUpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the cell style of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCell"/>. 
            </summary>
            <param name="dataColumn">The spanned data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/>View and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/>View.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridTableSummaryCellRenderer">
            <summary>
            GridTableSummaryCellRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridTableSummaryCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridTableSummaryCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates cell value of the spanned data column.
            </summary>
            <param name="dataColumn">The spanned data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryCellRenderer.UpdateColumnElement(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the column element of the passed spanned data column.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">The spanned data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryCellRenderer.OnUpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the cell style of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridTableSummaryCell"/>. 
            </summary>
            <param name="dataColumn">The spanned data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCurrentCellBeginEditEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentCellBeginEdit"/> event.
            </summary>
            <param name="sender">
            The source of the event.
            </param>
            <param name="e">
            A <see cref="T:Syncfusion.SfDataGrid.XForms.GridCurrentCellBeginEditEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCurrentCellEndEditEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentCellEndEdit"/> event.
            </summary>
            <param name="sender">
            The source of the event.
            </param>
            <param name="e">
            A <see cref="T:Syncfusion.SfDataGrid.XForms.GridCurrentCellEndEditEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCurrentCellBeginEditEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentCellBeginEdit"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCurrentCellBeginEditEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridCurrentCellBeginEditEventArgs class.
            </summary>
            <param name="originalSource">The source of the event. </param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCurrentCellBeginEditEventArgs.RowColumnIndex">
            <summary>
            Gets the <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the current cell being edited.
            </summary>
            <value>
            The corresponding <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the current cell being edited.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCurrentCellBeginEditEventArgs.Column">
            <summary>
            Gets the grid column of the current cell being edited.
            </summary>
            <value>
            The corresponding <see cref="!:SfDataGrid.GridColumn"/> that contains the cell to be edited.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCurrentCellEndEditEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentCellEndEdit"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCurrentCellEndEditEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridCurrentCellEndEditEventArgs class.
            </summary>
            <param name="originalSource">
            The original source that triggers the event.
            </param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCurrentCellEndEditEventArgs.RowColumnIndex">
            <summary>
            Gets the <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the current cell in which editing is ended.
            </summary>
            <value>
            The corresponding <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the current cell in which editing is ended.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCurrentCellEndEditEventArgs.NewValue">
            <summary>
            Gets the new cell value of the edited cell.
            </summary>
            <value>An object that represents new cell value of edited cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCurrentCellEndEditEventArgs.OldValue">
            <summary>
            Gets the old cell value of the edited cell.
            </summary>
            <value>An object that represents old cell value of edited cell.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridEditingController">
            <summary>
            Provides the  implementation for editing operations in SfDataGrid.
            </summary>
            <remarks>It provides the set of public properties and methods to handle the editing operation.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridEditingController"/> class.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridEditingController"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditingController.DataGrid">
            <summary>
            Gets or sets an instance for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditingController.CurrentDataColumn">
            <summary>
            Gets or sets the current data column
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditingController.HasCurrentCell">
            <summary>
            Gets a value indicating whether the current cell is in view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditingController.CurrentRowColumnIndex">
            <summary>
            Gets or sets the current row and column index
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.HandlePointerOperation(Syncfusion.SfDataGrid.XForms.GridPointerEventArgs,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the <see cref="T:Syncfusion.SfDataGrid.XForms.PointerOperation"/> and initiate editing if it is not in progress.
            Or ends the current editing
            </summary>
            <param name="args">GridPointerEvent srguments</param>
            <param name="rowColumnIndex">Specifies the current row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.ProcessOnTapped(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Process the tap action and begins editing if edit mode is set as OnTap
            </summary>
            <param name="currentRowColumnIndex">The tapped row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.ProcessOnDoubleTapped(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Process the double tap action and begins editing if edit mode is set as OnDoubleTap
            </summary>
            <param name="rowColumnIndex">The double tapped row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.ProcessCurrentCellSelection(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Removes the previous current cell and sets the new current cell.
            </summary>
            <param name="newRowColumnIndex">New row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.GetValueProperty(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Returns the current value property.
            </summary>
            <param name="column">The current column</param>
            <returns>current value property</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.SetOldCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Stores the current cell value in a backing field.
            </summary>
            <param name="dataColumn">Specifies the current <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumnBase"/>. </param>
            <param name="rowColumnIndex">The new row column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.RaiseBeginEditingEvent">
            <summary>
            Raise the RaiseBeginEditingEvent method in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <returns>Returns whether editing can be canceled or not </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.RaiseEndEditingEvent(System.Boolean)">
            <summary>
            Raise the RaiseEndEditingEvent method in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="cancelEdit">A Boolean which returns whether editing can be canceled or not </param>
            <returns>Returns whether value can be canceled or not </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.RemoveCurrentCell(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Removes the current cell.
            </summary>
            <param name="rowColumnIndex">The current row column  index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.SelectCurrentCell(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Sets the current cell.
            </summary>
            <param name="rowColumnIndex">The new row column index</param>
            <param name="setFocus">Returns whether focus has to be set for edit view or not</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.BeginEdit">
            <summary>
            Initiates the editing process.
            </summary>
            <returns>Returns whether editing has been begin or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.EndEdit(System.Boolean,System.Boolean)">
            <summary>
            Ends the editing.
            </summary>
            <param name="canCommit">Returns whether edited value can be commit or not</param>
            <param name="cancelEdit">A Boolean which returns whether editing can be canceled or not</param>
            <returns>Returns whether editing has ended or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.SetCurrentRowColumnIndex(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Sets the current row and column index.
            </summary>
            <param name="rowColumnIndex">current row and column index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.ResetCurrentRowColumnIndex">
            <summary>
            Resets the current row and column index.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.UpdatePreviousIndex">
            <summary>
            Updates the previous index
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.SetCurrentRowIndex(System.Int32)">
            <summary>
            Sets the current row index.
            </summary>
            <param name="rowIndex">current row index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.SetCurrentColumnIndex(System.Int32)">
            <summary>
            Sets the current column index.
            </summary>
            <param name="columnIndex">column index value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.CommitCellValue(System.Boolean)">
            <summary>
            Commits the cell value to the underlying collection.
            </summary>
            <param name="isNewValue">Returns whether value is new or not</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.UpdateEditingRowColumnIndex(System.String,System.Int32)">
            <summary>
            Update the CurrentRowColumnIndex if column is added/removed/reset.
            </summary>
            <param name="action">Denotes the action performed</param>
            <param name="columnIndex">Modified column's index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditingController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="canDispose"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.XamarinExtentions">
            <summary>
            Represents a class that contains the extension methods of Xamarin.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.AddChild(Xamarin.Forms.Layout{Xamarin.Forms.View},Xamarin.Forms.View)">
            <summary>
            Add the current child to the specified view.
            </summary>
            <param name="view">view instance</param>
            <param name="child">child needs to be add</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetChildAt(Xamarin.Forms.Layout{Xamarin.Forms.View},System.Int32)">
            <summary>
            Gets the child at specified index.
            </summary>
            <param name="view">view instance</param>
            <param name="index">index value</param>
            <returns>Returns the child at specified index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.RemoveChild(Xamarin.Forms.Layout{Xamarin.Forms.View},Xamarin.Forms.View)">
            <summary>
            Removes the current child from the specified view.
            </summary>
            <param name="view">view instance</param>
            <param name="child">child needs to be add</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.Hide(Syncfusion.SfDataGrid.XForms.IVisibility)">
            <summary>
            Sets the visibility of given view.
            </summary>
            <param name="view">current view instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.Show(Syncfusion.SfDataGrid.XForms.IVisibility)">
            <summary>
            Sets the visibility of given view to true.
            </summary>
            <param name="view">current view instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.IsVisible(Syncfusion.SfDataGrid.XForms.IVisibility)">
            <summary>
            Gets a boolean value indicating whether visibility is set.
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns a boolean value indicating whether visibility is set.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetWidth(Xamarin.Forms.View)">
            <summary>
            Gets the width of the current column in the view.
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns the width of the current column in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetHeight(Xamarin.Forms.View)">
            <summary>
            Gets the height of the current column in the view.
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns the height of the current column in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetX(Xamarin.Forms.View)">
            <summary>
            Gets the X point of the view.
            </summary>
            <param name="view">view instance</param>
            <returns>Returns the X point of the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetY(Xamarin.Forms.View)">
            <summary>
            Gets the Y point of the view.
            </summary>
            <param name="view">view instance</param>
            <returns>Returns the Y point of the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.Unfocus(Xamarin.Forms.View)">
            <summary>
             Remove focus from the view.
            </summary>
            <param name="view">View instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.IsFocused(Xamarin.Forms.View)">
            <summary>
            Gets a boolean value indicating whether the view is focused
            </summary>
            <param name="view">current view instance</param>
            <returns>Returns a boolean value indicating whether the view is focused</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetLeftPadding(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the left padding value of the SfDataGrid
            </summary>
            <param name="grid">SfDataGrid instance</param>
            <returns>Returns the left padding value of the SfDataGrid</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetRightPadding(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the right padding value of the SfDataGrid
            </summary>
             <param name="grid">SfDataGrid instance</param>
            <returns>Returns the right padding value of the SfDataGrid</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetTopPadding(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the top padding value of the SfDataGrid
            </summary>
            <param name="grid">SfDataGrid instance</param>
            <returns>Returns the top padding value of the SfDataGrid</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinExtentions.GetBottomPadding(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the bottom padding value of the SfDataGrid
            </summary>
            <param name="grid">SfDataGrid instance</param>
            <returns>Returns the bottom padding value of the SfDataGrid</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowDragging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowDragging"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the QueryRowDraggingEventArgs class.
            </summary>
            <param name="dataGrid">The source of the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs.From">
            <summary>
            Gets the index of the row that is being dragged.    
            </summary>
            <value>
            An index of the row being dragged.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs.To">
            <summary>
            Gets the index of the row that the drag view is currently placed over or dropped.
            </summary>
            <value>
            The index of the row that the drag view is currently placed over or dropped.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs.RowData">
            <summary>
            Gets the underlying data of the row being dragged.
            </summary>
            <value>The underlying data of the row being dragged.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs.CurrentRowData">
            <summary>
            Gets the underlying data of the current row over which the drag view is placed.
            </summary>
            <value>The underlying data of the current row over which the drag view is placed.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs.Position">
            <summary>
            Gets the current position of the drag and drop view in a SfDataGrid.
            </summary>
            <value>The current position of the drag and drop view in a SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs.Reason">
            <summary>
            Gets the current status (drag started or dragging or drag ended) when performing row drag-and-drop operation.
            </summary>
            <value>
            Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.QueryRowDraggingReason"/> that specifies the current status (drag started or dragging or drag ended) when performing row drag-and-drop operation.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridColumnResizingController">
            <summary>
            Provides the base implementation for column resizing operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of methods and properties to perform the resizing operation.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumnResizingController"/> class.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumnResizingController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.GetHitTest(System.Double,System.Int32)">
            <summary>
            Returns the VisibleLine on the touch point
            </summary>
            <param name="x">The x value of the touch point</param>
            <param name="columnIndex">The column index based on the touch point</param>
            <returns>The VisibleLine information based on the point</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.InitializeResizingIndicator">
            <summary>
            Adds the ColumnResizingIndicator as the child of the SfDataGrid and sets its visibility to true.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.OnResizingStarted(Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo)">
            <summary>
            Performs the necessary operations when resizing is started for the column
            </summary>
            <param name="resizingLine">The line information to be resized</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.OnResizing(System.Double)">
            <summary>
            Layouts the resizing cursor and alters the width of the resizing column
            </summary>
            <param name="draggedX">The change in x value from the initial touch point</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.OnResizingEnded">
            <summary>
            Performs the necessary operations when resizing is completed for the column
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.LayoutResizingIndicator(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layouts the ColumnResizingIndicator with respect to the bounds provided in parameter
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.UpdateResizingIndicatorVisibility(System.Boolean)">
            <summary>
            Hides or shows the ColumnResizingIndicator based on the value passed as parameter
            </summary>
            <param name="isVisible">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.SetResizingColumnWidth(System.Double)">
            <summary>
            Sets width to the column currently being resized with the width value passed as parameter
            </summary>
            <param name="width">width of the column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnResizingController.UpdateResizingColumnWidth(System.Double)">
            <summary>
            Updates width value to the column currently being resized with the value passed as parameter when the resizing mode is OnTouchUp
            </summary>
            <param name="width">width of the column</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase">
            <summary>
            Provides the base implementation for column resizing operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the resizing operation.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase"/> class.
            </summary>
            <param name="grid">The reference for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> class.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.DataGrid">
            <summary>
            Gets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.CurrentResizingColumn">
            <summary>
            Gets or sets the current column being resized.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.IsResizing">
            <summary>
            Gets or sets a value indicating whether the column is currently being resized or not
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.IsHitTestPassed">
            <summary>
            Gets or sets a value indicating whether hit test is passed or not
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.DataColumn">
            <summary>
            Gets or sets the current DataColumn for resizing
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.ResizingLine">
            <summary>
            Gets or sets the line information based on touch point
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.InitializeResizingIndicator">
            <summary>
            Adds the ResizingIndicator as the child of the SfDataGrid and sets its visibility to true.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.OnResizingStarted(Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo)">
            <summary>
            Performs the necessary operations when resizing is started for the column
            </summary>
            <param name="resizingLine">The line information to be resized</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.OnResizing(System.Double)">
            <summary>
            Layouts the resizing cursor and alters the width of the resizing column
            </summary>
            <param name="draggedX">The change in x value from the initial touch point</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.OnResizingEnded">
            <summary>
            Performs the necessary operations when resizing is completed for the column
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.LayoutResizingIndicator(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layouts the ResizingIndicator with respect to the bounds provided in parameter
            </summary>
            <param name="x">A value that represents the x coordinate of the resizing indicator.</param>
            <param name="y">A value that represents the y coordinate of the resizing indicator.</param>
            <param name="width">A value that represents the width of the resizing indicator.</param>
            <param name="height">A value that represents the height of the resizing indicator.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.UpdateResizingIndicatorVisibility(System.Boolean)">
            <summary>
            Hides or shows the ColumnResizingIndicator based on the value passed as parameter
            </summary>
            <param name="isVisible">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.Dispose">
            <summary>
            Disposes the objects that are holding memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingControllerBase.Dispose(System.Boolean)">
            <summary>
            Disposes the objects that are holding memory 
            </summary>
            <param name="isDisposing">boolean value denotes whether to dispose the objects</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridResizingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnResizing"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridResizingEventArgs"/> that contains the event data.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.GridResizingEventArgs"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridResizingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnResizing"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridResizingEventArgs.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridResizingEventArgs class with the given DataGrid.
            </summary>
            <param name="dataGrid">The source of the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingEventArgs.Index">
            <summary>
            Gets the index of the column that is being resized.    
            </summary>
            <value>
            An index of the column being resized.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingEventArgs.NewValue">
            <summary>
            Gets the width of the column that is being resized.    
            </summary>
            <value>
            The width of the column being resized.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridResizingEventArgs.ResizingState">
            <summary>
            Gets the current status (starting or progressing or completed) when performing resizing operation.
            </summary>
            <value>
            Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.ProgressStates"/> that specifies the current status (starting or progressing or completed) when performing resizing operation.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridDragDropController">
            <summary>
            Provides the base implementation for  drag-and-drop operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the drag-and-drop operation.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDragDropController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDragDropController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDragDropController.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDragDropController"/> class.
            </summary>
            <param name="grid">The reference for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> class.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.DataGrid">
            <summary>
            Gets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.DataColumn">
            <summary>
            Gets or sets the data column
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.IsDragCancelled">
            <summary>
            Gets or sets a value indicating whether drag is cancelled
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.StartIndex">
            <summary>
            Gets or sets the start index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.EndIndex">
            <summary>
            Gets or sets the end index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.DragViewMaxWidth">
             <summary>
            Gets or sets the maximum width of the drag view.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.DragViewMaxHeight">
            <summary>
            Gets or sets the maximum height of the drag view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.DragViewMinWidth">
             <summary>
            Gets or sets the minimum width of the drag view.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.DragViewMinHeight">
            <summary>
            Gets or sets the minimum height of the drag view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.CanAutoScroll">
            <summary>
            Gets or sets a value indicating whether to auto scroll the grid when dragging.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.IsDragging">
            <summary>
            Gets or sets a value indicating whether dragging is in progress or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.DragThreshold">
            <summary>
            Gets or sets the drag threshold value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDragDropController.IsAttainedDragThreshold">
            <summary>
            Gets or sets a value indicating whether drag threshold is reached.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDragDropController.UpdateErrorIconVisiblity(System.Boolean,Syncfusion.SfDataGrid.XForms.BorderView)">
            <summary>
            Updates the error icon visibility
            </summary>
            <param name="isVisible">boolean value</param>
            <param name="dragView">border view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDragDropController.OnDragStarted">
            <summary>
            This method is called when drag and drop operation is started
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDragDropController.OnDragging(System.Double,System.Double)">
            <summary>
            This method is called when drag and drop operation is on going
            </summary>
            <param name="draggedX">X position</param>
            <param name="draggedY">Y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDragDropController.OnDragEnded">
            <summary>
            This method is called when colum drag and drop operation is ended
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDragDropController.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDragDropController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridRowDragDropController">
            <summary>
            Provides the base implementation for row drag-and-drop operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the drag-and-drop operation.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowDragDropController"/> class.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowDragDropController"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.IsGroupDragging">
            <summary>
            Gets a value indicating whether the dragging row is a caption summary row or not
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.RowCount">
            <summary>
            Gets the row count
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.OnDragStarted">
            <summary>
            This method is called when colum drag and drop operation is started
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.OnDragging(System.Double,System.Double)">
            <summary>
            This method is called when colum drag and drop operation is on going
            </summary>
            <param name="draggedX">X position</param>
            <param name="draggedY">Y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.OnDragEnded">
            <summary>
            This method is called when colum drag and drop operation is ended
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.InitializeDragViews">
            <summary>
            Initialize the drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.RemoveDragViews">
            <summary>
            Removes the drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.EndDragging">
            <summary>
            Call this method to end drag and drop
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.AddRecordsOrGroups(Syncfusion.Data.Group,Syncfusion.Data.Group)">
            <summary>
            Add records or groups to dropped group.
            </summary>
            <param name="droppedParentGroup">The records or groups to be added.</param>
            <param name="draggedGroup">The group that dragged.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.SetDirty(Syncfusion.Data.Group)">
            <summary>
            Sets dirty to recalculate yAmount cache for all the groups that has removed.
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.RemoveParentGroups(Syncfusion.Data.Group)">
            <summary>
            Removes parent group from top level group if doesn't have group or records.
            </summary>
            <param name="group">The group.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.IsDraggingReachedBottom">
            <summary>
            Gets a value indicating whether the dragging bottom is reached or not
            </summary>
            <returns>Returns a boolean value indicating whether the dragging bottom is reached or not</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.CanShowIndicatorView">
            <summary>
            Gets a value indicating whether to show indicator view or not.
            </summary>
            <returns>Returns  a value indicating whether to show indicator view or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.IsNextGroup">
            <summary>
            Checks whether current group is next group of dragged group.
            </summary>
            <returns>Returns a boolean value indicating whether current group is next group of dragged group.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.IsPreviousGroup">
            <summary>
            Checks whether current group is previous group of dragged group.
            </summary>
            <returns>Returns a boolean value indicating whether current group is previous group of dragged group.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.UpdateDragViewText(System.Double)">
            <summary>
            Updates the text of drag view while dragging a row
            </summary>
            <param name="indicationY">y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.GetRowDragViewX">
            <summary>
            Gets the X point of the RowDragView.
            </summary>
            <returns>Returns the X point of the RowDragView.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.GetDragViewVerticalLimit(System.Double)">
            <summary>
            Gets the maximum Y extent the RowDragView can be layout to.
            </summary>
            <param name="draggedY">The maximum y position.</param>
            <returns>Returns the maximum Y extent the RowDragView can be layout to.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.CalculateWidthAndHeight">
            <summary>
            Calculates the height and width of row drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.AutoScroll(System.Boolean)">
            <summary>
            Auto scrolls the data grid when the drag and drop operation is performed.
            </summary>
            <param name="towardsBottom">A boolean value specifying whether to scroll towards bottom.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.IndexToPoint(System.Int32)">
            <summary>
            Converts the given row index to point.
            </summary>
            <param name="rowIndex">Corresponding row index for which the point is to be obtained.</param>
            <returns>The point for the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.PointToRowIndex(System.Int32,System.Int32)">
            <summary>
            Converts the given point to the row index.
            </summary>
            <param name="x">The "x" co-ordinate of the point.</param>
            <param name="y">The "y" co-ordinate of the point.</param>
            <returns>The row index for the given point.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowDragDropController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ConditionalStyle">
            <summary>
            Serves as a base class for the conditional style classes <see cref="T:Syncfusion.SfDataGrid.XForms.CellStyle"/> and <see cref="T:Syncfusion.SfDataGrid.XForms.RowStyle"/>  in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ConditionalStyle.#ctor(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Initializes a new instance of the ConditionalStyle class.
            </summary>
            <param name="gridColumn">current grid Column value</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.ConditionalStyle.ForegroundColor">
            <summary>
            Gets or sets the foreground color to be applied.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.ConditionalStyle.BackgroundColor">
            <summary>
            Gets or sets the background color to be applied.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CellStyle">
            <summary>
            Provides set of properties to be customized in cell level.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.ConditionalStyle"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CellStyle.#ctor(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Initializes a new instance of the CellStyle class.
            </summary>
            <param name="gridColumn">Current grid column</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CellStyle.Font">
            <summary>
            Gets or sets the font to be applied.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CellStyle.FontAttribute">
            <summary>
            Gets or sets the font attributes to be applied.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CellStyle.CellStylePreference">
            <summary>
            Gets or sets the style preference which determines whether the selection alone should be visible or both selection and cell style should be visible. 
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.RowStyle">
            <summary>
            Provides set of properties to be customized in row level.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.ConditionalStyle"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowStyle.#ctor(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Initializes a new instance of the RowStyle class.
            </summary>
            <param name="gridColumn">current grid column</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.RowStyle.ConditionalStylingPreference">
            <summary>
            Gets or sets the style preference which determines whether the selection alone should be visible or both selection and row style should be visible. 
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DefaultStyle">
            <summary>
            Gets or sets the Default style for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetHeaderBackgroundColor">
            <summary>
            Gets the header's background color.
            </summary>
            <returns>The header's default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetHeaderForegroundColor">
            <summary>
            Gets the header's foreground color.
            </summary>
            <returns>The header's default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetHeaderBorderColor">
            <summary>
            Gets the header's border color of SfDataGrid.
            </summary>
            <returns>The header's default border color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetRecordBackgroundColor">
            <summary>
            Gets the record background color.
            </summary>
            <returns>The record default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetRecordForegroundColor">
            <summary>
            Gets the record foreground color.
            </summary>
            <returns>The record's default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetSelectionBackgroundColor">
            <summary>
            Gets the selection background color.
            </summary>
            <returns>The header's default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetSelectionForegroundColor">
            <summary>
            Gets the selection foreground color.
            </summary>
            <returns>The selection default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetCaptionSummaryRowBackgroundColor">
            <summary>
            Gets the captionsummary row background color.
            </summary>
            <returns>The captionsummary row default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetCaptionSummaryRowForegroundColor">
            <summary>
            Gets the captionsummary row foreground color.
            </summary>
            <returns>The captionsummary row default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetTableSummaryBackgroundColor">
            <summary>
            Gets the tablesummary background color.
            </summary>
            <returns>The tablesummary default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetTableSummaryForegroundColor">
            <summary>
            Gets the tablesummary foreground color.
            </summary>
            <returns>The tablesummary default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetCurrentCellBorderColor">
            <summary>
            Gets the current cell border color.
            </summary>
            <returns>The current cell border default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetLoadMoreViewBackgroundColor">
            <summary>
            Gets the loadmore view background color.
            </summary>
            <returns>The loadmore view default background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetLoadMoreViewForegroundColor">
            <summary>
            Gets the loadmore view foreground color.
            </summary>
            <returns>The loadmore view default foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetResizingIndicatorIcon">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for the resizing indicator icon.
            </summary>
            <returns>Returns the <see cref="T:Xamarin.Forms.ImageSource"/> for the resizing indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DefaultStyle.GetResizingIndicatorColor">
            <summary>
            Gets the resizing indicator color.
            </summary>
            <returns>The resizing indicator default color.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer">
            <summary>
            GridCaptionSummaryCellRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCaptionSummaryCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The data column object containing the values to be updated in the view.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer.UpdateColumnElement(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the column element of the passed dataColumn.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the grouped column. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer.OnUpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the cell style of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCell"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCellRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="dataColumnBase">The corresponding column for which the binding update should be determined.</param>
            <returns>
            <b>True</b> if the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCellRendererBase">
            <summary>
            Represents a class that provides a default implementation of the <see cref="T:Syncfusion.SfDataGrid.XForms.IGridCellRenderer"/> interface
            for a cell renderer. You should derive from this class to implement custom cell renderer classes. There is however no 
            dependency on GridCellRendererBase inside of the control. 
            <para/>
            If you want to implement a renderer with support for live views inside the cell you should derive from the 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2"/> or grid adapted GridVirtualizingCellRendererBase classes.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCellRendererBase"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.SupportsRenderOptimization">
            <summary>
            Gets or sets a value indicating whether the renderer supports rendering itself directly to the drawing context. When this is possible the 
            UIElement will only be created when the user moves the mouse over the cell or if the UIElement is needed for other reasons, 
            e.g. animate after change. The benefit of rendering directly to the DrawingContext instead of creating the UIElement 
            is a much improved scrolling performance.
            </summary>
            <value><b>True</b> if the renderer supports optimization, otherwise <b>false</b>. 
            The default value is true.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.IsHeaderRenderer">
            <summary>
            Gets or sets a value indicating whether the currrent renderer is header renderer
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.CurrentCellIndex">
            <summary>
            Gets or sets the current cell's row column index.
            </summary>
            <value>The current cell's row column index.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.CurrentCellElement">
            <summary>
            Gets the view of the current cell.
            </summary>
            <value>The view of the current cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.CurrentCellRendererElement">
            <summary>
            Gets the view of the current cell element.
            </summary>
            <value>The view of the current cell element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.IsInEditing">
            <summary>
            Gets or sets a value indicating whether the current cell is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.IsFocused">
            <summary>
            Gets or sets a value indicating whether the current cell is focused or not.
            </summary>
            <value><b>true</b> if the current cell is focused; otherwise , <b>false</b>.</value>
            <exception cref="T:System.InvalidOperationException">Thrown when the cell is focused before the current cell state is maintained.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnLayout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Xamarin.Forms.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.Layout"/> to arrange the GridCell's children view(s).
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding UiElement</param>
            <param name="left">left end of the cell for arranging the view</param>
            <param name="top">top value for arranging the view</param>
            <param name="right">right end of the cell for arranging the view</param>
            <param name="bottom">bottom value for arranging the view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnMeasure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Xamarin.Forms.View,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.Measure"/> to Measure the GridCell's children view(s). 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding view</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnPrepareViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.PrepareViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to prepare the GridCell's children view(s).
            VirtualizingCellRendererBase overrides this method and creates new views and wires them with the parent cells control.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnUnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether GridVirtualizingCellRendererBase.AllowRecycle was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnUpdateColumnInfo(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the value of the Cell view corresponding to GridColumn.
            In our control we are reusing the cell views for horizontal scrolling. Hence we need to update the value of the cell view.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnRefreshDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to refresh the display value of the column element.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the cell value of the column element. 
            </summary>
            <param name="dataColumn">The dataColumn</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnSetCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.SetCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to set the style for the column element in a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.OnUpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the cell style for the column element in a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.DataGrid">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.IsEditable">
            <summary>
            Gets or sets a value indicating whether the cell is editable.
            </summary>
            <value><b>True</b> if the cell is editable, otherwise <b>false</b>. 
            The default value is false.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.IsFocusable">
            <summary>
            Gets or sets a value indicating whether the grid cell is focusable.
            </summary>
            <value><b>True</b> if the current cell is focusable, otherwise <b>false</b>. 
            The default value is true.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the cell state for the current cell has been set.
            </summary>
            <value><b>True</b> if the cell state for the current cell is set, otherwise <b>false</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.PrepareViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to create and initiate the view for the cell.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <returns>Returns the view of the cell.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.UnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether <see cref="P:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.AllowRecycle"/> was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.RefreshDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to refresh the display value of the cell.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.Syncfusion#SfDataGrid#XForms#IGridCellRenderer#UpdateColumnInfo(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to update the binding information of the cell UIElement.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.UpdateColumnInfo(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to update the binding information of the cell UIElement.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.UpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to update the cell value.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.SetCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method used to set the cell style.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method used to update the cell style.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.SetCurrentCellState(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.XForms.CellElement,System.Boolean)">
            <summary>
            Update the current cell information in the renderer while current cell was activated.
            </summary>
            <param name="currentCellIndex">The row column index of the current cell.</param>
            <param name="currentCellElement">The UIElement of the current cell.</param>
            <param name="isInEditing">The value indicating whether the view is in edit mode or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.UpdateCurrentCellState(Xamarin.Forms.View,System.Boolean)">
            <summary>
            Updates the current cell state for the specified current cell renderer element.
            </summary>
            <param name="currentRendererElement">Specifies the current cell UIElement to update the current cell state.</param>
            <param name="isInEdit">Specifies whether the current cell is editable.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.ResetCurrentCellState">
            <summary>
            Resets the current cell information in renderer, when the current cell is deactivated.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.SetFocus(System.Boolean)">
            <summary>
            Sets the focus to the current cell renderer element.
            </summary>
            <param name="setFocus">The value indicating whether the current cell renderer element is focusable or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.BeginEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.XForms.CellElement,Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            This method fires when editing in the current cell begins.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell which is in edit mode.</param>
            <param name="cellElement">The UIElement of the cell which is in edit mode.</param>
            <param name="column">The corresponding grid column of the cell which is in edit mode.</param>
            <param name="rowData">The corresponding record of the row which is in edit mode.</param>
            <returns>Returns a value indicating whether the cell enters into the editing mode or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.EndEdit(Syncfusion.SfDataGrid.XForms.DataColumnBase,System.Object,System.Boolean)">
            <summary>
            This method fires when the editing in the current cell is ended.
            </summary>
            <param name="dataColumn">The corresponding data column of the cell, which leaves the edit mode.</param>
            <param name="record">The underlying data of the cell, which leaves the edit mode.</param>
            <param name="canResetBinding">The value indicating whether to reset the binding or not.</param>       
            <returns>A boolean value indicating whether the current cell has focus.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.CommitCellValue(System.Boolean)">
            <summary>
            Commits the edited value to the underlying data. 
            </summary>
            <param name="isNewValue">A value indicating whether the edited value is new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.ClearRecycleBin">
            <summary>
            Clears the recycle bin. The cell element will be stored for recycling purpose, when the cell element is scrolled 
            out of view. This method clears all the cell elements which are stored for recycling purpose.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.CanUpdateBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="dataColumnBase">The corresponding column for which the binding update should be determined.</param>
            <returns>
            <b>True</b> if the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.SetFocus(Xamarin.Forms.View,System.Boolean)">
            <summary>
            Sets the focus for the editing view.
            </summary>
            <param name="view">Current cell renderer element</param>
            <param name="needToFocus">Returns whether focus has to be set or not. </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.Dispose">
            <summary>
            Releases all resources used by the GridCellRendererBase class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.SfDataGrid.XForms.GridCellRendererBase"/> objects in the view.
            </summary>
            <remarks>
            In a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control, you can access the GridCellRendererCollection through the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CellRenderers"/> property.
            <para/>
            The GridCellRendererCollection uses standard <see cref="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Add(System.String,Syncfusion.SfDataGrid.XForms.IGridCellRenderer)"/> and <see cref="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Remove(System.String)"/> methods to manipulate the collection.
            Uses the Contains method to determine if a specific cell type exists in the collection.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridCellRendererCollection class.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Values">
            <summary>
            Gets the renderers in the collection.
            </summary>
            <value>The renderers in the collection.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Keys">
            <summary>
            Gets the keys of the renderers in the collection.
            </summary>
            <value>The keys of the renderers in the collection.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </value>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
            <returns>
            <b>True</b> if access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe); otherwise, <b>false</b>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Item(System.String)">
            <summary>
            Indexer will return the corresponding renderer for the given key value.
            </summary>
            <param name="key">The key for which the renderer should be obtained.</param>
            <returns>The corresponding renderer for the given key value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Add(System.String,Syncfusion.SfDataGrid.XForms.IGridCellRenderer)">
            <summary>
            Adds the given renderer to the Renderer dictionary.
            </summary>
            <param name="key">The key of the renderer.</param>
            <param name="renderer">The renderer which should be added to the collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Remove(System.String)">
            <summary>
            Removes the renderer with the given key value from the dictionary.
            </summary>
            <param name="key">The key whose renderer should be removed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the renderer dictionary contains the corresponding renderer key.
            </summary>
            <param name="key">The key which should be queried in the renderer collection.</param>
            <returns>Returns true if the Key is found in the Dictionary, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.ContainsValue(Syncfusion.SfDataGrid.XForms.GridCellRendererBase)">
            <summary>
            Checks whether the renderer dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer">The cell renderer which should be queried in the renderer collection.</param>
            <returns>Returns true if the renderer is found in the Dictionary, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.CopyTo(Syncfusion.SfDataGrid.XForms.GridCellRendererBase[],System.Int32)">
            <summary>
            Copies the renderer values to the array.
            </summary>
            <param name="array">An array of cell renderer.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Clear">
            <summary>
            Clear the values in the renderer dictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>,
             starting at a given <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing. </param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or- The number of elements in the 
            source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> 
            to the end of the destination <paramref name="array"/>.-or-The type of the source <see cref="T:System.Collections.ICollection"/>
            cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null. </exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.GetEnumerator">
            <summary>
            Returns the enumerator for retrieving the values in the cell renderer collection.
            </summary>
            <returns>The enumerator for retrieving the values in the cell renderer collection.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing">The value indicating whether both managed and unmanaged resources should be released.
            if true - release both managed and unmanaged resources;
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCellSwitchRenderer">
            <summary>
            GridCellSwitchRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellSwitchRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellSwitchRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellSwitchRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfSwitchControl)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellSwitchRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfSwitchControl)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellSwitchRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> view.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellSwitchRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the toggle value of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/>.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellSwitchRenderer.OnUnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> after a cell is scrolled out of view.
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2"/> overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether <see cref="P:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.AllowRecycle"/> was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCellTemplateRenderer">
            <summary>
            GridCellTemplateRenderer is a class for cell renderer that displays customized view in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
            <remarks>GridCellTemplateRenderer loads a view inside the grid cell.
            using the <see cref="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplate"/> or <see cref="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplateSelector"/> property of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridTemplateColumn"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTemplateRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellTemplateRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTemplateRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Xamarin.Forms.View)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Xamarin.Forms.ContentView"/>.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Xamarin.Forms.View"/> to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTemplateRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Xamarin.Forms.View)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Xamarin.Forms.ContentView"/>.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Xamarin.Forms.View"/> to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTemplateRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Xamarin.Forms.View"/>.
            </summary>
            <returns>A new <see cref="T:Xamarin.Forms.View"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTemplateRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the column
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTemplateRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="datacolumnBase">The corresponding column for which the binding update should be determined.</param>
            <returns>
            <b>True</b> if the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer">
            <summary>
            GridCellTextViewRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Upon editing it displays <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfEntry"/> for editing values.
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridCellTextViewRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.OnInitializeEditView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.Renderers.SfEntry)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object 
            with the given <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfEntry"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.ResumeBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Resumes the binding value
            </summary>
            <param name="dataColumn">DataColumnBase instance</param>
            <param name="view">current view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.SuspendBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Suspends the binding value
            </summary>
            <param name="dataColumn">DataColumnBase instance</param>
            <param name="view">current view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.Renderers.SfEntry)">
            <summary>
            Updates the cell style of the edit element in a grid cell.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view hosted inside a column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer.OnUnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.UnloadUIViews"/> after a cell is scrolled out of view.
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2"/> overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether <see cref="P:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.AllowRecycle"/> was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridHeaderCellRenderer">
            <summary>
            GridHeaderCellRenderer is a class for cell renderer that displays header contents in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
            <remarks>GridHeaderCellRenderer loads a <see cref="T:Xamarin.Forms.ContentView"/> inside the GridHeaderCellControl inside which 
            it hosts an <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> for displaying the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderText"/> and also displays the sort icon adjacent 
            to it upon sorting the column.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridHeaderCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Xamarin.Forms.ContentView)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Xamarin.Forms.ContentView"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Xamarin.Forms.ContentView"/> to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Xamarin.Forms.ContentView)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Xamarin.Forms.ContentView"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Xamarin.Forms.ContentView"/> to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Xamarin.Forms.ContentView"/>.
            </summary>
            <returns>A new <see cref="T:Xamarin.Forms.ContentView"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellRenderer.UpdateColumnElement(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the column element of the passed dataColumn.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the header column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridImageCellRenderer">
            <summary>
            GridImageCellRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridImageCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridImageCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridImageCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfImageView)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/> and the required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/> to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridImageCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfImageView)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/> to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridImageCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/>.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridImageCellRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridImageCellRenderer.OnUnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.UnloadUIViews"/> after a cell is scrolled out of view.
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2"/> overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether <see cref="P:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.AllowRecycle"/> was set.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCellRenderer">
            <summary>
            GridRowHeaderCellRenderer is a class for cell renderer that displays <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowHeaderCellRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridRowHeaderCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowHeaderCellRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.GridRowHeaderCell)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/> and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/> view to be hosted in the cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowHeaderCellRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.GridRowHeaderCell)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/> view to be updated in the cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowHeaderCellRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/> view.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowHeaderCellRenderer.OnRefreshDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to refresh the display value of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/>.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowHeaderCellRenderer.OnUpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the cell style for the <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/>.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRenderer`2">
            <summary>
            GridVirtualizingCellRenderer is an abstract base class for cell renderer classes that need live views displayed in a cell.
            You can derive from this class and provide the type of the UIElement you want to show inside cells as type parameter.
            The class provides strong typed virtual methods for initializing Content of the cell and arranging the cell visuals.
            See <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2"/> for more details.
            <para/>
            The idea behind this class is to provide a place where we can add general code that should be shared for all 
            cell renderer classes in the tree derived from GridVirtualizingCellRendererBase. While this class does at the moment 
            not add meaningful functionality to GridVirtualizingCellRendererBase we created this extra layer of inheritance to make it 
            easy to share code for the GridVirtualizingCellRendererBase base class between grid and common assemblies and keep grid control 
            specific code out of the base class. It is currently not possible with C# to the base class as template type parameter.
            </summary>
            <typeparam name="T1">The type of the UIElement that should be placed inside cells in display mode.</typeparam>
            <typeparam name="T2">The type of the UIElement that should be placed inside cells in edit mode.</typeparam>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRenderer`2.#ctor">
            <summary>
            Initializes a new instance of the GridVirtualizingCellRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRenderer`2.UpdateEditViewCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase,`1)">
            <summary>
            Updates the cell style of the edit element in a grid cell.
            </summary>
            <param name="dataColumn">The data column.</param>
            <param name="editView">The edit view hosted inside a column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRenderer`2.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,`0)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRenderer`2.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,`0)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">The child view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRenderer`2.OnInitializeEditView(Syncfusion.SfDataGrid.XForms.DataColumnBase,`1)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param> 
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRenderer`2.OnUpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the cell style of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCell"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2">
            <summary>
            VirtualizingCellRendererBase is an abstract base class for cell renderer classes that need live views displayed in a cell.
            You can derive from this class and provide the type of the view you want to show inside cells as type parameter.
            The class provides strong typed virtual methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            The class manages the creation of cells view objects when the cell is scrolled into view and also unloading of the views.
            The class offers an optimization in which Views can be recycled when <see cref="P:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.AllowRecycle"/> is set. 
            In this case when a cell is scrolled out of view it is moved into a recycle bin and the next time a new view is scrolled 
            into view the element is recovered from the recycle bin and reinitialized with the new Content of the cell.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
            <typeparam name="T1">The type of the UIElement that should be placed inside cells in display mode.</typeparam>
            <typeparam name="T2">The type of the UIElement that should be placed inside cells in edit mode.</typeparam>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.displayRecycleBin">
            <summary>
            Recycles the display view elements for cells that were scrolled out of view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.editRecycleBin">
            <summary>
            Recycles the edit view elements for cells that were scrolled out of view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.#ctor">
            <summary>
            Initializes a new instance of the GridVirtualizingCellRendererBase class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.AllowRecycle">
            <summary>
            Gets or sets a value indicating whether views can be recycled when scrolled out of view. In this case when a cell is 
            scrolled out of view it is moved into a recycle bin and the next time a new element is scrolled into view the element is 
            recovered from the recycle bin and reinitialized with the new Content of the cell.
            </summary>
            <value><b>True</b> if elements can be recycled when scrolled out of view, otherwise <b>false</b>. The default value is true.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnPrepareViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.PrepareViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to prepare the GridCell's children view(s).
            VirtualizingCellRendererBase overrides this method and creates new views and wires them with the parent cells control.
            </summary>
            <param name="dataColumn">The DataColumn containing the details of the column.</param>
            <returns>Returns the columnElement of the cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnUnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether GridVirtualizingCellRendererBase.AllowRecycle was set.
            </summary>
            <param name="dataColumn">The DataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnUpdateColumnInfo(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the value of the Cell view corresponding to GridColumn.
            In our control we are reusing the cell views for horizontal scrolling. Hence we need to update the value of the cell view.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnRefreshDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to refresh the display value of the column element.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnLayout(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Xamarin.Forms.View,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.Layout"/> to arrange the GridCell's children view(s).
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding UiElement</param>
            <param name="left">left end of the cell for arranging the view</param>
            <param name="top">top value for arranging the view</param>
            <param name="right">right end of the cell for arranging the view</param>
            <param name="bottom">bottom value for arranging the view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnMeasure(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Xamarin.Forms.View,System.Int32,System.Int32)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.Measure"/> to Measure the GridCell's children view(s). 
            </summary>
            <param name="rowColumnIndex">Row Column Index of the cell</param>
            <param name="view">Corresponding view</param>
            <param name="widthMeasureSpec">Corresponding width for measuring the view size</param>
            <param name="heightMeasureSpec">Corresponding height for measuring the view size</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnSetCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.SetCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to set the style for the column element in a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnUpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Called from <see cref="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)"/> to update the cell style for the column element in a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/>. 
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.DataGridStyle,Xamarin.Forms.Style,Xamarin.Forms.Label,Syncfusion.SfDataGrid.XForms.GridCell)">
            <summary>
            Styles will be updated in this method along with selection.
            </summary>
            <param name="dataColumn">DataColumnBase</param>
            <param name="gridStyle">DataGridStyle</param>
            <param name="cellStyle">Style</param>
            <param name="sfLabel">Label</param>
            <param name="gridCell">GridCell</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.BeginEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.XForms.CellElement,Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            This method fires when editing in the current cell begins.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell which is in edit mode.</param>
            <param name="cellElement">The UIElement of the cell which is in edit mode.</param>
            <param name="column">The corresponding grid column of the cell which is in edit mode.</param>
            <param name="rowData">The corresponding record of the row which is in edit mode.</param>
            <returns>Returns a value indicating whether the cell enters into the editing mode or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.CommitCellValue(System.Boolean)">
            <summary>
            Commits the edited value to the underlying data. 
            </summary>
            <param name="isNewValue">A value indicating whether the edited value is new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.EndEdit(Syncfusion.SfDataGrid.XForms.DataColumnBase,System.Object,System.Boolean)">
            <summary>
            This method fires when the editing in the current cell is ended.
            </summary>
            <param name="dataColumnBase">The corresponding data column of the cell, which leaves the edit mode.</param>
            <param name="record">The underlying data of the cell, which leaves the edit mode.</param>
            <param name="canResetBinding">The value indicating whether to reset the binding or not.</param>
            <returns>A boolean value indicating whether the current cell has focus.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnCreateDisplayUIView">
            <summary>
            Creates a new display view based on the type parameter.
            </summary>
            <returns>A view of type given in the type parameter.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnCreateEditUIView">
            <summary>
            Creates a new view for the edit mode of cell.
            </summary>
            <returns>
            Returns the new view for edit mode of cell. 
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.WireEditUIElement(`1)">
            <summary>
            Wires the edit element to the view.
            </summary>
            <param name="editElement">The edit element </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.UnwireEditUIElement(`1)">
            <summary>
            Unwire the edit element to the view.
            </summary>
            <param name="editElement">The edit element </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnEnteredEditMode(Syncfusion.SfDataGrid.XForms.DataColumnBase,Xamarin.Forms.View)">
            <summary>
            Invoked when the cell is being entered on the edit mode.
            </summary>
            <param name="dataColumn">The corresponding data column being entered on the edit mode.</param>
            <param name="currentRendererElement">The corresponding renderer element in edit mode.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnEditingComplete(Syncfusion.SfDataGrid.XForms.DataColumnBase,Xamarin.Forms.View)">
            <summary>
            Invoked when editing completed.
            </summary>
            <param name="dataColumn">The corresponding data column being entered on the edit mode.</param>
            <param name="currentRendererElement">The corresponding renderer element in edit mode.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnInitializeEditView(Syncfusion.SfDataGrid.XForms.DataColumnBase,`1)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.SuspendBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase,`0)">
            <summary>
            Suspends the binding value
            </summary>
            <param name="dataColumn">DataColumnBase instance</param>
            <param name="view">current view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.ResumeBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase,`0)">
            <summary>
            Resumes the binding value
            </summary>
            <param name="dataColumn">DataColumnBase instance</param>
            <param name="view">current view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.UpdateColumnElement(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the column element of the passed dataColumn.
            </summary>
            <returns>The column element.</returns>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,`0)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,`0)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.InitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,`0)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.InitializeEditView(Syncfusion.SfDataGrid.XForms.DataColumnBase,`1)">
            <summary>
            Initializes the edit column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.UpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,`0)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given view and required values.
            </summary>
            <param name="dataColumn">The data column containing the details of the column.</param>
            <param name="view">The child view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.CreateOrRecycleDisplayUIView">
            <summary>
            Creates a new view or reuses the existing view if reusing can be applied here
            </summary>
            <returns>Returns the created a new view or reuses the existing view if reusing can be applied here</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.CreateOrRecycleEditUIView">
            <summary>
            Creates a new view or reuses the existing view if reusing can be applied here
            </summary>
            <returns>Returns the created a new view or reuses the existing view if reusing can be applied here</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.UnloadDisplayUIView(Syncfusion.SfDataGrid.XForms.CellElement,Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Unloads the display view
            </summary>
            <param name="view">current view</param>
            <param name="column">current column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.UnloadEditUIView(Syncfusion.SfDataGrid.XForms.CellElement,Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Unloads the edit view
            </summary>
            <param name="view">current view</param>
            <param name="column">current column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.ApplyCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            CellStyle defined in the cell style event will be applied in this method.
            </summary>
            <param name="dataColumn">DataColumnBase instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2.ClearRecycleBin">
            <summary>
            Clears the recycle bin. The cell element will be stored for recycling purpose, when the cell element is scrolled 
            out of view. This method clears all the cell elements which are stored for recycling purpose.
            </summary>
            <remarks>This method clears both the display recycle bin which stores the display cell elements and 
            edit recycle bin which stores the edit cell elements.</remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IGridCellRenderer">
            <summary>
            Defines the interface for all cell renderer.
            A default implementation of this interface is provided by the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCellRendererBase"/> class
            from which you should derive custom cell renderer classes. There is however no dependency on <see cref="T:Syncfusion.SfDataGrid.XForms.GridCellRendererBase"/>.
            We should access the renderer by using this interface only. Do not create any objects for renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.DataGrid">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.IsEditable">
            <summary>
            Gets or sets a value indicating whether the cell is editable or not.
            </summary>
            <value><b>True</b> if the current cell is editable, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.IsFocusable">
            <summary>
            Gets or sets a value indicating whether a grid cell is focusable or not.
            </summary>
            <value><b>True</b> the current cell is focusable, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the cell state for the current cell has been set.
            </summary>
            <value><b>True</b> if the cell state for the current cell is set, otherwise <b>false</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to update the cell value.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="dataColumnBase">The corresponding column for which the binding update should be determined.</param>
            <returns>
            Returns <b>true</b> if the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.SetCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method used to set the CellStyle.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateCellStyle(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method used to update the cell style.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.PrepareViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to create and initiate the view for cell.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <returns>Returns the columnElement of the cell.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UnloadViews(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used for Unloading the view of the cell.(For Recycling Purpose)
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.RefreshDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to refresh the display value of the cell.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.UpdateColumnInfo(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method which is used to update the binding information of the cell UIElement.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.GetControlValue">
            <summary>
            Returns the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is <b>true</b>.
            </summary>
            <returns>The current cell value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's <see cref="P:Syncfusion.SfDataGrid.XForms.GridCellRendererBase.HasCurrentCellState"/> is true.
            </summary>
            <param name="value">The value to be set to the current cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.SetCurrentCellState(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.XForms.CellElement,System.Boolean)">
            <summary>
            Update the current cell information in the renderer while current cell was activated.
            </summary>
            <param name="currentCellIndex">The row column index of the current cell.</param>
            <param name="currentCellElement">The UIElement of the current cell.</param>
            <param name="isInEditing">The value indicating whether the view is in edit mode or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.ResetCurrentCellState">
            <summary>
            Resets the current cell information in renderer, when the current cell is deactivated.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.SetFocus(System.Boolean)">
            <summary>
            Sets the focus to the current cell renderer element.
            </summary>
            <param name="setFocus">The value indicating whether the current cell renderer element is focusable or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.BeginEdit(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,Syncfusion.SfDataGrid.XForms.CellElement,Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            This method fires when editing in the current cell begins.
            </summary>
            <param name="rowColumnIndex">The row column index of the cell which is in edit mode.</param>
            <param name="cellElement">The UIElement of the cell which is in edit mode.</param>
            <param name="column">The corresponding grid column of the cell which is in edit mode.</param>
            <param name="rowData">The corresponding record of the row which is in edit mode.</param>
            <returns>Returns a value indicating whether the cell enters into the editing mode or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.EndEdit(Syncfusion.SfDataGrid.XForms.DataColumnBase,System.Object,System.Boolean)">
            <summary>
            This method fires when the editing in the current cell is ended.
            </summary>
            <param name="dataColumn">The corresponding data column of the cell, which leaves the edit mode.</param>
            <param name="record">The underlying data of the cell, which leaves the edit mode.</param>
            <param name="canResetBinding">The value indicating whether to reset the binding or not.</param>
            <returns>A boolean value indicating whether the current cell has focus.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.CommitCellValue(System.Boolean)">
            <summary>
            Commits the edited value to the underlying data. 
            </summary>
            <param name="isNewValue">A value indicating whether the edited value is new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridCellRenderer.ClearRecycleBin">
            <summary>
            Clears the recycle bin. The cell element will be stored for recycling purpose, when the cell element is scrolled 
            out of view. This method clears all the cell elements which are stored for recycling purpose.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridUnboundCellTextBoxRenderer">
            <summary>
            GridUnboundCellTextBoxRenderer is a class for cell renderer that displays the unbound column value in a <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            The class provides strong typed override methods for initializing Content of the cell and arranging the cell visuals.
            <para/>
            Updates to appearance and Content of child elements, creation and unloading of views will not trigger 
            layout or render calls in parent canvas.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundCellTextBoxRenderer.#ctor">
            <summary>
            Initializes a new instance of the GridUnboundCellTextBoxRenderer class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundCellTextBoxRenderer.OnInitializeDisplayView(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Initializes the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view object to be hosted inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundCellTextBoxRenderer.OnUpdateDisplayValue(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.SfLabel)">
            <summary>
            Updates the column element of a <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and required values.
            </summary>
            <param name="dataColumn">The dataColumn containing the details of the column.</param>
            <param name="view">A <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view to be updated inside the column element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundCellTextBoxRenderer.OnCreateDisplayUIView">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view and initializes it with the required properties.
            </summary>
            <returns>A new <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/> view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundCellTextBoxRenderer.OnUpdateCellValue(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Updates the cell value of the associated column.
            </summary>
            <param name="dataColumn">The data column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundCellTextBoxRenderer.CanUpdateBinding(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Determines whether the binding for the column can be updated. 
            Implement this method to update binding on particular renderer when the data context is set.
            </summary>
            <param name="dataColumnBase">The corresponding column for which the binding update should be determined.</param>
            <returns>
            <b>True</b> if the binding is updated for the column, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.VirtualizingCellUIElementBin`1">
            <summary>
            This class implements a cache of view of the given type parameter T. It is used by the 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRendererBase`2"/> renderer to recycle view elements for cells 
            that were scrolled out of view and delay unloading of views.
            <para/>
            This reduces the number of times the views needs to be created or unloaded and instead only the 
            contents of the views will be reinitialized with cell contents.
            </summary>
            <typeparam name="T">Type of the view.</typeparam>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellUIElementBin`1.#ctor">
            <summary>
            Initializes a new instance of the VirtualizingCellUIElementBin class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellUIElementBin`1.Item(Syncfusion.SfDataGrid.XForms.GridCellRendererBase)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified renderer.
            </summary>
            <param name="renderer">GridCellRendererBase instance</param>
            <value>the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified renderer.</value>
            <returns>Returns thespecified renderer</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellUIElementBin`1.Enqueue(Syncfusion.SfDataGrid.XForms.GridCellRendererBase,`0)">
            <summary>
            Enqueues the specified UIview for the given renderer.
            </summary>
            <param name="renderer">The renderer whose view is to be enqueued.</param>
            <param name="view">The UI view to be enqueued.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellUIElementBin`1.Dequeue(Syncfusion.SfDataGrid.XForms.GridCellRendererBase)">
            <summary>
            Dequeues a view from the specified renderer.
            </summary>
            <param name="renderer">The renderer from which the renderer is to be dequeued.</param>
            <returns>Returns the view of the specified renderer.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CellElement">
            <summary>
            Serves as base class for different types of Cells.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CellElement.NeedToInvalidateProperty">
            <summary>
            Identifies the NeedToInvalidate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CellElement.#ctor">
            <summary>
            Initializes a new instance of the CellElement class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CellElement.CanRendererUnload">
            <summary>
            Gets or sets a value indicating whether the View can be unloaded by Renderer.
            </summary>
            <value><b>true</b> if the renderer can unload this view; otherwise, <b>false</b>. The default is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CellElement.NeedToInvalidate">
            <summary>
            Gets or sets a value indicating whether to invalidate the CellElement or not.
            </summary>
            <value><b>True</b> if the CellElement has to be invalidated, otherwise <b>false</b>. 
            The default is false.</value>
            <remarks>When the need to invalidate is set as true, layout pass will be called for the cell element.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CellElement.Load">
            <summary>
            Method to loads the child elements.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CellElement.Unload">
            <summary>
            Method to unload the child elements.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CellElement.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when adding a child.
            </summary>
            <param name="child">The Content of the CellElement.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CellElement.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when removing a child.
            </summary>
            <param name="child">The Content of the CellElement.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CellElement.OnBindingContextChanged">
            <summary>
            Invoked whenever the binding context of the CellElement changes.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCell">
            <summary>
            Represents a record cell in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCell.#ctor">
            <summary>
            Initializes a new instance of the GridCell class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.Foreground">
            <summary>
            Gets or sets the foreground color of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            </summary>
            <value>A <see cref="T:Xamarin.Forms.Color"/> object that represents the foreground color of the 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridCell.ForegroundProperty">
            <summary>
            Identifies the Foreground bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.CellStylingPreference">
            <summary>
            Gets or sets the CellStylingPreference of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridCell.CellStylingPreferenceProperty">
            <summary>
            Identifies the CellStylingPreference bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.CellValue">
            <summary>
            Gets the cell value of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            </summary>
            <value>An object that represents the cell value of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridCell.CellValueProperty">
            <summary>
            Identifies the CellValue bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.Clip">
            <summary>
            Gets or sets the clip value of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            </summary>
            <value>An object that represents the clipping value of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridCell.ClipProperty">
            <summary>
            Identifies the Clip bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.RowIndex">
            <summary>
            Gets the row index of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            </summary>
            <value>A value that determines the row index of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.ColumnIndex">
            <summary>
            Gets the column index of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            </summary>
            <value>A value that determines the column index of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.DataColumn">
            <summary>
            Gets the data column associated with the grid cell which contains the details of the column.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> associated with the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>,
            which contains the details of the column.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.FontAttribute">
            <summary>
            Gets or sets the font attributes of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.
            </summary>
            <value>A <see cref="T:Xamarin.Forms.FontAttributes"/> object that represents the font attributes of the 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCell.ImplicitGridCellStyle">
            <summary>
            Return implict style of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/> if any.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCell.OnForegroundChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the Foreground property is changed.
            </summary>
            <param name="bindable">The GridCell as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCell.OnCellValueChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the CellValue property is changed.
            </summary>
            <param name="bindable">The GridCell as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCell.Init">
            <summary>
            Initializes the required properties or methods in GridCell.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCell.OnBindingContextChanged">
            <summary>
            Invoked whenever the binding context of the GridCell changes.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCell.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the Content of a GridCell.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCell.OnChildMeasureInvalidated">
            <summary>
            Invoked whenever a child of the layout has emitted <see cref="E:Xamarin.Forms.VisualElement.MeasureInvalidated"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCell">
            <summary>
            Represents a caption summary cell of the caption summary row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCell.#ctor">
            <summary>
            Initializes a new instance of the GridCaptionSummaryCell class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCaptionSummaryCell.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the content of a GridCaptionSummaryCell.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCell">
            <summary>
            Represents a group summary cell of the group summary row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCell.#ctor">
            <summary>
            Initializes a new instance of the GridGroupSummaryCell class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryCell.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the content of a GridGroupSummaryCell.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridTableSummaryCell">
            <summary>
            Represents a table summary cell of the table summary row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryCell.#ctor">
            <summary>
            Initializes a new instance of the GridTableSummaryCell class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridIndentCell">
            <summary>
            Represents a GridIndentCell of the caption summary row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndentCell.#ctor">
            <summary>
            Initializes a new instance of the GridIndentCell class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.NamespaceDoc">
            <summary>
            Provides classes, interfaces and enumerators to create <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, that enable a user to interact with a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            The grid classes allow a user to manipulate the data and performs the SfDataGrid operations like sorting, grouping and filtering in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/getting-started"/>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl">
            <summary>
            Represents a header cell in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.#ctor">
            <summary>
            Gets the associated <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.RowIndex">
            <summary>
            Gets the row index of the header row.
            </summary>
            <value>The row index of the header row.</value>
            <remarks>The header index can also be obtained using the following code example.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            var headerIndex = dataGrid.GetHeaderIndex();
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.ColumnIndex">
            <summary>
            Gets the column index of the header cell.
            </summary>
            <value>The column index of the header cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.GridColumn">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> associated with the header cell, where grid column represents each column in the datagrid.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> associated with the header cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.GridModel">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.GridModel"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control, where grid model represents the 
            wrapper class of datagrid, handling the underlying collection and view related operations.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.GridModel"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.Clip">
            <summary>
            Gets or sets the clip value of the header cell.
            </summary>
            <value>The clip value of the header cell.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.ClipProperty">
            <summary>
            Identifies the Clip bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortDirection">
            <summary>
            Gets or sets the sort direction of the associated <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> which is sorted.
            </summary>
            <value>The sort direction of the associated <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> which is sorted.</value>
            <remarks>The grid column which is sorted can be obtained from the <see cref="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortColumn"/> property 
            of the grid header cell control.</remarks>
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortColumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortColumn">
            <summary>
            Gets the column that represents sorting in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection, which contains the 
            columns in the datagrid.
            </summary>
            <value>The column that represents sorting in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection.</value>
            <remarks>The sort direction of the column that represents sorting can be obtained using 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortDirection"/> property.
            </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortAscend">
            <summary>
            Gets or sets the image view representing the sort icon based on the sort direction.
            </summary>
            <value>The image view representing the sort icon based on the sort direction.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.DataColumn">
            <summary>
            Gets the data column associated with the header cell which contains the details of the column.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> associated with the <see cref="T:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl"/>,
            which contains the details of the column.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortNumberWidth">
            <summary>
            Gets or sets the width for displaying sort number
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortNumber">
            <summary>
            Gets or sets the sort order of the sorted column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortNumberVisibility">
            <summary>
            Gets or sets a value indicating whether the Visibility of the sort number is in view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortNumbertText">
            <summary>
            Gets or sets the view to display the sort number.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SortImageDefinition">
            <summary>
            Gets the sort image definition from the HeaderView.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.PanGesture">
            <summary>
            Gets the PanGesture value
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.PanGesture_PanUpdated(System.Object,Xamarin.Forms.PanUpdatedEventArgs)">
            <summary>
            Raise when PanGesture is updated.
            </summary>
            <param name="sender">GridColumn instance</param>
            <param name="e">PanUpdatedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.Initialize">
            <summary>
            Initializes the required components for the GridHeaderCellControl.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.Sort">
            <summary>
            Method that is used to perform sorting when the header cell is touched.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.SetSortNumberVisibility">
            <summary>
            Sets the SortNumber of the column and its visibility
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.GetChild">
            <summary>
            Gets the Sort Indicator for the column upon sorting.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.GetChild(System.Boolean)">
            <summary>
            Sets the Visibility and width for the Sort Indicator inside the header cell.
            </summary>
            <param name="visibility">The SortIndicator Visibility.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the Content of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl"/>.
            </summary>
            <param name="x">A value representing the x coordinate of the child region bounding box.</param>
            <param name="y">A value representing the y coordinate of the child region bounding box.</param>
            <param name="width">A value representing the width of the child region bounding box.</param>
            <param name="height">A value representing the height of the child region bounding box.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.OnChildMeasureInvalidated">
            <summary>
            Invoked whenever a child of the layout has emitted <see cref="E:Xamarin.Forms.VisualElement.MeasureInvalidated"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.OnChildRemoved(Xamarin.Forms.Element)">
            <summary>
            Invoked whenever a child is removed from <see cref="T:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl"/>.
            </summary>
            <param name="child">The element that was removed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when adding a child.
            </summary>
            <param name="child">The Content of the GridHeaderCellControl.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when removing a child.
            </summary>
            <param name="child">The Content of the GridHeaderCellControl.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.Update">
            <summary>
            Updates the header cell components of a column.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.InitializePanGesture">
            <summary>
            Initializes a new instance for PanGesture
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.MakeSort">
            <summary>
            Sort the data of a column against the user tap on a column header.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.InitializeHeaderView">
            <summary>
            Initializes a grid with required columns to load the components inside the header cell.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.Gridcolumn">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> associated with the header cell.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHeaderCellControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposable"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell">
            <summary>
            Represents a row header cell in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell.#ctor">
            <summary>
            Initializes a new instance of the GridRowHeaderCell class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the Content of a GridRowHeaderCell.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.PullToRefreshView">
            <summary>
            Represents a customized <see cref="T:Xamarin.Forms.View"/> that loads when an end-user pulls the grid down to refresh data.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.PullToRefreshView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.PullToRefreshView"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.IsIndeterminate">
            <summary>
            Gets or sets a value indicating whether the indeterminate state of the pull to refresh view. The pull to refresh 
            view will be in indeterminate state when the view is executing the <see cref="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.PullToRefreshCommand"/>.
            </summary>
            <value><b>True</b> if the pull to refresh view is in indeterminate state, otherwise <b>false</b>. 
            The default value is false.</value>
            <remarks>
            The pull to refresh view will be in indeterminate state, in the mean time pull to refresh command is executed, 
            Refer the below code example in which the <see cref="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.IsIndeterminate"/> state is set as true before executing the <see cref="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.PullToRefreshCommand"/> 
            and set as false, once the command is executed.
            <para/>
            The indeterminate state of the pull to refresh view can also be tracked by the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AllowPullToRefresh = true;
            dataGrid.PullToRefreshView.PullToRefreshCommand = new Command(ExecutePullToRefreshCommand);
            
            private async void ExecutePullToRefreshCommand()
            {
               dataGrid.PullToRefreshView.IsIndeterminate = true;
               await Task.Delay(new TimeSpan(0, 0, 5));
               viewModel.ItemsSourceRefresh ();
               dataGrid.PullToRefreshView.IsIndeterminate = false;
            }
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.PullToRefreshCommand">
            <summary>
            Gets or sets the command to be executed when performing the pulling operation to refresh the grid. 
            This command will be fired upon performing the pulling operation for doing the refreshing operation.
            </summary>
            <value>
            The command to be executed when PullToRefresh action is performed.
            </value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides an option to refresh it when performing the pulling action. 
            <see cref="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.PullToRefreshCommand"/> will be fired to refresh 
            (add, delete or modify the underlying data) the grid. A busy indicator will be displayed to denote the 
            refreshing operation.
            <para/>
            The pull to refresh command can also be set using <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[        
            dataGrid.AllowPullToRefresh = true;
            dataGrid.PullToRefreshView.PullToRefreshCommand = new Command(ExecutePullToRefreshCommand);
            
            private async void ExecutePullToRefreshCommand()
            {
               this.dataGrid.IsBusy = true;
               await Task.Delay(new TimeSpan(0, 0, 5));
               viewModel.ItemsSourceRefresh ();
               this.dataGrid.IsBusy = false;
            }
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.Progress">
            <summary>
            Gets or sets the progress of pulling in the pull to refresh view can be tracked using this property. 
            Once, the pulling progress is reached 100 %, <see cref="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.PullToRefreshCommand"/> fires, executing the 
            command to be performed when the grid is pulled down for refreshing.
            </summary>
            <value>
            The progress of pulling in the pull to refresh view.
            </value>
            <remarks>
            The user can manually refresh the grid in runtime by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.PullToRefreshView.Progress"/> to 100.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.PullToRefreshView.Progress = 100;
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.PullToRefreshView.ExecuteRefreshCommand">
            <summary>
            Executes the pull to refresh command.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.PullToRefreshView.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layout the children in the <see cref="T:Syncfusion.SfDataGrid.XForms.PullToRefreshView"/>
            </summary>
            <param name="x">x position</param>
            <param name="y">y position</param>
            <param name="width">width value</param>
            <param name="height">height value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.PullToRefreshView.Dispose">
            <summary>
            Releases all resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.PullToRefreshView.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SfImageView">
            <summary>
            Represents a customized <see cref="T:Xamarin.Forms.View"/> that holds an image.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfImageView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfImageView.InvalidateMeasure">
            <summary>
            Method that is called to invalidate the layout of this <see cref="T:Xamarin.Forms.VisualElement"/>.
            Raises the <see cref="E:Xamarin.Forms.VisualElement.MeasureInvalidated"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SfLabel">
            <summary>
            A customized <see cref="T:Xamarin.Forms.View"/> that displays text in single-line as well as multi-lines.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfLabel.ClipProperty">
            <summary>
            Identifies the Clip bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfLabel.TextProperty">
            <summary>
            Identifies the Text bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfLabel.#ctor">
            <summary>
            Initializes a new instance of the SfLabel class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfLabel.Text">
            <summary>
            Gets or sets the text of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/>.
            </summary>
            <value>The text of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfLabel.Clip">
            <summary>
            Gets or sets the clip value of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/>.
            </summary>
            <value>The clip value of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfLabel"/>.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SfProgressBar">
            <summary>
            A customized <see cref="T:Xamarin.Forms.View"/> control that displays progress.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfProgressBar"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfProgressBar.IsIndeterminate">
            <summary>
            Gets or sets a value indicating whether the indeterminate state of the View.
            </summary>
            <value><b>True</b>, if the view is in indeterminate state, otherwise <b>false</b>.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl">
            <summary>
            A customized <see cref="T:Xamarin.Forms.View"/> control that provides a toggled value.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfSwitchControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfSwitchControl.CanToggle">
            <summary>
            Gets or sets a value indicating whether to allow / disallow toggle of a switch
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfSwitchControl.InvalidateMeasure">
            <summary>
            Method that is called to invalidate the layout of this <see cref="T:Xamarin.Forms.VisualElement"/>. Raises the <see cref="E:Xamarin.Forms.VisualElement.MeasureInvalidated"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SwipeView">
            <summary>
            Represents a swipe view in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SwipeView.VisibilityProperty">
            <summary>
            Identifies the Visibility bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SwipeView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SwipeView"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeView.Visibility">
            <summary>
            Gets or sets a value indicating whether the visibility of the swipe view.
            </summary>
            <value>A boolean value indicating the visibility of the swipe view.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SwipeView.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">The Content of the <see cref="T:Syncfusion.SfDataGrid.XForms.SwipeView"/>.</param>
            <returns>A boolean value to decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SwipeView.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call Xamarin.Forms.VisualElement.InvalidateMeasure() or not.
            </summary>
            <param name="child">The Content of the <see cref="T:Syncfusion.SfDataGrid.XForms.SwipeView"/>.</param>
            <returns>A boolean value to decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SwipeView.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the Content of the <see cref="T:Syncfusion.SfDataGrid.XForms.SwipeView"/>.
            </summary>
            <param name="x">A value representing the x coordinate of the child region bounding box.</param>
            <param name="y">A value representing the y coordinate of the child region bounding box.</param>
            <param name="width">A value representing the width of the child region bounding box.</param>
            <param name="height">A value representing the height of the child region bounding box.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl">
            <summary>
            Represents a record row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>A VirtualizingCellsControl represents a single data item in a bound data source. 
            Each row contains one cell per column in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, 
            and each cell displays a single value in the bound data item.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.RowStylingPreference">
            <summary>
             The below variable will store the style preference set by the customer in row style event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.SelectionColor">
            <summary>
            Gets or sets the selection color of the record row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.SelectionColorProperty">
            <summary>
            Identifies the SelectionColor bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.IsSelectedRow">
            <summary>
            Gets or sets a value indicating whether the VirtualizingCellsControl is selected.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.IsSelectedRowProperty">
            <summary>
            Identifies the IsSelectedRow bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.Clip">
            <summary>
            Gets or sets the clip value of the <see cref="T:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl"/>.
            </summary>
            <value>The clip value of the <see cref="T:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl"/>.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.ClipProperty">
            <summary>
            Identifies the Clip bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.ClipRect">
            <summary>
            Gets or sets the clip value of the record row.
            </summary>
            <value>The clip value of the record row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.Visibility">
            <summary>
            Gets or sets a value indicating whether the visibility of the record row.
            </summary>
            <value>A boolean value that indicates the visibility of the record row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.DataGrid">
            <summary>
            Gets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.IsSwipeCancelled">
            <summary>
            Gets or sets a value indicating whether to cancel swipe or not.
            </summary>
            <value><b>True</b> if the swipe is canceled, otherwise <b>false</b>. 
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.SwipeDirection">
            <summary>
            Gets or sets the direction of the swiping in the row.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.SwipeDirection"/> in the row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.SwipeOffset">
            <summary>
            Gets or sets the current offset of the row.
            </summary>
            <value>The current offset of the row.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when adding a child.
            </summary>
            <param name="child">The children of VirtualizingCellsControl.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when removing a child.
            </summary>
            <param name="child">The children of VirtualizingCellsControl.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the children of the VirtualizingCellsControl.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.OnClipChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the Clip property is changed.
            </summary>
            <param name="bindable">The VirtualizingCellsControl as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.LayoutChildElements(Xamarin.Forms.Rectangle,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo,System.Double,System.Double,System.Double,Syncfusion.SfDataGrid.XForms.IColumnElement,System.Double)">
            <summary>
            Layout each child element in the <see cref="T:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl"/>.
            </summary>
            <param name="rect">Rectangle value</param>
            <param name="line">VisibleLine Info</param>
            <param name="y">double value</param>
            <param name="height">height value</param>
            <param name="width">width value</param>
            <param name="column">IColumn Element</param>
            <param name="lineSize">size value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.LayoutItems(System.Boolean,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the children of a VirtualizingCellsControl.
            </summary>
            <param name="changed">A value that represents whether the child has changed.</param>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.GetColumnElementClipValue(Syncfusion.SfDataGrid.XForms.IColumnElement,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo,System.Double,System.Double,System.Double)">
            <summary>
            Gets the clip value for data column
            </summary>
            <param name="column">IColumn Element</param>
            <param name="line">Visible line info</param>
            <param name="lineSize">A value that represents the size of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
            <param name="y">A value that represents the y coordinate of the child</param>
            <returns>Returns the clip value for data column</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.LayoutSwipeView">
            <summary>
            Layout the swipe view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.AssignSwipeContent">
            <summary>
            Used to enable and disable the visibility for swipe view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.AddChild(Xamarin.Forms.View)">
            <summary>
            Used to add child for <see cref="T:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl"/> class.
            </summary>
            <param name="child">Child needs to be add in a view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.LayoutVirtualizingCellsControl">
            <summary>
            Layout the virtualizing cells control
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.UpdateVirtualizingCells(Syncfusion.SfDataGrid.XForms.GridDataRow)">
            <summary>
            Updates the VirtualizingCellsControl with the required func.
            </summary>
            <param name="dataRow">A func that gets the associated DataRow.</param>
            <param name="getVisibleinfo">A func that gets the visible line information of a column.</param>
            <param name="getColumnsize">A func that gets the line size of the child views.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.NeedToInValidateColumns">
            <summary>
            Method to invalidate all the visible columns in the VirtualizingCellsControl.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.NeedToInValdiateIndentColumns">
            <summary>
            Method to invalidate all the indent columns in VirtualizingCellsControl.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.ApplySwipeClip">
            <summary>
            Applies clipping to the VirtualizingCellsControl when swipe action is performed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.SwipeStarted">
            <summary>
            Clears swipe offset of previously swiped row and raises the swipe started event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.Swiping">
            <summary>
            Raises the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.Swiping"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.SwipeEnded">
            <summary>
            Decides whether to assign maximum swipe offset or minimum swipe offset for the swiped row when swipe ends and raises the swipe ended event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl">
            <summary>
            Represents a caption summary row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>A CaptionSummaryRowControl represents a single grouped data item in a bound data source. 
            Each row contains a covered cell in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> that displays
            a single value based on the grouped data items.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.#ctor">
            <summary>
            Initializes a new instance of the CaptionSummaryRowControl class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.ExpandedChanged">
            <summary>
            Represents a method that will handle the <see cref="F:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.IsExpandedChanged"/> of the caption summary row.
            </summary>
            <param name="isExpanded">A boolean value indicating whether the group is expanded.</param>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.GroupIcon">
            <summary>
            Gets or sets the sort icon based on the sort direction.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.IsSwipeCancelled">
            <summary>
            Gets or sets value indicate whether to cancel swipe or not.
            </summary>
            <value><b>True</b> if the swipe is canceled, otherwise <b>false</b>. 
            The default is <b>true</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded or collapsed.
            </summary>
            <value><b>True</b> if this instance is expanded, otherwise <b>false</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.OnIsExpandedChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the IsExpand property is changed.
            </summary>
            <param name="bindable">The GridCell as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the children of the VirtualizingCellsControl.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.LayoutChildElements(Xamarin.Forms.Rectangle,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo,System.Double,System.Double,System.Double,Syncfusion.SfDataGrid.XForms.IColumnElement,System.Double)">
            <summary>
            Layout each child element in the <see cref="T:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl"/>.
            </summary>
            <param name="rect">Rectangle value</param>
            <param name="line">VisibleLine Info</param>
            <param name="y">double value</param>
            <param name="height">height value</param>
            <param name="width">width value</param>
            <param name="column">IColumn Element</param>
            <param name="lineSize">size value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.UpdateVirtualizingCells(Syncfusion.SfDataGrid.XForms.GridDataRow)">
            <summary>
            Updates the VirtualizingCellsControl with the required func.
            </summary>
            <param name="dataRow">A func that gets the associated DataRow.</param>
            <param name="getVisibleinfo">A func that gets the visible line information of a column.</param>
            <param name="getColumnsize">A func that gets the line size of the child views.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.RaisePointerTouchUp">
            <summary>
            Raise when pointer is touchup
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.UpdateGroupIconSource">
            <summary>
            Gets the Sort Indicator for the column upon sorting.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.UpdateGroupIconBackground(Syncfusion.SfDataGrid.XForms.DataGridStyle)">
            <summary>
            Sets the GroupIcpon background color.
            </summary>
            <param name="style">DataGridStyle instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.InitializeGroupIcon">
            <summary>
            Initialize the group icon.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.CanShowExpanderIcon">
            <summary>
            Sets the boolean value indicates whether to show expander icon.
            </summary>
            <returns>Returns the boolean value indicates whether to show expander icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl">
            <summary>
            Represents a table summary row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>A TableSummaryRowControl represents the summary values of the bound data source based on the 
            <see cref="T:Syncfusion.Data.SummaryType"/>. Each row contains a covered cell in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> that displays 
            the summary value of the bound data source based on the <see cref="T:Syncfusion.Data.SummaryType"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl.IsSwipeCancelled">
            <summary>
            Gets or sets a boolean value indicating whether to cancel swipe or not.
            </summary>
            <value><b>True</b> if the swipe is canceled, otherwise, <b>false</b>. 
            The default is <b>true</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl.LayoutChildElements(Xamarin.Forms.Rectangle,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo,System.Double,System.Double,System.Double,Syncfusion.SfDataGrid.XForms.IColumnElement,System.Double)">
            <summary>
            Layout each child element in the <see cref="T:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl"/>.
            </summary>
            <param name="rect">Rectangle value</param>
            <param name="line">VisibleLine Info</param>
            <param name="y">double value</param>
            <param name="height">height value</param>
            <param name="width">width value</param>
            <param name="column">IColumn Element</param>
            <param name="lineSize">size value</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GroupSummaryRowControl">
            <summary>
            Represents a group summary row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>A GroupSummaryRowControl represents the summary values of the grouped records based on the 
            <see cref="T:Syncfusion.Data.SummaryType"/>. Each row contains a covered cell in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> that displays 
            the summary value of the grouped records based on the <see cref="T:Syncfusion.Data.SummaryType"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GroupSummaryRowControl.#ctor">
            <summary>
            Initializes a new instance of GroupSummaryRowControl class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GroupSummaryRowControl.IsSwipeCancelled">
            <summary>
            Gets or sets a boolean value indicating whether to cancel swipe or not.
            </summary>
            <value><b>True</b> if the swipe is canceled, otherwise, <b>false</b>. 
            The default is <b>true</b>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GroupSummaryRowControl.LayoutChildElements(Xamarin.Forms.Rectangle,Syncfusion.GridCommon.ScrollAxis.VisibleLineInfo,System.Double,System.Double,System.Double,Syncfusion.SfDataGrid.XForms.IColumnElement,System.Double)">
            <summary>
            Layout each child element in the <see cref="T:Syncfusion.SfDataGrid.XForms.GroupSummaryRowControl"/>.
            </summary>
            <param name="rect">Rectangle</param>
            <param name="line">VisibleLineInfo</param>
            <param name="y">double</param>
            <param name="height">double</param>
            <param name="width">double</param>
            <param name="column">IColumnElement</param>
            <param name="lineSize">double</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.HeaderCellControl">
            <summary>
            Represents the header row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>A HeaderCellControl represents a single data item in a bound data source. 
            The header row contains one cell per column in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, 
            and each cell displays property name of the bound data item or a customized header text.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.HeaderCellControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.HeaderCellControl"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.HeaderCellControl.IsSwipeCancelled">
            <summary>
            Gets or sets a boolean value indicating whether to cancel swipe or not.
            </summary>
            <value><b>True</b> if the swipe is canceled, otherwise, <b>false</b>. 
            The default value is <b>true</b>.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.LoadMoreView">
            <summary>
            Represents a customized <see cref="T:Xamarin.Forms.View"/> that loads new data items in runtime.
            </summary>
            <remarks>A LoadMoreView represents a customized <see cref="T:Xamarin.Forms.View"/> that is loaded
            either at the top or bottom based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMorePosition"/> property. 
            <para/>
            LoadMore option can be enabled in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control, by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowLoadMore"/> property 
            to <b>true</b> and by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> property. 
            When the LoadMore is enabled, the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides an option to load 
            a subset of data to its data source in the runtime using the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.LoadMoreView.LoadMoreCommand">
            <summary>
            Gets or sets the command to be executed when an end-user taps the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> to load new data items 
            in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The command to be executed when load more view is clicked.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to load more items in the datagrid, when the last data of the collection is reached, by executing the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> when an end-user taps the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowLoadMore = true;
            dataGrid.LoadMoreView.LoadMoreCommand = new Command(ExecuteLoadMoreCommand);
            
            private async void ExecuteLoadMoreCommand()
            {
                this.dataGrid.IsBusy = true;
                await Task.Delay(new TimeSpan(0, 0, 5));
                viewModel.LoadMoreItems();
                this.dataGrid.IsBusy = false;
            }
            ]]>
            </code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.InitLoadMore">
            <summary>
            Initializes the required properties for the LoadMoreView.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.UpdateLoadMoreStyle(Syncfusion.SfDataGrid.XForms.DataGridStyle)">
            <summary>
            Updates the style of the LoadMoreView.
            </summary>
            <param name="style">The DataGridStyle.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.CollapseView">
            <summary>
            Collapses the LoadMoreView asynchronously with animation.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.SetLoadViewText(System.String)">
            <summary>
            Sets the display text of the LoadMoreView.
            </summary>
            <param name="loadViewText">The display text.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.WireEvents">
            <summary>
            Wires the required events for the LoadMoreView.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.UnWireEvents">
            <summary>
            UnWires the required events for the LoadMoreView.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.LoadViewGesture_Tapped(System.Object,System.EventArgs)">
            <summary>
            Occurs when the LoadMoreView is tapped.
            </summary>
            <param name="sender">The LoadMoreView.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the children of the LoadMoreView.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.LoadMoreView.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CoveredCellInfo">
            <summary>
            A class that contains the information about the covered cells.
            </summary>
            <exclude/>
            Gets the right column index of the covered cell.
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.CoveredCellInfo"/> class.
            </summary>
            <param name="left">The left column index of the covered cell.</param>
            <param name="right">The right column index of the covered cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.CoveredCellInfo"/> class.
            </summary>
            <param name="left">The left column index of the covered cell.</param>
            <param name="right">The right column index of the covered cell.</param>
            <param name="name">The name of the covered cell.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.CoveredCellInfo"/> class.
            </summary>
            <param name="index">The row index of the covered cell.</param>
            <param name="left">The left column index of the covered cell.</param>
            <param name="right">The right column index of the covered cell.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.RowIndex">
            <summary>
            Gets the row index for the covered cell.
            </summary>
            <value>A value that determines the row index of the covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.Left">
            <summary>
            Gets the left column index of the covered cell.
            </summary>
            <value>A value that determines the left column index of the covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.Right">
            <summary>
            Gets a value that determines the right column index of the covered cell
            </summary>
            <value>A value that determines the right column index of the covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.Name">
            <summary>
            Gets the name of the column for the corresponding covered cell.
            </summary>
            <value>The name of the column for the corresponding covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.Width">
            <summary>
            Gets the width of the covered cell.
            </summary>
            <value>A value that determines the width of the covered cell.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.RowSpan">
            <summary>
            Gets the row span for the covered cell.
            </summary>
            <value>A value that determines the row span of the covered cell.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.CompareTo(System.Object)">
            <summary>
            Compares the given object to another object, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given object, 
            zero if this is equal to the given object, or a value greater than zero if this is greater than the given object.
            </summary>
            <param name="obj">An object to be compared with the current object.</param>
            <returns>An integer that indicates the relationship between the current object and the given object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.CompareTo(Syncfusion.SfDataGrid.XForms.CoveredCellInfo)">
            <summary>
            Compares the values in the given CoveredCellInfo object with the current instance, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given CoveredCellInfo, 
            zero if this is equal to the given CoveredCellInfo, or a value greater than zero if this is greater than the given CoveredCellInfo.
            </summary>
            <param name="coveredCellInfo">A CoveredCellInfo object which is to be compared with the current 
            instance.</param>
            <returns>An integer that indicates the relationship between the current instance and the given 
            CoveredCellInfo object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.Equals(System.Object)">
            <summary>
            Returns a boolean value indicating if the passed object is Equal to the current object. 
            Equality is defined as object equality for reference types and bitwise equality for value types 
            using a loader trick to replace Equals with EqualsValue for value types.
            </summary>
            <param name="obj">An object to be compared with the current object.</param>
            <returns>Returns a boolean value indicating whether the passed object is equal to the current object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.ToString">
            <summary>
            Returns a String which represents the object instance. The default for an object is to return the fully 
            qualified name of the class.
            </summary>
            <returns>The fully qualified name of the class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CoveredCellInfo.GetHashCode">
            <summary>
            GetHashCode is intended to serve as a hash function for this object. Based on the contents of the object, 
            the hash function will return a suitable value with a relatively random distribution over the various inputs.
            <para/>
            The default implementation returns the [....] block index for this instance. Calling it on the same object multiple 
            times will return the same value, so it will technically meet the needs of a hash function, but it's less than ideal.
            Objects (especially value classes) should override this method.
            </summary>
            <returns>Return a suitable value with a relatively random distribution over the various inputs based on the contents of the object.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataColumn">
            <summary>
            Represents one column of data in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>The DataColumn is the fundamental building block for creating the schema of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. 
            You build the schema by adding one or more DataColumn objects to the VisibleColumns.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumn.#ctor">
            <summary>
            Initializes a new instance of the DataColumn class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumn.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            View for the associated column element is created and initialized here.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
            <returns>The associated column element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumn.RefreshCellValue">
            <summary>
            Refreshes the cell value of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumn.UpdateColumn(System.Object,System.Boolean)">
            <summary>
            Updates the cell value and the binding context of the column element when scrolling vertically.
            Binding of the column element also updated in the renderer when scrolling horizontally.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="updateBinding">A boolean value to decide whether to update the binding of the ColumnElement.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataColumnBase">
            <summary>
            Serves as the abstract base class for <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> and provides methods and properties to it.
            </summary>
            <remarks>Implements <see cref="T:Syncfusion.SfDataGrid.XForms.IColumnElement"/> and hence defines properties that must be implemented 
            to generate grid column elements.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.#ctor">
            <summary>
            Initializes a new instance of the DataColumnBase class.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.DataColumnBase.PropertyChanged">
            <summary>
            EventHandler to notify that a property value has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.NeedToRefresh">
            <summary>
            Gets or sets a value indicating whether to refresh the column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.ClipRect">
            <summary>
            Gets or sets the clip value of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.IsEditing">
            <summary>
            Gets or sets a value indicating whether the DataColumn is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.EditingController">
            <summary>
            Gets or sets the instance for editing controller.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.ColumnDisplayBinding">
            <summary>
            Gets or sets the Binding based on the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.CellType">
            <summary>
            Gets or sets a value to denote the type of column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.DataRow">
            <summary>
            Gets or sets the DataRow.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.ColumnIndex">
            <summary>
            Gets the column index of the DataColumn.
            </summary>
            <value>A value that determines the column index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.RowIndex">
            <summary>
            Gets the row index of the DataColumn.
            </summary>
            <value>A value that determines the row index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.GridColumn">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> associated with the DataColumn.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> associated with the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.RowData">
            <summary>
            Gets the data object associated with the DataColumn.
            </summary>
            <value>An object that represents the underlying data associated with the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.CellValue">
            <summary>
            Gets the cell value of the column element associated with the DataColumn.
            </summary>
            <value>An object that represents the cell value DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.FormattedCellValue">
            <summary>
            Gets the formatted cell value of the column element associated with the DataColumn.
            </summary>
            <value>The formatted cell value of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Visibility">
            <summary>
            Gets or sets a value indicating whether the visibility of the column.
            </summary>
            <value>The boolean value indicating the visibility of the column.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Syncfusion#SfDataGrid#XForms#IElement#Element">
            <summary>
            Gets the column element associated with the DataColumn.
            </summary>
            <value>An object that represents the column element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Element">
            <summary>
            Gets the column element associated with the DataColumn.
            </summary>
            <value>An object that represents the column element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Syncfusion#SfDataGrid#XForms#IElement#Index">
            <summary>
            Gets the column index of the DataColumn.
            </summary>
            <value>A value that determines the column index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Index">
            <summary>
            Gets the column index of the DataColumn.
            </summary>
            <value>A value that determines the column index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Renderer">
            <summary>
            Gets the renderer associated with the column element.
            </summary>
            <value>The renderer associated with the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Syncfusion#SfDataGrid#XForms#IColumnElement#ColumnSpan">
            <summary>
            Gets the column span of the column element.
            </summary>
            <value>A value that determines the column span of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.ColumnSpan">
            <summary>
            Gets or sets the column span of the column element.
            </summary>
            <value>A value that determines the column span of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Syncfusion#SfDataGrid#XForms#IColumnElement#RowIndex">
            <summary>
            Gets the row index of the DataColumn
            </summary>
            <value>A value that determines the row index of the DataColumn.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataColumnBase.Syncfusion#SfDataGrid#XForms#IColumnElement#ClipRect">
            <summary>
            Gets or sets the clip value of the column.
            </summary>
            <value>An object that represents the clipping value of the DataColumn.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.CompareTo(System.Object)">
            <summary>
            Compares the given object to another object, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given object, 
            zero if this is equal to the given object, or a value greater than zero if this is greater than the given object.
            </summary>
            <param name="obj">An object to be compared with the current object.</param>
            <returns>An integer that indicates the relationship.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.UpdateIdnentCellStyle">
            <summary>
            Update indent cell style.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.OnRowDataChanged">
            <summary>
            Occurs when the RowData is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.OnColumnVisibilityChanged">
            <summary>
            Occurs when the ColumnVisibility is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.OnColumnIndexChanged">
            <summary>
            Occurs when the ColumnIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.OnCellValueChanged">
            <summary>
            Occurs when the CellValue is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.OnPropertyChanged(System.String)">
            <summary>
            Occurs when a property value is changed.
            </summary>
            <param name="propertyName">The property name which is changed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.HasTemplatedView">
            <summary>
            Check whether column has templated view or not.
            </summary>
            <b>True</b> if column has templated view, otherwise <b>false</b>.
            <returns>Returns a boolen value indicating whether column has templated view or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.InitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            Initializes the ColumnElement.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.GetDataColumn">
            <summary>
            Returns an instance of the DataColumnBase class.
            </summary>
            <returns>An instance of the DataColumnBase class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.RaisePointerTouchUp">
            <summary>
            Raises the pointer operation in the <see cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionController"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.RaiseLongPressedEvent">
            <summary>
            Raise the RaiseGridLongPressed method in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.RaiseDoubleTappedEvent">
            <summary>
            Raise the RaiseGridDoubleTapped method in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.UpdateCellStyle">
            <summary>
            Updates the cell style of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            View for the associated column element is created and initialized here.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
            <returns>The associated column element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.RefreshCellValue">
            <summary>
            Refreshes the cell value of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.UpdateColumn(System.Object,System.Boolean)">
            <summary>
            Updates the cell value and the binding context of the column element when scrolling vertically.
            Binding of the column element also updated in the renderer when scrolling horizontally.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="updateBinding">A boolean value to decide whether to update the Binding of the ColumnElement.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataColumnBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataRow">
            <summary>
            Represents a row of data in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>The DataRow and <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects are primary components of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            The <see cref="P:Syncfusion.SfDataGrid.XForms.RowGenerator.Items"/> collection represents the actual DataRow objects in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>,
            and the <see cref="P:Syncfusion.SfDataGrid.XForms.DataRowBase.VisibleColumns"/> collection contains the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects that describe the schema of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.#ctor">
            <summary>
            Initializes a new instance of the DataRow class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRow.GroupRecordIndex">
            <summary>
            Gets or sets the group record index.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.OnCreateRowElement">
            <summary>
            View for the associated row element is created and initialized here.
            </summary>
            <returns>The associated row element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.OnGenerateVisibleColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the column elements that occupy the view space for the first time.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the column elements that has to be arranged in the view.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.UpdateRow">
            <summary>
            Updates the data in the row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.UpdateRowStyles">
            <summary>
            Updates the row style applied to the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.CreateIndentColumn(System.Int32)">
            <summary>
            Creates the intend column
            </summary>
            <param name="index">indent index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.OnRowIndexChanged">
            <summary>
            Occurs when the RowIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.UpdateUnboundColumn">
            <summary>
            Update the value of UnboundColumn
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.ApplyRowStyle">
            <summary>
            Applies the appropriate background color for the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.CreateColumn(System.Int32,System.Int32)">
            <summary>
            Creates and returns a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> class initialized with the required values.
            </summary>
            <param name="index">The column index.</param>
            <param name="columnHeightIncrementation">The column height incrementation.</param>
            <returns>Returns a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> class initialized with the required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.UpdateColumn(Syncfusion.SfDataGrid.XForms.DataColumnBase,System.Int32)">
            <summary>
            Updates an associated <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object with the properties and values based on the new column when scrolling horizontally.
            </summary>
            <param name="dc">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object.</param>
            <param name="index">The column index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.UpdateRenderer(Syncfusion.SfDataGrid.XForms.DataColumnBase,Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Updates the renderer when a DataColumn is reused while scrolling horizontally.
            </summary>
            <param name="dataColumn">The <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> instance.</param>
            <param name="column">The associated <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</param>
            <returns>Returns <b>true</b> if the renderer is different for the reusing and reusable <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects,
            and <b>false</b> if renderer are same for both <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects.</returns>
            <remarks>When the method returns <b>true</b> then the column element has to be initialized and if returned <b>false</b>
            then just the Binding alone needs to be updated.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.UpdateRowInfo(System.Int32)">
            <summary>
            Updates the row information and the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects associated with the DataRow.
            </summary>
            <param name="rowIndex">The row index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.Indexer(System.Int32)">
            <summary>
            Gets the DataColumn if the cell with the passed index is available in VisibleColumns.
            </summary>
            <param name="index">The columnIndex of the dataColumn that has to be searched for.</param>
            <returns> Returns the DataColumn if the cell with the passed index is available in VisibleColumns.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRow.Indexer(System.Int32,System.Int32)">
            <summary>
            Gets a DataColumn if it is not in view and can be reused. Otherwise returns null.
            </summary>
            <param name="startColumnIndex">The starting column index of the DataColumn in the view.</param>
            <param name="endColumnIndex">The ending column index of the DataColumn in the view.</param>
            <returns>Returns a DataColumn if it is not in view and can be reused. Otherwise returns null.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataRowBase">
            <summary>
            Serves as the abstract base class for <see cref="T:Syncfusion.SfDataGrid.XForms.GridDataRow"/> and provides methods and properties to it.
            </summary>
            <remarks>Implements <see cref="T:Syncfusion.SfDataGrid.XForms.IRowElement"/> and hence defines properties that must be implemented to generate grid row elements.</remarks>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataRowBase.IsRowStylingApplied">
            <summary>
            The below field will set to true if row styling is applied for the corresponding row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.#ctor">
            <summary>
            Initializes a new instance of the DataRowBase class.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.DataRowBase.PropertyChanged">
            <summary>
            EventHandler to notify that a property value has changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.RowLevel">
            <summary>
            Gets or set a row level. 
            </summary>
            <remarks>
            By default row will be in row level 1.
            With Grouping the level will be based on GroupColumnDescriptions count. 
            </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.IsEditing">
            <summary>
            Gets or sets a value indicating whether the DataRow is in editing or not.
            </summary>
            <value><b>True</b> if the row element is in editing, otherwise, <b>false</b>. 
            The default value is <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.RowData">
            <summary>
            Gets or sets the data object associated with the DataRow.
            </summary>
            <value>An object that represents the underlying data associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.RowIndex">
            <summary>
            Gets the row index of the DataRow.
            </summary>
            <value>A value that determines the row index of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.RowType">
            <summary>
            Gets the row type (caption row, caption covered row or summary row and etc) of the DataRow.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.RowType"/> of the DataRow.</value>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.RowType"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.ClipRect">
            <summary>
            Gets or sets the clip value of the column.
            </summary>
            <value>An object that represents the clipping value of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.IsSelectedRow">
            <summary>
            Gets or sets a value indicating whether the DataRow is selected row.
            </summary>
            <value><b>True</b> if the row element is selected, otherwise, <b>false</b>. The default value is <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.IsEnsured">
            <summary>
            Gets or sets a value indicating whether the DataRow is ensured in view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Visibility">
            <summary>
            Gets or sets a value indicating whether the DataRow can be displayed.
            </summary>
            <value>A boolean value that indicates whether the DataRow can be displayed.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.VisibleColumns">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects associated with the DataRow.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.SelectionClipRect">
            <summary>
            Gets or sets the selection clip rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Syncfusion#SfDataGrid#XForms#IElement#Element">
            <summary>
            Gets the row element associated with the DataRow.
            </summary>
            <value>An object that represents the row element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Element">
            <summary>
            Gets the row element associated with the DataRow.
            </summary>
            <value>An object that represents the row element associated with the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Syncfusion#SfDataGrid#XForms#IElement#Index">
            <summary>
            Gets the row index of the DataRow.
            </summary>
            <value>A value that determines the row index of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Index">
            <summary>
            Gets the row index of the DataRow.
            </summary>
            <value>A value that determines the row index of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Syncfusion#SfDataGrid#XForms#IRowElement#RowRegion">
            <summary>
            Gets the row region of the DataRow.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/> of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.RowRegion">
            <summary>
            Gets or sets the row region of the DataRow.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/> of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Syncfusion#SfDataGrid#XForms#IRowElement#Level">
            <summary>
            Gets the row level of the DataRow.
            </summary>
            <value>An object that represents the row level of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Level">
            <summary>
            Gets the row level of the DataRow.
            </summary>
            <value>An object that represents the row level of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Syncfusion#SfDataGrid#XForms#IRowElement#RowType">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.RowType"/> of the DataRow.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.RowType"/> of the DataRow.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataRowBase.Syncfusion#SfDataGrid#XForms#IRowElement#ClipRect">
            <summary>
            Gets or sets the clip value of the DataRow.
            </summary>
            <value>An object that represents the clipping value of the DataRow.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.CompareTo(System.Object)">
            <summary>
            Compares the given object to another object, returning an integer that indicates the relationship.
            An implementation of this method must return a value less than zero if this is less than the given object, 
            zero if this is equal to the given object, or a value greater than zero if this is greater than the given object.
            </summary>
            <param name="obj">An object to be compared with the current object.</param>
            <returns>An integer that indicates the relationship.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.OnRowDataChanged">
            <summary>
            Occurs when the RowData is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.OnRowIndexChanged">
            <summary>
            Occurs when the row index is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.ApplyRowStyle">
            <summary>
            Applies the appropriate background color for the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.OnRowVisibilityChanged">
            <summary>
            Occurs when the row visibility is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.InitializeDataRow(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Initializes the DataRow.
            </summary>
            <param name="visibleColumnsLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.UpdateCellSelectionStyle">
            <summary>
            Updates the selection style for the associated <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.OnCreateRowElement">
            <summary>
            View for the associated row element is created and initialized here.
            </summary>
            <returns>The associated row element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.OnGenerateVisibleColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the column elements that occupy the view space for the first time.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the column elements that has to be arranged in the view.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.UpdateRowStyles">
            <summary>
            Updates the row style applied to the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.UpdateRow">
            <summary>
            Updates the data in the row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.OnPropertyChanged(System.String)">
            <summary>
            Occurs when a property value is changed.
            </summary>
            <param name="propertyName">The name of the property whose value is changed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.GetDataRow">
            <summary>
            Returns an instance of the DataRowBase class.
            </summary>
            <returns>An instance of the DataRowBase class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.GetVisibleColumns">
            <summary>
            Gets the list of column elements associated with the DataRow.
            </summary>
            <returns>Returns the list of column elements associated with the DataRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.Tolist(System.Collections.Generic.List{Syncfusion.SfDataGrid.XForms.DataColumnBase})">
            <summary>
            Converts the given list of <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumnBase"/> objects to an IList of <see cref="T:Syncfusion.SfDataGrid.XForms.IColumnElement"/>and returns it.
            </summary>
            <param name="items">The list of <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumnBase"/> objects.</param>
            <returns>An IList of <see cref="T:Syncfusion.SfDataGrid.XForms.IColumnElement"/> objects.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.CollapseColumn(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Collapses the visibility of the given DataColumn.
            </summary>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> instance.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.RowManipulation(Xamarin.Forms.Rectangle)">
            <summary>
            Manipulates the position of the DataRow based on the given rectangle value.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>The rectangle value for arranging the DataRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.RowManupulation(Xamarin.Forms.Rectangle)">
            <summary>
            Manipulates the position of the DataRow based on the given rectangle value.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>The rectangle value for arranging the DataRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataRowBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridDataRow">
            <summary>
            Serves as the abstract base class for <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> and provides methods and properties to it.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDataRow.DataGrid">
            <summary>
            Gets or sets a reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.CollapseColumns">
            <summary>
            Collapse columns in the VisibileColumn thsoe with ColumnIndex is less tahn zero and non ensured.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.Indexer(Syncfusion.SfDataGrid.XForms.CellType)">
            <summary>
            Gets the DataColumn if the cell with the passed CellType is available in VisibleColumns.
            </summary>
            <param name="cellType">The cellType of the dataColumn that has to searched for.</param>
            <returns>Returns the DataColumn if the cell with the passed CellType is available in VisibleColumns.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.GetRowVisibleLineInfo(System.Int32)">
            <summary>
            Gets the visible line information for the given row index.
            </summary>
            <param name="index">The row index.</param>
            <returns>The visible line information of the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.GetColumnVisibleLineInfo(System.Int32)">
            <summary>
            Gets the visible line information for the given column index.
            </summary>
            <param name="index">The column index.</param>
            <returns>The visible line information of the given column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.CreateRowHeaderColumn(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> class initialized with the required values and <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowHeaderCell"/> as column element.
            </summary>
            <param name="index">The column index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.CreateIndentColumn(System.Int32)">
            <summary>
            Creates the indent column.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.CollapseColumn(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Collapses the visibility of the given DataColumn.
            </summary>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> instance.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.GetColumnSize(System.Int32,System.Boolean)">
            <summary>
            Gets the size of the column at a given index.
            </summary>
            <param name="index">The column index.</param>
            <param name="lineNull">A boolean value denoting whether line corresponding to the given index is null.</param>
            <returns> Returns the size of the column at a given index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDataRow.GetVisibleLineOrigin">
            <summary>
            Gets the origin of the first visible column.
            </summary>
            <returns>Returns the origin of the first visible column.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.RowGenerator">
            <summary>
            A class that generates the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> instances in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>The <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> objects are primary row components in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            The items collection represents the collection of DataRow objects in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the RowGenerator class.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> instance.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.RowGenerator.Items">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> objects in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The collection of <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> objects in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.RowGenerator.Owner">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.RowGenerator.View">
            <summary>
            Gets the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> which refers to the collection view in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.RowGenerator.Container">
            <summary>
            Gets the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.VisualContainer"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.QueryRowHeight(System.Int32,System.Double@)">
            <summary>
            Raises the QueryRowHeight event and returns a boolean value denoting whether the event is handled.
            </summary>
            <param name="rowIndex">The index of the row which is to be queried.</param>
            <param name="height">The height value that is passed as out parameter.</param>
            <returns>A boolean value denoting whether the event is handled.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.UnloadUIElements(Syncfusion.SfDataGrid.XForms.DataRowBase,Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Unloads the given column element from the given row element.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> instance.</param>
            <param name="col">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> instance.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.OnItemsSourceChanged(System.Object,System.Object)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.CanRemoveColumn(Syncfusion.SfDataGrid.XForms.DataRowBase,System.Int32)">
            <summary>
            Method to decide whether the column at the given index can be removed.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> instance.</param>
            <param name="columnIndex">The column index.</param>
            <returns>A boolean value denoting whether the column at the given index can be removed.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.RemoveColumnbyIndex(Syncfusion.SfDataGrid.XForms.DataRowBase,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes a column at the given index from the given row.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> instance.</param>
            <param name="columnIndex">The column index.</param>
            <param name="endIndex">The end index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.ReOrderColumns(Syncfusion.SfDataGrid.XForms.DataRowBase,System.Int32,System.Int32)">
            <summary>
            Reorders the column elements in the given row.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object.</param>
            <param name="endIndex">The end index.</param>
            <param name="count">The number of columns removed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.UnloadRowHeader(Syncfusion.SfDataGrid.XForms.DataRowBase,Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Method to unload the row header from the given <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/>.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object.</param>
            <param name="dc">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.GetSummaryRow(System.Int32,Syncfusion.SfDataGrid.XForms.Position)">
            <summary>
            Determines the table summary row from the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.TableSummaryRows"/> based on the <see cref="T:Syncfusion.SfDataGrid.XForms.Position"/> and the row index passed.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="position">The table summary row position.</param>
            <returns>Returns the table summary row which is determined from the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.TableSummaryRows"/> based on the <see cref="T:Syncfusion.SfDataGrid.XForms.Position"/> and the row index passed.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.GetTableSummaryCount(Syncfusion.SfDataGrid.XForms.Position)">
            <summary>
            Gets the table summary rows count based on the <see cref="T:Syncfusion.SfDataGrid.XForms.Position"/>.
            </summary>
            <param name="position">The table summary position.</param>
            <returns>Returns the table summary rows count based on the <see cref="T:Syncfusion.SfDataGrid.XForms.Position"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.CreateHeaderRow(System.Int32,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> class initialized with the <see cref="T:Syncfusion.SfDataGrid.XForms.RowType"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.RowType.HeaderRow"/> 
            and <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.RowRegion.Header"/> and other required values.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="visibleColumns">The visible column line collection.</param>
            <returns>A new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> class initialized with the <see cref="T:Syncfusion.SfDataGrid.XForms.RowType"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.RowType.HeaderRow"/> 
            and <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.RowRegion.Header"/> and other required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.CreateOrReuseTableSummaryRow(Syncfusion.SfDataGrid.XForms.DataRowBase,System.Int32,Syncfusion.SfDataGrid.XForms.Position)">
            <summary>
            Create the table summary row and updates the required values for that table summary row.
            </summary>
            <param name="dataRow">The data row.</param>
            <param name="rowIndex">The row index.</param>
            <param name="position">The table summary row position.</param>
            <returns>Returns the updated table summary row with required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.CreateDataRow(System.Int32,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.SfDataGrid.XForms.RowRegion)">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> class initialized with the <see cref="T:Syncfusion.SfDataGrid.XForms.RowType"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.RowType.DefaultRow"/> 
            and <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.RowRegion.Body"/> and other required values.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="visibleColumns">The visible line collection.</param>
            <param name="region">The row region</param>
            <returns>A new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> class initialized with the <see cref="T:Syncfusion.SfDataGrid.XForms.RowType"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.RowType.DefaultRow"/> 
            and <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.RowRegion.Body"/> and other required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.UpdateGroupExpander(Syncfusion.SfDataGrid.XForms.SpannedDataRow,Syncfusion.Data.Group)">
            <summary>
            Method which helps to update the expander position and expanded state
            </summary>
            <param name="row">SpannedData Row</param>
            <param name="group">Group instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.GetCoveredColumnSize(System.Int32,System.Int32)">
            <summary>
            Gets the size of the covered cell.
            </summary>
            <param name="start">The start of the covered cell.</param>
            <param name="end">The end of the covered cell.</param>
            <returns>The size of the covered cell.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.CreateFooterRow(System.Int32,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Creates the footer row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="visibleColumns">The visible line collection.</param>
            <returns>A footer row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.UpdateRow(System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.XForms.DataRowBase},System.Int32,Syncfusion.SfDataGrid.XForms.RowRegion)">
            <summary>
            Updates a <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object with the properties and values based on the new row when scrolling vertically.
            </summary>
            <param name="rows">The collection of available rows for reusing.</param>
            <param name="rowIndex">The row index.</param>
            <param name="region">The row region.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.UpdateCoveredRow(Syncfusion.SfDataGrid.XForms.SpannedDataRow,Syncfusion.Data.NodeEntry)">
            <summary>
            Updates the given spanned data row.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataRow"/> object.</param>
            <param name="dataContext">The <see cref="T:Syncfusion.Data.NodeEntry"/> associated with the given <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataRow"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.CheckForSelection(Syncfusion.SfDataGrid.XForms.DataRowBase)">
            <summary>
            Checks whether the given <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> is a selected row.
            </summary>
            <param name="row">DataRowBase instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.UpdateDataRow(System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.XForms.DataRowBase},System.Int32,Syncfusion.SfDataGrid.XForms.RowRegion)">
            <summary>
            Updates the row information and the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> objects associated with the DataRow.
            </summary>
            <param name="rows">The collection of available rows for reusing.</param>
            <param name="rowIndex">The row index.</param>
            <param name="region">The row region.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.CollapseColumns(Syncfusion.SfDataGrid.XForms.DataRowBase)">
            <summary>
            Collapse column that has column index as -1;
            </summary>
            <param name="dataRow">The dataRow for which the columns to be collapsed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.InitializeIncrementalSource(System.Int32)">
            <summary>
            Initializes the incremental source.
            </summary>
            <param name="visibleRowCount">The visible rows count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.CanUpdateSource(System.Int32)">
            <summary>
            Method to check whether the source can be updated when performing incremental loading operation.
            </summary>
            <param name="endIndex">The end index.</param>
            <returns>A boolean value denoting whether the source can be updated when performing the incremental loading operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.UpdateIncrementalSource">
            <summary>
            Updates the incremental source.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.PreGenerateRows(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the row elements that occupy the view space for the first time.
            </summary>
            <param name="visibleRows">The visible row line collection.</param>
            <param name="visibleColumns">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.EnsureRows(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the row elements that has to be arranged in the view.
            </summary>
            <param name="visibleRows">The visible row line collection.</param>
            <param name="visibleColumns">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the visible columns in each row.
            </summary>
            <param name="visibleColumns">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.ColumnsInserted(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index.
            </summary>
            <param name="index">The index to insert the columns.</param>
            <param name="count">The column lines count to insert.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.ColumnsRemoved(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines starting from the given index.
            </summary>
            <param name="index">The index to remove the columns.</param>
            <param name="count">The column lines count to remove.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.ApplyColumnSizer(System.Double)">
            <summary>
            Apply column sizer calculations to the grid columns.
            </summary>
            <param name="viewSize">The size of the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.Indexer(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object if the row with the passed index is available in the Items collection.
            </summary>
            <param name="index">The row index.</param>
            <returns>Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object if the row with the passed index is available in the Items collection.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.Indexer(System.Int32,Syncfusion.SfDataGrid.XForms.RowRegion)">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object if the row with the passed index and <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/> is available in the Items collection.
            </summary>
            <param name="index">The row index.</param>
            <param name="region">The row region.</param>
            <returns> Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object if the row with the passed index and <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/> is available in the Items collection.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.Indexer(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object if it is not in view and can be reused. Otherwise returns null.
            </summary>
            <param name="actualStartIndex">The start index.</param>
            <param name="actualEndIndex">The end index.</param>
            <returns>Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object if it is not in view and can be reused. Otherwise returns null.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.ColumnIndexer(Syncfusion.SfDataGrid.XForms.DataRowBase,System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> if the column with the passed index is available in the <see cref="P:Syncfusion.SfDataGrid.XForms.DataRowBase.VisibleColumns"/>.
            </summary>
            <param name="row">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object.</param>
            <param name="index">The column index.</param>
            <returns>Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.DataColumn"/> if the column with the passed index is available in the <see cref="P:Syncfusion.SfDataGrid.XForms.DataRowBase.VisibleColumns"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.ColumnInserted(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index.
            </summary>
            <param name="index">The index to insert.</param>
            <param name="count">The column lines count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.ColumnRemoved(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines starting from the given index.
            </summary>
            <param name="index">The index to remove.</param>
            <param name="count">The column lines count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowGenerator.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn">
            <summary>
            Represents a spanned column of data in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataColumn.#ctor">
            <summary>
            Initializes a new instance of the SpannedDataColumn class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataColumn.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            View for the associated column element is created and initialized here.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="isInEdit">A boolean value denoting whether the DataColumn is in editing.</param>
            <returns>The associated column element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataColumn.RefreshCellValue">
            <summary>
            Refreshes the cell value of the associated column element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataColumn.UpdateColumn(System.Object,System.Boolean)">
            <summary>
            Updates the cell value and the binding context of the column element when scrolling vertically.
            Binding of the column element also updated in the renderer when scrolling horizontally.
            </summary>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="updateBinding">A boolean value to decide whether to update the binding of the ColumnElement.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataColumn.OnColumnVisibilityChanged">
            <summary>
            Occurs when the ColumnVisibility is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataColumn.HasTemplatedView">
            <summary>
            Check whether column has templated view or not.
            </summary>
            <returns>true or false</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SpannedDataRow">
            <summary>
            Represents a spanned row of data in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.#ctor">
            <summary>
            Initializes a new instance of the SpannedDataRow class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SpannedDataRow.CoveredCells">
            <summary>
            Gets the list of covered cells.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.OnCreateRowElement">
            <summary>
            View for the associated row element is created and initialized here.
            </summary>
            <returns>The associated row element.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.OnGenerateVisibleColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the column elements that occupy the view space for the first time.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.OnRowIndexChanged">
            <summary>
            Occurs when the RowIndex is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.ApplyRowStyle">
            <summary>
            Applies the appropriate background color for the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the column elements that has to be arranged in the view.
            </summary>
            <param name="visibleColumnLines">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.UpdateRowStyles">
            <summary>
            Updates the row style applied to the row element.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.UpdateRow">
            <summary>
            Updates the data in the spanned row.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.CollapseColumn(Syncfusion.SfDataGrid.XForms.DataColumnBase)">
            <summary>
            Creates the indent column.
            </summary>
            <param name="column">The DataBase column.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.GetColumnSize(System.Int32,System.Boolean)">
            <summary>
            Gets the size of the <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> at a given index.
            </summary>
            <param name="index">The column index.</param>
            <param name="lineNull">A boolean value denoting whether line corresponding to the given index is null.</param>
            <returns>Returns the size of the column</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.UpdateRowInfo(System.Int32)">
            <summary>
            Updates the row information and the <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> objects associated with the DataRow.
            </summary>
            <param name="rowIndex">The row index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.ResolveToGridColumnIndex(System.Int32)">
            <summary>
            Method to resolve the given index to grid column index.
            </summary>
            <param name="index">The index.</param>
            <returns>The resolved index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.CreateColumn(Syncfusion.SfDataGrid.XForms.CoveredCellInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates and returns a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> class initialized with the required values.
            </summary>
            <param name="cc">The covered cell information.</param>
            <param name="index">The index.</param>
            <param name="heightIncrementation">The height incrementation.</param>
            <param name="widthIncrementation">The width incrementation.</param>
            <returns>A new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> class initialized with the required values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.CheckAvailablity(System.Int32,System.Boolean)">
            <summary>
            Checks and returns a value based on the spanned data column availability.
            </summary>
            <param name="index">The index.</param>
            <param name="forIndentColumn">A boolean value denoting if the column is indent column.</param>
            <returns>Returns a value based on the spanned data column availability.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.UpdateColumn(Syncfusion.SfDataGrid.XForms.DataColumnBase,System.Int32)">
            <summary>
            Updates an associated <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> object with the properties and values based on the new column when scrolling horizontally.
            </summary>
            <param name="dc">A <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/> object.</param>
            <param name="index">The column index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.IsExpandedChanged(System.Boolean)">
            <summary>
            Callback method to handle group expand or collapse state change.
            </summary>
            <param name="isExpanded">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.CreateIndentColumn(System.Int32)">
            <summary>
            Creates indent column for specified index.
            </summary>
            <param name="index">The index to create the IndentColumn</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SpannedDataRow.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.BindingUtility">
            <summary>
            Represents an extension class that provides methods for creating <see cref="T:Xamarin.Forms.Binding"/> instances.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BindingUtility.CreateValueBinding(System.String)">
            <summary>
            Creates a value binding based on the given mapping name.
            </summary>
            <param name="mappingName">The mapping name of the column.</param>
            <returns>A binding instance created based on the mapping name of a <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BindingUtility.CreateDisplayBinding(Xamarin.Forms.Binding,Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Creates a display binding based on the given binding and <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.
            </summary>
            <param name="binding">A <see cref="T:Xamarin.Forms.Binding"/> instance of the column.</param>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> for which binding is created.</param>
            <returns>A binding instance created based on the given binding and <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BindingUtility.CreateEditBinding(Xamarin.Forms.Binding,Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Creates a edit binding based on the given binding and <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.
            </summary>
            <param name="source">A <see cref="T:Xamarin.Forms.Binding"/> instance.</param>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> for which binding is created.</param>
            <returns>A binding instance created based on the given binding and <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BindingUtility.CreateValueBinding(Xamarin.Forms.Binding,Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Creates a value binding based on the given binding and <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.
            </summary>
            <param name="binding">A <see cref="T:Xamarin.Forms.Binding"/> instance of the column.</param>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> for which binding is created.</param>
            <returns>A binding instance created based on the given binding and <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BindingUtility.CreateBinding(Xamarin.Forms.Binding)">
            <summary>
            Creates a binding based on the given binding.
            </summary>
            <param name="binding">A <see cref="T:Xamarin.Forms.Binding"/> instance.</param>
            <returns>A binding instance created based on the given binding.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryColumnDragging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryColumnDragging"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs"/> class.
            </summary>
            <param name="dataGrid">The source of the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs.From">
            <summary>
            Gets the index of the column that is being dragged.    
            </summary>
            <value>
            An index of the column being dragged.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs.To">
            <summary>
            Gets the index of the column that the drag view is currently placed over or dropped.
            </summary>
            <value>
            An index of the column that the drag view is currently placed over or dropped.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs.DraggingPosition">
            <summary>
            Gets the position of drag and drop view during a column drag-and-drop operation.
            </summary>
            <value>
            The <see cref="T:Xamarin.Forms.Point"/> that represents the position of drag and drop view during the column drag-and-drop operation.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs.Reason">
            <summary>
            Gets the current status (drag started or dragging or drag ended) when performing column drag-and-drop operation.
            </summary>
            <value>
            Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingReason"/> that specifies the current status (drag started or dragging or drag ended) when performing column drag-and-drop operation.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CultureConverter">
            <summary>
            A converter to apply different culture for the GridColumns.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CultureConverter.#ctor(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Initializes a new instance of the CultureConverter class.
            </summary>
            <param name="column">The GridColumn.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CultureConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats the given value based on the CultureInfo of the cacheColumn.
            </summary>
            <param name="value">The value to be formatted.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info based on which the given value is to be formatted.</param>
            <returns>Returns the formatted value based on the CultureInfo of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CultureConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back the given formatted value to the actual value.
            </summary>
            <param name="value">The formatted value.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info based on which the given value is formatted.</param>
            <returns>Returns the actual value from the formatted value.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridNumericColumnConverter">
            <summary>
            A converter to apply for numeric column.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridNumericColumnConverter.#ctor(Syncfusion.SfDataGrid.XForms.GridNumericColumn)">
            <summary>
            Initializes a new instance of the GridNumericColumnConverter class.
            </summary>
            <param name="column">The <see cref="T:Syncfusion.SfDataGrid.XForms.GridNumericColumn"/> which holds numeric Content in its cells.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridNumericColumnConverter.ConvertToFormat(Syncfusion.SfDataGrid.XForms.GridColumn,System.Decimal)">
            <summary>
            Convert column value to numeric format.
            </summary>
            <param name="column">The numeric column</param>
            <param name="columnValue">The column value.</param>
            <returns>The numeric format of the given column value.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridEditorColumnConverter">
            <summary>
            A converter to apply for editor columns.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditorColumnConverter.#ctor(Syncfusion.SfDataGrid.XForms.GridEditorColumn)">
            <summary>
            Initializes a new instance of the GridEditorColumnConverter class.
            </summary>
            <param name="column">The <see cref="T:Syncfusion.SfDataGrid.XForms.GridEditorColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditorColumnConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Formats the given value based on the CultureInfo of the cacheColumn.
            </summary>
            <param name="value">The value to be formatted.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info based on which the given value is to be formatted.</param>
            <returns>Returns the formatted value based on the CultureInfo of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditorColumnConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back the given formatted value to the actual value.
            </summary>
            <param name="value">The formatted value.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info based on which the given value is formatted.</param>
            <returns>Returns the actual value from the formatted value.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditorColumnConverter.ConvertToFormat(Syncfusion.SfDataGrid.XForms.GridColumn,System.Decimal)">
            <summary>
            Convert column value to string format.
            </summary>
            <param name="column">The column</param>
            <param name="columnValue">The column value.</param>
            <returns>The string value of the given column value.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter">
            <summary>
            Derived from <see cref="T:Xamarin.Forms.IValueConverter"/> which returns display text by reflection data based on the DisplayMemberPath and SelectedValuePath.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter.dynamicHelper">
            <summary>
            Helper to reflect dynamic types. This maintains the cache for faster reflection
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter.#ctor(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter"/> class.
            </summary>
            <param name="column">The GridColumn which has to undergo conversion.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts given value to display member path.
            </summary>
            <param name="value">The value to be converted.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info of the column.</param>
            <returns>Returns the display value based on the value of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back the display value to the actual value.
            </summary>
            <param name="value">The converted value.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info of the column.</param>
            <returns>Returns the actual value from the display value of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter.Convert(System.Object)">
            <summary>
            Converts selected value to display member path.
            </summary>
            <param name="selectedValue">Selected Value</param>
            <returns>Display value</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter.Dispose">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DisplayMemberConverter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridDateTimeColumnConverter">
            <summary>
            A converter to apply for date time column.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDateTimeColumnConverter.#ctor">
            <summary>
            Initializes a new instance of the GridDateTimeColumnConverter class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDateTimeColumnConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts given value to value member path.
            </summary>
            <param name="value">The value to be converted.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info of the column.</param>
            <returns>Returns the value based on the value of the cache column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDateTimeColumnConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back the given value to the actual value.
            </summary>
            <param name="value">The converted value.</param>
            <param name="targetType">The target type to be converted.</param>
            <param name="parameter">The converter parameter.</param>
            <param name="culture">The culture info of the column.</param>
            <returns>Returns the actual value from the given value of the cache column.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.RowRegion">
            <summary>
            Describes the possible values for row region. These values are used to update the row region for the row elements in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowRegion.Header">
            <summary>
            Specifies the header region which is frozen at the top of the view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowRegion.Footer">
            <summary>
            Specifies the footer region which is frozen at the bottom of the view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowRegion.Body">
            <summary>
            Specifies the body region which is scrollable in view.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.RowType">
            <summary>
            Describes the possible values for row type. These values are used to update the row type of the row elements in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowType.CaptionRow">
            <summary>
            Specifies the row type of the caption rows when <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> is <b>false</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowType.CaptionCoveredRow">
            <summary>
            Specifies the row type of the caption rows when <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> is <b>true</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowType.TableSummaryRow">
            <summary>
            Specifies the row type of the table summary rows when <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> is <b>false</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowType.TableSummaryCoveredRow">
            <summary>
            Specifies the row type of the table summary rows when <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> is <b>true</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowType.DefaultRow">
            <summary>
            Specifies the row type of the rows in the body region.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowType.HeaderRow">
            <summary>
            Specifies the row type of the rows in the header region.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowType.GroupSummaryRow">
            <summary>
            Specifies the row type of the group summary row when <see cref="F:Syncfusion.SfDataGrid.XForms.GridSummaryRow.showSummaryInRow"/> is <b>false</b>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.RowType.GroupSummaryCoveredRow">
            <summary>
            Specifies the row type of the group summary row when <see cref="F:Syncfusion.SfDataGrid.XForms.GridSummaryRow.showSummaryInRow"/> is <b>true</b>.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SelectionMode">
            <summary>
            Defines constants that specify the selections that are supported by a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SelectionMode.Single">
            <summary>
            Specifies the single selection mode that restricts selection for only one view at a time in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SelectionMode.Multiple">
            <summary>
            Specifies the multiple selection mode that allows selection for multiple views in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SelectionMode.SingleDeselect">
            <summary>
            Specifies the single selection mode that restricts selection for only one view at a time in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            In addition it also lets you de-select the selected row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SelectionMode.None">
            <summary>
            Specifies the none selection mode that restricts selection in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.PointerOperation">
            <summary>
            Describes the possible values of pointer operation. These values are used when updating selection in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.PointerOperation.TouchUp">
            <summary>
            Specifies the touch up action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.PointerOperation.DoubleTapped">
            <summary>
            Specifies the double tapped action.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridOperation">
            <summary>
            Describes the possible operations when selection has to be updated in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridOperation.Sorting">
            <summary>
            Specifies the sorting action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridOperation.Filtering">
            <summary>
            Specifies the filtering action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridOperation.Grouping">
            <summary>
            Specifies the grouping action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridOperation.RowHeaderChanged">
            <summary>
            Specifies the row header change.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.TapAction">
            <summary>
            Defines the constants that specify the different tap actions available for entering into edit mode in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.TapAction.OnTap">
            <summary>
            Editing is enabled at single tap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.TapAction.OnDoubleTap">
            <summary>
            Editing is enabled at double tap.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CollectionChangedReason">
            <summary>
            Describes the possible reasons for collection change when selection has to be updated in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CollectionChangedReason.RecordCollectionChanged">
            <summary>
            Specifies the record collection change.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CollectionChangedReason.SourceCollectionChanged">
            <summary>
            Specifies the source collection change.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CollectionChangedReason.SelectedItemsCollection">
            <summary>
            Specifies the SelectedItems collection change.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CollectionChangedReason.ColumnsCollection">
            <summary>
            Specifies the Columns collection change.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CollectionChangedReason.DataReorder">
            <summary>
            Specifies the data reorder change.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GroupingMode">
            <summary>
            Describes the possible grouping modes in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GroupingMode.Single">
            <summary>
            Specifies the single level grouping in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GroupingMode.Multiple">
            <summary>
            Specifies the multiple level grouping in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>Not yet implemented.</remarks>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SwipeDirection">
            <summary>
            Defines constants that specify the swipe directions.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SwipeDirection.Left">
            <summary>
            Specifies that the swiping is made in the left direction.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SwipeDirection.Right">
            <summary>
            Specifies that the swiping is made in the right direction.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode">
            <summary>
            Describes the possible AutoGenerateColumnsMode in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control based on which columns are auto generated.
            </summary>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#automatic-columns-generation"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode.None">
            <summary>
            Keep the columns that are manually defined in <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode.Reset">
            <summary>
            Creates columns for all properties in a data source, retaining the columns added by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode.ResetAll">
            <summary>
            Creates columns for all properties in a data source, removing all the old columns.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode.RetainOld">
            <summary>
            Creates columns for all properties in a data source, if the grid doesn't contain any user defined column, else retains only the user defined columns.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode.SmartReset">
            <summary>
            Creates columns for all properties in a data source, retaining the columns added by the user and the columns with <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> identical to the properties in the binded data source.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ColumnSizer">
            <summary>
            Defines constants that specify how elements in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> are sized.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ColumnSizer.None">
            <summary>
            The unit of measure is a fixed value.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ColumnSizer.LastColumnFill">
            <summary>
            The unit of measure is based on the default column size with last column fill.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ColumnSizer.Star">
            <summary>
            The unit of measure is a weighted proportion of the available space.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ColumnSizer.Auto">
            <summary>
            The unit of measure is based on the maximum Content size of either the header or record data.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.LoadMoreViewPosition">
            <summary>
            Defines the different positions that the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> can have in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.LoadMoreViewPosition.Bottom">
            <summary>
            Positions the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> at the bottom of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.LoadMoreViewPosition.Top">
            <summary>
            Positions the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> at the top of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> below the header.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ScrollingMode">
            <summary>
            Describes the possible scrolling modes that a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control has.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ScrollingMode.Pixel">
            <summary>
            Lets the grid to scroll based on pixel values.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ScrollingMode.Line">
            <summary>
            Lets the grid to scroll based on line values.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ScrollingMode.PixelLine">
            <summary>
            Lets the grid to scroll based on pixel values and auto scrolls to the start or end or a row or column based on the clipped value.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SortTapAction">
            <summary>
            Defines the constants that specify the different tap actions available for applying sorting in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SortTapAction.SingleTap">
            <summary>
            Specifies that sorting happens at a single tap.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SortTapAction.DoubleTap">
            <summary>
            Specifies that sorting happens at a double tap.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridLinesVisibility">
            <summary>
            Describes the constants based on which the border lines are drawn for SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridLinesVisibility.Both">
            <summary>
            Specifies that both vertical and horizontal borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridLinesVisibility.Horizontal">
            <summary>
            Specifies that only row horizontal borders are visible
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridLinesVisibility.Vertical">
            <summary>
            Specifies that only vertical borders are visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridLinesVisibility.None">
            <summary>
            Specifies that borders are not drawn.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ExpressionError">
            <summary>
            Defines the constants that specify the possible expression error in <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExpressionError.None">
            <summary>
            No expression error.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExpressionError.MissingRightQuote">
            <summary>
            Specifies that error will be occurred when the right quotation is missed in expression.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExpressionError.MismatchedParentheses">
            <summary>
            Specifies that error will be occurred when the expression has mismatched parentheses.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExpressionError.CannotCompareDifferentTypes">
            <summary>
            Specifies that error will be occurred when the expression has compared between mismatched types.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExpressionError.UnknownOperator">
            <summary>
            Specifies that error will be occurred when the expression contains unknown operator.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExpressionError.NotAValidFormula">
            <summary>
            Specifies that error will be occurred when the expression has an invalid formula.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExpressionError.ExceptionRaised">
            <summary>
            Specifies that will be raised when the expression has unknown exception.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingReason">
            <summary>
            Describes the various reasons for column dragging operation.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingReason.DragStarted">
            <summary>
            Specifies the dragging operation is initialized on the column.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingReason.Dragging">
            <summary>
            Defines the column is being dragged in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingReason.DragEnded">
            <summary>
            Defines the column dragging operation is ended.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryRowDraggingReason">
            <summary>
            Describes the various reason for row dragging operation.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.QueryRowDraggingReason.DragStarted">
            <summary>
            Specifies the dragging operation is initialized on the row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.QueryRowDraggingReason.Dragging">
            <summary>
            Defines the row is being dragged in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.QueryRowDraggingReason.DragEnded">
            <summary>
            Defines the row dragging operation is ended.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.VerticalOverScrollMode">
            <summary>
            Defines constants that specify the effects that are supported by a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control when vertically over-scrolled.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VerticalOverScrollMode.Bounce">
            <summary>
            Specifies that bounce effect is applied when vertically over-scrolled.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VerticalOverScrollMode.None">
            <summary>
            Specifies that no effect is applied when vertically over-scrolled.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridQueryBounds">
            <summary>
            Defines constant that specify whether the column width or height need to be calculated based on the cell Content.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridQueryBounds.Width">
            <summary>
            Specifies that the column width has to be calculated based on cell Content. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridQueryBounds.Height">
            <summary>
            Specifies that the column height has be calculated based on cell Content. 
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.EditorSelectionBehavior">
            <summary>
            Defines the constants that indicates the position of cursor and selection in edit element when entering edit mode.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.EditorSelectionBehavior.SelectAll">
            <summary>
            Selects all Content in the edit element.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.EditorSelectionBehavior.MoveLast">
            <summary>
            Moves the cursor to the last position in the edit element.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ProgressStates">
            <summary>
            Defines constants that specify the possible progressing states of resizing operation in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ProgressStates.Starting">
            <summary>
            Defines that the resizing operation is about to Start.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ProgressStates.Progressing">
            <summary>
            Defines the column is being resized currently in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ProgressStates.Completed">
            <summary>
            Defines the column resizing operation is ended.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Position">
            <summary>
            Defines the constants that specify whether the table summary row is positioned at the top or bottom of the SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Position.Bottom">
            <summary>
            Specifies that the table summary row is positioned at the bottom.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.Position.Top">
            <summary>
            Specifies that the table summary row is positioned at the top.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ResizingMode">
            <summary>
            Defines the constants that specify whether to resize the column on touch-up or touch moved action.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ResizingMode.OnTouchUp">
            <summary>
            Specifies that resizing happens on touch-up.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ResizingMode.OnMoved">
            <summary>
            Specifies that resizing happens as the resizing indicator moves.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.UnboundActions">
            <summary>
            Defines the constants that specify the possible actions for Unbound column or Unbound row in SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.UnboundActions.QueryData">
            <summary>
            Specifies the action that the value for Unbound column or Unbound row being queried from the user.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.UnboundActions.CommitData">
            <summary>
            Specifies the action that the value is being committed in Unbound column or Unbound row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.UnboundActions.PasteData">
            <summary>
            Specifies the action that the value is being pasted in Unbound column or Unbound row.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.StylePreference">
            <summary>
            Defines the constants that specify whether the selection should be applied above the cell/row style or both selection and cell/row style should be visible.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.StylePreference.Selection">
            <summary>
            Specifies that the selection should be applied above the applied cell/row style
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.StylePreference.StyleAndSelection">
            <summary>
            Specifies that both selection and cell/row style should be visible
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.StylePreference.RowStyleAndSelection">
            <summary>
            Specifies that both selection and row style should be visible
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CellType">
            <summary>
            Describes the possible values for column type. These values are used to update the column type of the column elements in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CellType.HeaderCell">
            <summary>
            Specifies the GridHeaderCell to show the column header.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CellType.IndentCell">
            <summary>
            Specifies the GridIndentCell that is used to display the group indent.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CellType.GridCell">
            <summary>
            Specifies the GridCell that is used to display the column.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CellType.RowHeaderCell">
            <summary>
            Specifies the RowHeader that is used to indicate the status of row.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CellType.CaptionSummaryCell">
            <summary>
            Specifies the GridCaptionSummaryCell that is used to display the caption of grouped column.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CellType.TableSummaryCell">
            <summary>
            Specifies the GridTableSummaryCell that used to display the summaries of the DataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.CellType.GroupSummaryCell">
            <summary>
            Specifies the GridGroupSummaryCell that used to display the summary of the grouped column.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ColumnPropertyChanged">
            <summary>
            Represents the method that will handle the property changes in grid columns.
            </summary>
            <param name="column">A grid column whose property is changed.</param>
            <param name="property">The name of the property that is changed.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGeneratingColumn"/> event of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGeneratingColumn"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnEventArgs.#ctor(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnEventArgs"/> class.
            </summary>
            <param name="column">The column that is being generated.</param>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGeneratingColumn"/> event.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnArgs.#ctor(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnArgs"/> class.
            </summary>
            <param name="column">The column that is being generated.</param>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnArgs.Column">
            <summary>
            Gets or sets column that is being generated.
            </summary>
            <value>The grid column being generated.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridViewCreatedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridViewCreated"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridLoadedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLoaded"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridLoadedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridHandledEventArgs">
            <summary>
            Serves as a base class for the event argument classes in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.GridEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHandledEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridHandledEventArgs class using the specified source.
            </summary>
            <param name="originalSource">The original source of the event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridHandledEventArgs.#ctor(System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the GridHandledEventArgs class using the specified handled value and original source.
            </summary>
            <param name="handled">A boolean value specifying whether the event is handled.</param>
            <param name="originalSource">The original source of the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridHandledEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event is handled.
            </summary>
            <value><b>True</b> if the event has been handled, otherwise <b>false</b>. The default value is false.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridEventArgs">
            <summary>
            Serves as a base class for the event argument classes in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridEventArgs class using the specified sender.
            </summary>
            <param name="originalSender">The original sender that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEventArgs.OriginalSender">
            <summary>
            Gets the original reporting source that raising this event
            </summary>
            <value>The reporting source that raises the event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridCancelEventArgs">
            <summary>
            Serves as a base class for the event argument classes that can cancel the event handling in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <seealso cref="T:System.ComponentModel.CancelEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridCancelEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridCancelEventArgs class with the original sender.
            </summary>
            <param name="originalSender">The original reporting source that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridCancelEventArgs.OriginalSender">
            <summary>
            Gets the original reporting source that raising this event
            </summary>
            <value>The reporting source that raises the event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridViewCreatedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridViewCreated"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridViewCreatedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the GridViewCreatedEventArgs class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridLoadedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLoaded"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridLoadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the GridLoadedEventArgs class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryConditionalStyleEventArgs">
            <summary>
            Serves as a base class for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryCellStyle"/> and <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowStyle"/> events args classes.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.QueryConditionalStyleEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.QueryConditionalStyleEventArgs"/> class.
            </summary>
            <param name="originalSender">SfDataGrid instance</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryConditionalStyleEventArgs.RowIndex">
            <summary>
            Gets the row index of the current data row.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryConditionalStyleEventArgs.RowData">
            <summary>
            Gets the row data of the current data row.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryCellStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryCellStyle"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.QueryCellStyleEventArgs.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the QueryCellStyleEventArgs class.
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryCellStyleEventArgs.Column">
            <summary>
            Gets the current grid column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryCellStyleEventArgs.ColumnIndex">
            <summary>
            Gets the current column index.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryCellStyleEventArgs.CellValue">
            <summary>
            Gets the current cell value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryCellStyleEventArgs.Style">
            <summary>
            Gets or sets the properties defined in the <see cref="T:Syncfusion.SfDataGrid.XForms.CellStyle"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryRowStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowStyle"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.QueryRowStyleEventArgs.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the QueryRowStyleEventArgs class.
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowStyleEventArgs.Style">
            <summary>
            Gets or sets the properties defined in the <see cref="T:Syncfusion.SfDataGrid.XForms.RowStyle"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GroupChangingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanding"/> and <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsing"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.XForms.GroupChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GroupChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanded"/> and <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsed"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.SfDataGrid.XForms.GroupChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GroupChangingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanding"/> and <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsing"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GroupChangingEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GroupChangingEventArgs class.
            </summary>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GroupChangingEventArgs.Group">
            <summary>
            Gets the corresponding group that is being expanded or collapsed in view.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.Group"/> that is being changed in view.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GroupChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanded"/> and <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsed"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GroupChangedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GroupChangedEventArgs class.
            </summary>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GroupChangedEventArgs.Group">
            <summary>
            Gets the corresponding group that is expanded or collapsed in view.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.Group"/> that is being changed in view.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridIndexResolver">
            <summary>
            Represents an extension class that provides resolving methods for a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveToRecordIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved record index for the given row index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="rowIndex">The index of the row.</param>
            <returns>The resolved record index of the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveToDraggingIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved dragging index for the given row index.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="rowIndex">The row index.</param>
            <returns>The resolved dragging index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveToRowIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved row index for the given record index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="recordIndex">The record index whose row index is to be obtained.</param>
            <returns>The resolved row index form the given record index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveStartIndexOfGroup(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.Data.Group)">
            <summary>
            Resolves the start index of the specified group.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="group">Specifies the group to get its corresponding start index.</param>
            <returns>The start index of the specified group; returns -1; if the column is not grouped in SfDataGrid</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveStartIndexBasedOnPosition(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the resolved start index based on the position of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <returns>The resolved start index based on the position of the SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveToGridVisibleColumnIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved visible column index for the given column index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="columnIndex">The column index whose visible column index is to be determined.</param>
            <returns>The resolved visible column index for the given column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveToScrollColumnIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved scroll column index for the given column index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="gridColumnIndex">The column index which is to be resolved to the scroll column index.</param>
            <returns>The resolved scroll column index for the given column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveToStartColumnIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the resolved start column index in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <returns>The resolved start column index of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.GetHeaderIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the header index in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <returns>The header index of the SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.GetVisibleHeaderCount(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the visible header rows count.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <returns>The visible header count.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveToRowIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Object)">
            <summary>
            Gets the resolved row index for the given rowData.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="rowData">The row data whose row index is to be obtained.</param>
            <returns>The resolved row index of the given row data.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridIndexResolver.ResolveToResizingColumnIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the resolved resizing column index for the given column index based on DataGrid's Column collection.
            </summary>
            /// <param name="dataGrid">The SfDataGrid.</param>
            <param name="index">The column index based on DataGrid's Column collection.</param>
            <returns>The resolved resizing column index.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridTappedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridTapped"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridLongPressedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLongPressed"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridDoubleTapped"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridTappedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridTapped"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTappedEventArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridTappedEventArgs class with the specified row column index and row data.
            </summary>
            <param name="rowColIndex">The row column index for the tapped position.</param>
            <param name="rowData">The underlying data of the tapped row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridLongPressedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLongPressed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridLongPressedEventArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridLongPressedEventArgs class with the specified row column index and row data.
            </summary>
            <param name="rowColIndex">The row column index of the long pressed position.</param>
            <param name="rowData">The underlying data of the long pressed row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridDoubleTapped"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the GridDoubleTappedEventArgs class with the specified row column index and row data.
            </summary>
            <param name="rowColIndex">The row column index for the double tapped position.</param>
            <param name="rowData">The underlying data of the double tapped row.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridTappedEventsArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridTapped"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTappedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridTappedEventsArgs"/> class.
            </summary>
            <param name="rowColIndex">The row column index for the tapped position.</param>
            <param name="rowData">The underlying data of the tapped row.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridTappedEventsArgs.RowColumnIndex">
            <summary>
            Gets the row column index at the tapped position.
            </summary>
            <value>An object that represents the row and column index at the tapped position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridTappedEventsArgs.RowData">
            <summary>
            Gets the row data of the tapped row.
            </summary>
            <value>An object that represents row data of the tapped row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridLongPressedEventsArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLongPressed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridLongPressedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridLongPressedEventsArgs"/> class.
            </summary>
            <param name="rowColIndex">The row column index for the long pressed position.</param>
            <param name="dataContext">The underlying data of the long pressed row.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridLongPressedEventsArgs.RowColumnIndex">
            <summary>
            Gets the row column index at the long pressed position.
            </summary>
            <value>An object that represents the row and column index at the long pressed position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridLongPressedEventsArgs.RowData">
            <summary>
            Gets the row data of the long pressed row.
            </summary>
            <value>An object that represents row data of the long pressed row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventsArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridDoubleTapped"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventsArgs.#ctor(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventsArgs"/> class.
            </summary>
            <param name="rowColIndex">The row column index for the double tapped position.</param>
            <param name="rowData">The underlying data of the double tapped row.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventsArgs.RowColumnIndex">
            <summary>
            Gets the row column index at the double tapped position.
            </summary>
            <value>An object that represents the row and column index at the double tapped position.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventsArgs.RowData">
            <summary>
            Gets the row data of the double tapped row.
            </summary>
            <value>An object that represents row data of the double tapped row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSelectionChangingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanging"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionChangedEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSelectionChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanged"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionChangingEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSelectionChangingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanging"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionChangedEventArgs"/>
            <seealso cref="T:System.ComponentModel.CancelEventArgs"/>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionChangingEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridSelectionChangingEventArgs class using the specified source.
            </summary>
            <param name="originalSource">The original source that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSelectionChangingEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items to be selected.
            </summary>
            <value>A list of items to be selected.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSelectionChangingEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items to be unselected.
            </summary>
            <value>A list of items to be unselected.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSelectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanged"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionChangingEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionChangedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GridSelectionChangedEventArgs class using the specified source.
            </summary>
            <param name="originalSource">The original source that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSelectionChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were selected.
            </summary>
            <value>A list of items selected.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSelectionChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unselected.
            </summary>
            <value>A list of items unselected.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IncrementalList`1">
            <summary>
            The list that implements <see cref="T:Syncfusion.Data.ISupportIncrementalLoading"/> to load the data for SfDataGrid incrementally.
            </summary>
            <typeparam name="T">The type of data object.</typeparam>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.#ctor(System.Action{System.UInt32,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.IncrementalList`1"/> class.
            </summary>
            <param name="loadMoreItemsFunc">An action to be executed to load items to the bound collection.</param>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.IncrementalList`1.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IncrementalList`1.MaxItemCount">
            <summary>
            Gets or sets the maximum items count that the bound collection can have. 
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IncrementalList`1.MaxItemsCount">
            <summary>
            Gets or sets the maximum items count that the bound collection can have. 
            </summary>
            <value>The maximum items count that the bound collection can have.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IncrementalList`1.HasMoreItems">
            <summary>
            Gets a value indicating whether it supports incremental loading implementations.
            </summary>
            <value>A sentinel value that supports incremental loading implementations.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Count">
            <summary>
            Gets the items count of the bound collection.
            </summary>
            <value>The items count of the bound collection.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IncrementalList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the given source is read only.
            </summary>
            <value>A value indicating whether the given source is read only.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.LoadMoreItemsAsync(System.UInt32)">
            <summary>
            Loads more items asynchronously to the data grid.
            </summary>
            <param name="count">The number of items to be added.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements 
            in the bound collection that extends from the specified index to the last element.
            </summary>
            <param name="item">The object to locate in the bound collection. The value can be null for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the range of elements in the bound collection that 
            extends from index to the last element, if found; otherwise, –1.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element into the bound collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">: index is less than 0.-or-index is greater than <see cref="P:System.Collections.Generic.List`1.Count"/>"</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the bound collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">: index is less than 0.-or-index is equal to or greater than bound collection count.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Add(`0)">
            <summary>
            Adds an object to the end of the bound collection.
            </summary>
            <param name="item">The object to be added to the end of the bound collection. The value can be null for reference types.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Clear">
            <summary>
            Removes all elements from the bound collection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Contains(`0)">
            <summary>
            Determines whether an element is in the bound collection.
            </summary>
            <param name="item">The object to locate in the bound collection. The value can be null for reference types.</param>
            <returns><b>True</b> if item is found in the bound collection, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Method that copies the entire bound collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from bound collection. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Remove(`0)">
            <summary>
            Removes the specified item from the collection. 
            </summary>
            <param name="item">The item to be removed</param>
            <returns>A boolean value denoting whether the given item is removed or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.GetEnumerator">
            <summary>
            Gets the enumerator of the internal list.
            </summary>
            <returns>Returns the enumerator of the internal list.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator of the internal list.
            </summary>
            <returns>Returns the enumerator of the internal list.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.RaiseCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raise the collection changed event
            </summary>
            <param name="args">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.NotifyOfInsertedItems(System.Int32,System.Int32)">
            <summary>
            Notifies whether the new items are inserted in the collection
            </summary>
            <param name="baseIndex">index value</param>
            <param name="count">number of items</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.LoadItems(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the data objects incrementally. 
            </summary>
            <param name="items">Specifies the collection of data items to be added incrementally.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IncrementalList`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IMeasureSize">
            <summary>
            Defines methods that must be implemented to measure the dimensions of a view.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IMeasureSize.CalculateWidth(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.GridColumn,System.String,System.String,System.Double,Xamarin.Forms.FontAttributes)">
            <summary>
            Calculate the width of the view in the SfDataGrid based on the given values.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
            <param name="column">The corresponding grid column.</param>
            <param name="text">The text in the cell.</param>
            <param name="font">The type of the font.</param>
            <param name="fontSize">The font size of the text.</param>
            <param name="attribute">The font attribute of the text.</param>
            <returns>The width of the view in the SfDataGrid based on the given values.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IMeasureSize.CalculateWidth(Syncfusion.SfDataGrid.XForms.SfDataGrid,Xamarin.Forms.View)">
            <summary>
            Calculates the width of the given view in the SfDataGrid.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
            <param name="view">The view to be measured.</param>
            <returns>The width of the given view in the SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IMeasureSize.CalculateHeight(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.GridColumn,System.String,System.String,System.Double,Xamarin.Forms.FontAttributes)">
            <summary>
            Calculate the height of the view in the SfDataGrid based on the given values.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
            <param name="column">The corresponding grid column.</param>
            <param name="text">The text in the cell.</param>
            <param name="font">The type of the font.</param>
            <param name="fontSize">The font size of the text.</param>
            <param name="attribute">The font attribute of the text.</param>
            <returns>The height of the view in the SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IMeasureSize.CalculateHeight(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.GridColumn,Xamarin.Forms.View)">
            <summary>
            Calculate the height of the given view in the SfDataGrid.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
            <param name="column">The column containing the view.</param>
            <param name="view">The view to be measured.</param>
            <returns>The height of the given view in the SfDataGrid.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryRowHeightEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowHeight"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.RowHeightManager">
            <summary>
            Represents a class that manages the row heights in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.#ctor">
            <summary>
            Initializes a new instance of the RowHeightManager class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.Contains(System.Int32,Syncfusion.SfDataGrid.XForms.RowRegion)">
            <summary>
            Method to check if the given row index is available in the given <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/>.
            </summary>
            <param name="index">The row index to be found in the given row region.</param>
            <param name="region">The row region in which the given row index is to be found.</param>
            <returns>A boolean value denoting whether the given index is available in the given row region.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.SetDirty(System.Int32)">
            <summary>
            Sets the row at the given row index as dirty to refresh it in view.
            </summary>
            <param name="rowIndex">The row index to be refreshed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.Reset">
            <summary>
            Resets the ranges of rows in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.ResetBody">
            <summary>
            Resets the body range in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.ResetFooter">
            <summary>
            Resets the footer range in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.UpdateBody(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the rows in the body region in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="index">The Start index to update.</param>
            <param name="count">The number of items to be updated.</param>
            <param name="action">The collection changed action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.UpdateRegion(System.Int32,System.Int32,Syncfusion.SfDataGrid.XForms.RowRegion)">
            <summary>
            Updates the rows in the given index and row region.
            </summary>
            <param name="start">The Start index to update.</param>
            <param name="end">The End index to update.</param>
            <param name="region">The row region to be updated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.GetRange(System.Int32)">
            <summary>
            Gets the range of the rows based on the given index.
            </summary>
            <param name="index">The index.</param>
            <returns>Returns the range.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.RowHeightManager.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Range">
            <summary>
            Represents a class that specifies the range of the rows belonging to a <see cref="T:Syncfusion.SfDataGrid.XForms.RowRegion"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Range.#ctor">
            <summary>
            Initializes a new instance of the Range class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Range.IsEmpty">
            <summary>
            Gets a value indicating whether the range is empty.
            </summary>
            <value>A boolean value denoting whether the range is empty.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryRowHeightEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowHeight"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.GridHandledEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.QueryRowHeightEventArgs.#ctor(System.Int32,System.Double,System.Object)">
            <summary>
            Initializes a new instance of the QueryRowHeightEventArgs class using the specified index, height and source.
            </summary>
            <param name="index">The index of the row for which the height is queried.</param>
            <param name="height">The queried height of the row.</param>
            <param name="originalSource">The source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowHeightEventArgs.RowIndex">
            <summary>
            Gets the row index for which the event is fired.
            </summary>
            <value>The index of the row for which the event is fired.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.QueryRowHeightEventArgs.Height">
            <summary>
            Gets or sets the height for the row for which the event is fired.
            </summary>
            <value>The height of the row for which the event is fired.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions">
            <summary>
            Represents a class that contains the options for row sizing in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions.ExcludeColumns">
            <summary>
            Gets or sets the list of columns that can be excluded.
            </summary>
            <value>The list of columns that can be excluded.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions.CanIncludeHiddenColumns">
            <summary>
            Gets or sets a value indicating whether the hidden columns can be included.
            </summary>
            <value>A boolean value denoting whether the hidden columns can be included.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers">
            <summary>
            Represents an extension class that provides resolving methods for a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetRowHeight(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32,Syncfusion.SfDataGrid.XForms.GridRowSizingOptions)">
            <summary>
            Gets the row height of the specified row index in the given SfDataGrid based on the given <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions"/>. 
            The GridRowSizingOptions provides an option to exclude certain column when calculating the height and also provides option to decide whether to consider hidden columns when calculating the height.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the row height is to be obtained.</param>
            <param name="rowIndex">The index of the row, whose height is to be obtained.</param>
            <param name="options">The <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions"/> is an optional parameter that provides an option to exclude certain column and to decide whether to consider hidden columns when calculating the height.</param>
            <returns>The row height of the specified row index in the given SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.PointToCellRowColumnIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,Xamarin.Forms.Point,System.Boolean)">
            <summary>
            Gets the row column index of the specified point in the given SfDataGrid.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the given <see cref="T:Xamarin.Forms.Point"/> is to be obtained.</param>
            <param name="point">The <see cref="T:Xamarin.Forms.Point"/> in the SfDataGrid whose <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> is to be obtained.</param>
            <param name="allowOutsideLines">Need to pass allowOutSideLines as true, to return row column index while reordering the columns.</param>
            <returns>The row column index corresponding to the given point.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.RowColumnIndexToPoint(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Gets the point for the specified row column index in the given SfDataGrid.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the <see cref="T:Xamarin.Forms.Point"/> corresponding to the given <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> is to be obtained.</param>
            <param name="rowColumnIndex">The <see cref="T:Syncfusion.GridCommon.ScrollAxis.RowColumnIndex"/> of the datagrid whose <see cref="T:Xamarin.Forms.Point"/> is to be obtained.</param>
            <returns>The point corresponding to the given row column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetRowHeight(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Object,System.Int32,Syncfusion.SfDataGrid.XForms.GridRowSizingOptions)">
            <summary>
            Calculates the height for the row based on the given model data object and <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions"/>  for the specified row index.
            </summary>
            <param name="datagrid">The SfDataGrid.</param>
            <param name="rowData">The underlying data object from the binded data source.</param>
            <param name="rowIndex">selected row index.</param>
            <param name="options">The <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowSizingOptions"/> is an optional parameter that provides an option to exclude certain column and to decide whether to consider hidden columns when calculating the height.</param>
            <returns>The row height of the specified row object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetUnboundRecordDetails(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Object,Syncfusion.SfDataGrid.XForms.GridColumn@,System.String@,Syncfusion.SfDataGrid.XForms.GridRowSizingOptions)">
            <summary>
            Calculates the largest data among the unbound column.
            </summary>
            <param name="datagrid">SfDataGrid instance</param>
            <param name="rowData">row data</param>
            <param name="largerRecordColumn">larger record column</param>
            <param name="largerRecord">whole larger record</param>
            <param name="options">GridRowSizing Options</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetTemplateHeight(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.GridColumn,System.Object,System.Int32)">
            <summary>
            Gets the measuered height of the template view
            </summary>
            <param name="grid">SfDataGrid instance</param>
            <param name="column">column value</param>
            <param name="rowData">row data</param>
            <param name="rowIndex">row index</param>
            <returns>Returns the measuered height of the template view</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.QueryRowHeights(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32,System.Int32)">
            <summary>
            Queries the row heights for the rows between the given Start and End index.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the row height should be queried.</param>
            <param name="startIndex">The Start index of the row in which query row height should Start.</param>
            <param name="endIndex">The End index of the row in which the query row height should End.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetVerticalCumulativeDistance(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the vertical cumulative distance of the SfDataGrid for the given row index.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the vertical cumulative distance of the given row index is to be determined.</param>
            <param name="rowIndex">The index of the row whose vertical cumulative distance is to be obtained.</param>
            <returns>The vertical cumulative distance of the SfDataGrid for the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetHorizontalCumulativeDistance(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the horizontal cumulative distance of the SfDataGrid for the given column index.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the horizontal cumulative distance of the given column index is to be determined.</param>
            <param name="columnIndex">The index of the column whose horizontal cumulative distance is to be obtained.</param>
            <returns>The horizontal cumulative distance of the SfDataGrid for the given column index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.SetIndeterminate(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Boolean)">
            <summary>
            Sets the indeterminate value to the PullTORefresh view
            </summary>
            <param name="datagrid">SfDataGrid instance</param>
            <param name="value">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.IsCaptionSummaryRow(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Returns a boolean value specifying whether the row available in the given row index is a <see cref="T:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the given row is to be checked whether it is a CaptionSummaryRow.</param>
            <param name="rowIndex">The index of the row, which should be checked whether it is a caption summary row.</param>
            <returns>A boolean value specifying whether the row available in the given row index is a CaptionSummaryRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.IsTableSummaryRow(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Returns a boolean value specifying whether the row available in the given row index is a <see cref="T:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the given row is to be checked whether it is a TableSummaryRow.</param>
            <param name="rowIndex">The index of the row, which should be checked whether it is a table summary row.</param>
            <returns>A boolean value specifying whether the row available in the given row index is a CaptionSummaryRow.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetCellValue(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Object,System.String)">
            <summary>
            Gets the CellValue of the given column from the given data object.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the cell value should be obtained.</param>
            <param name="recordData">The underlying data object from the binded data source.</param>
            <param name="columnName">The <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName">MappingName</see> of the column whose cell value is to be obtained.</param>
            <returns>The cell value of the given column from the given data object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetCaptionSummaryValue(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.SpannedDataColumn)">
            <summary>
            Gets the value displayed in the <see cref="T:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl"/> based on the given <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the caption summary value is to be obtained.</param>
            <param name="column">The SpannedDataColumn of the caption summary row.</param>
            <returns>The value displayed in the <see cref="T:Syncfusion.SfDataGrid.XForms.CaptionSummaryRowControl"/> based on the given <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetSummaryValue(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.SpannedDataColumn)">
            <summary>
            Get the value displayed in the <see cref="T:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl"/> based on the given <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="column">The SpannedDataColumn.</param>
            <returns>The value displayed in the <see cref="T:Syncfusion.SfDataGrid.XForms.TableSummaryRowControl"/> based on the given <see cref="T:Syncfusion.SfDataGrid.XForms.SpannedDataColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetGroupedColumn(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.Data.Group)">
            <summary>
            Gets the grouped column in the grid column information based on the given Group. 
            </summary>
            <param name="dataGrid">The SfDataGrid in which the grouped column should be obtained.</param>
            <param name="group">The group whose grouped column should be obtained.</param>
            <returns>The grouped column from the given group.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.UpdateDataRow(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Updates the data row with the given row index.in the view.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the row should be updated.</param>
            <param name="rowIndex">The index of the row whose data should be updated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetRowGenerator(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Gets the current instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.RowGenerator"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="dataGrid">The SfDataGrid whose row generator is to be obtained.</param>
            <returns>The row generator of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.CanPullToRefresh(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Returns a boolean value specifying whether the view can be refreshed when performing pull to refresh action.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the refreshing is to be checked when pull to refresh action is performed.</param>
            <returns>A boolean value specifying whether the view can be refreshed when performing pull to refresh action.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.IsParentSfPullToRefresh(Xamarin.Forms.View)">
            <summary>
            This method used to check parent of DataGrid and if SfPullToRefresh return true
            else return false.
            </summary>
            <param name="view"> The current view to be checked for its parent. </param>
            <returns>Returns the boolean value indicating whether the parent is SfPulltoRefresh</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetConvertedCellValue(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            Gets the CellValue of the GridCell based on the DisplayBinding.Converter of the given GridColumn when LoadUIView is false.
            </summary>
            <param name="gridColumn">The GridColumn.</param>
            <param name="cellValue">The CellValue.</param>
            <returns>The cell value of the GridCell.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.SetBindingContext(Xamarin.Forms.View,System.Object,Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Sets binding context value for the view
            </summary>
            <param name="view">current view</param>
            <param name="bindingContext">binding context value</param>
            <param name="dataGrid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.CanSwipe(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.SwipeDirection,System.Double)">
            <summary>
            Decides whether swiping can be done or not based on the given swipe direction and offset values.
            </summary>
            <param name="dataGrid">The SfDataGrid in which the swiping should be checked.</param>
            <param name="swipeDirection">The direction in which swipe action is performed.</param>
            <param name="swipeOffset">The swipe offset value.</param>
            <returns>A boolean value deciding whether swipe can be done or not.</returns>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.Control">
            <summary>
            Gets or sets the template loaded in the grid cell.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetControl(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            Gets the template loaded in the grid cell.
            </summary>
            <param name="column">The GridColumn in which the template should be obtained.</param>
            <param name="record">The underlying data object.</param>
            <returns>The template loaded in the grid cell.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.UpdateUnboundColumn(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Object,System.String)">
            <summary>
            Checks whether any UnboundColumn in view has its expression/format dependent on the bound column in view and updates its cell value to reflect the changes made to the bound column.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="rowData">The current row data undergoing property change.</param>
            <param name="propertyName">The property that has changed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.UpdateUnboundColumn(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Object)">
            <summary>
            Updates unbound columns in the view of given data row.
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="rowData">The row data.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetFrozenColumnsExtent(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Provides the overall extent of the columns frozen in view
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <returns>The sum of frozen colums width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetHiddenColumnCount(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32,System.Int32)">
            <summary>
            Provides the number of hidden columns within a specified Start and End index
            </summary>
            <param name="dataGrid">The SfDataGrid.</param>
            <param name="startIndex">Start index of the range.</param>
            <param name="endIndex">End index of the range.</param>
            <returns>Returns the hidden column count</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.UpdateCaptionSummaryRow(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.DataRowBase,System.String)">
            <summary>
            Updates all the visible columns of the given caption row.
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="dataRowBase">DataRowBase instance</param>
            <param name="columnName">summary column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.UpdateCaptionSummaries(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.String)">
            <summary>
            Updates the visible columns of all caption summary rows exist in view.
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="columnName">summary column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.UpdateTableSummaries(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.String)">
            <summary>
            Updates the visible columns of all the table summary rows.
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="columnName">summary column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.UpdateGroupSummaries(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.String)">
            <summary>
            Updates the visible columns of all the group summary rows.
            </summary>
            <param name="dataGrid">SfDataGrid</param>
            <param name="columnName">string</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetIndentColumnsWidth(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.DataRowBase)">
            <summary>
            Calculates the total width of all the indent columns in the passed data row.
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="dataRow">DataRowBase instance</param>
            <returns>Returns the calculated indent columns width.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.GetIndentColumnsCount(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Calculates the total number of indent columns in the header row.
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <returns>Returns the total number of indent columns in the header row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGridHelpers.UpdateColumnElements(Syncfusion.Data.SummaryRecordEntry,Syncfusion.SfDataGrid.XForms.DataRowBase,System.String)">
            <summary>
            Update all the visible columns of the given spanned data row.
            </summary>
            <param name="record">SummaryRecordEntry value</param>
            <param name="summaryRow">DataRowBase instance</param>
            <param name="columnName">column element</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnsChanged"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnsChanging"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnsChanged"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventArgs"/>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventArgs.#ctor(System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the DataGridSortColumnsChangedEventArgs class using the specified values.
            </summary>
            <param name="addedItems">The list of items added for sorting.</param>
            <param name="removedItems">The list of items removed from sorting.</param>
            <param name="action">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that represents collection changed action i.e. whether an item is added, 
            removed, replaced, reset or moved in the collection.</param>
            <param name="originalSource">The SfDataGrid that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were sorted.
            </summary>
            <value>The list of items added to sorting.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unsorted.
            </summary>
            <value>The list of items removed from sorting.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventArgs.Action">
            <summary>
            Gets the collection changed action i.e. whether an item is added, removed, replaced, reset or moved in the collection.
            </summary>
            <value>Returns the <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that represents the collection changed action.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnsChanging"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventArgs"/>
            <seealso cref="T:System.ComponentModel.CancelEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventArgs.#ctor(System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
            <summary>
            Initializes a new instance of the DataGridSortColumnsChangingEventArgs class using the specified values.
            </summary>
            <param name="addedItems">The list of items added for sorting.</param>
            <param name="removedItems">The list of items removed from the sorting.</param>
            <param name="action">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that represents collection changed action i.e. whether an item is added, 
            removed, replaced, reset or moved in the collection.</param>
            <param name="originalSource">The SfDataGrid that raises the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were sorted.
            </summary>
            <value>The list of items to be sorted.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unsorted.
            </summary>
            <value>The list of items to be removed from sorting.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventArgs.Action">
            <summary>
            Gets the collection changed action i.e. whether an item is added, removed, replaced, reset or moved in the collection.
            </summary>
            <value>Returns the <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> that represents the collection changed action.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SortColumnChangedHandleArgs">
            <summary>
            Provides data for the <see cref="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessOnSortChanged(Syncfusion.SfDataGrid.XForms.SortColumnChangedHandleArgs)"/> override for processing sorting changes.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SortColumnChangedHandleArgs.#ctor">
            <summary>
            Initializes a new instance of the SortColumnChangedHandleArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SortColumnChangedHandleArgs.ScrollToCurrentItem">
            <summary>
            Gets or sets a value indicating whether to scroll to the current item or not.
            </summary>
            <value><b>True</b> if need to scroll to the current item, otherwise, <b>false</b>. The default value is <b>false</b>.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SwipeEndedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SwipeEnded"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipeStartedEventHandler"/>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipingEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SwipingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.Swiping"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipeStartedEventHandler"/>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipeEndedEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SwipeStartedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SwipeStarted"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipingEventHandler"/>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipeEndedEventHandler"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SwipeStarted"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipingEventArgs"/>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs.SwipeOffset">
            <summary>
            Gets the swipe offset of the row in which swiping is started.
            </summary>
            <value>The swipe offset of the row in which swiping is started.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the row in which swiping is started.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.SwipeDirection"/> of the row in which swiping is started.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs.RowIndex">
            <summary>
            Gets the row index of the row in which swiping is started.
            </summary>
            <value>The row index of the row in which swiping is started.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs.RowData">
            <summary>
            Gets the underlying data object of the row in which swiping is started.
            </summary>
            <value>The underlying data object of the row in which swiping is started.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs.SwipeOffSet">
            <summary>
            Gets the swipe offset of the swiped row.
            </summary>
            <value>The swipe offset of the swiped row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SwipeEnded"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs"/>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipingEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs.SwipeOffset">
            <summary>
            Gets the swipe offset of the swiped row.
            </summary>
            <value>The swipe offset of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the swiped row.
            </summary>
            <value>The swipe direction of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs.RowIndex">
            <summary>
            Gets the row index of the swiped row.
            </summary>
            <value>The row index of the swiped row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs.RowData">
            <summary>
            Gets the underlying data object of the swiped row.
            </summary>
            <value>The underlying data object of the swiped row.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SwipingEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.Swiping"/> event.
            </summary>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs"/>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SwipingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SwipingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipingEventArgs.SwipeOffset">
            <summary>
            Gets the current swipe offset of the row being swiped.
            </summary>
            <value>The current swipe offset of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipingEventArgs.SwipeDirection">
            <summary>
            Gets the swipe direction of the row being swiped.
            </summary>
            <value>The swipe direction of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipingEventArgs.RowIndex">
            <summary>
            Gets the row index of the row being swiped.
            </summary>
            <value>The row index of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipingEventArgs.RowData">
            <summary>
            Gets the underlying data object of the row being swiped.
            </summary>
            <value>The underlying data object of the row being swiped.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SwipingEventArgs.SwipeOffSet">
            <summary>
            Gets the current swipe offset of the row being swiped.
            </summary>
            <value>The current swipe offset of the row being swiped.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.QueryUnboundColumnValueHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryUnboundColumnValue"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventArgs"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryUnboundColumnValue"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventArgs.#ctor(Syncfusion.SfDataGrid.XForms.UnboundActions,System.Object,Syncfusion.SfDataGrid.XForms.GridColumn,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the GridUnboundColumnEventArgs class with the specified values.
            </summary>
            <param name="action">Represents the <see cref="T:Syncfusion.SfDataGrid.XForms.UnboundActions"/> that specifies the possible actions (commit data or query data or paste 
            data) performed in the unbound column.</param>
            <param name="value">The cell value of the unbound Column.</param>
            <param name="column">The grid column of the cell that triggers the event.</param>
            <param name="record">The underlying data of the row.</param>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventsArgs">
            <summary>
            Provides data for <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryUnboundColumnValue"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventsArgs.#ctor(Syncfusion.SfDataGrid.XForms.UnboundActions,System.Object,Syncfusion.SfDataGrid.XForms.GridColumn,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the GridUnboundColumnEventsArgs class with the specified values.
            </summary>
            <param name="action">Represents the <see cref="T:Syncfusion.SfDataGrid.XForms.UnboundActions"/> that specifies the possible actions (commit data or query data or paste 
            data) performed in the unbound column.</param>
            <param name="value">The cell value of the unbound Column.</param>
            <param name="column">The grid column of the cell that triggers the event.</param>
            <param name="record">The underlying data of the row.</param>
            <param name="originalSource">The original source that triggers the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventsArgs.Column">
            <summary>
            Gets the grid column of the cell triggers this event.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventsArgs.Value">
            <summary>
            Gets or sets the value for the grid unbound column's cell based on the possible actions (commit data or query data or paste 
            data) performed in the unbound column.
            </summary>
            <value>
            An object that contains the cell value for the grid unbound column.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventsArgs.Record">
            <summary>        
            Gets the data object associated with the row which has the grid cell triggered this event.
            </summary>
            <value>
            The data object associated with the row which has the grid cell triggered this event.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventsArgs.UnboundAction">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.UnboundActions"/> that specifies the possible actions (commit data or query data or paste data) performed in the 
            unbound column.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfDataGrid.XForms.UnboundActions"/> that specifies the possible actions (commit data or query data or paste data) performed in the 
            unbound column.
            </value>
            <remarks>The UnboundAction – QueryData denotes, the event is raised to get or query the value for cell and the UnboundAction - CommitData denotes, the event is raised to notify or commit the edited value.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventsArgs.CellType">
            <summary>        
            Gets or sets the cell type of the unbound cell.
            </summary>
            <value>
            A string that specifies the cell type of unbound cell.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventsArgs.RowColumnIndex">
            <summary>
            Gets or sets the row column index of the unbound cell which triggers this event.
            </summary>
            <value>
            The row column index of the unbound cell which triggers this event.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions">
            <summary>
            The class which is used to get the inaccessable properties,fields and methods.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions.IsAssignableFrom(System.Type,System.Type)">
            <summary>
            Specifies whether the current type can be assigned to the given type.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="destinationType">The type to compare with the current type.</param>
            <returns>Returns a boolean value indicating whether the current type can be assigned to the given type.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions.IsInstanceOfType(System.Type,System.Object)">
            <summary>
            Specifies whether the given object is the instance of the current type.
            </summary>
            <param name="currentType">The current type.</param>
            <param name="obj">The object to be compared with the current type.</param>
            <returns>Returns a boolean value specifying whether the given object is the instance of the current type.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions.GetParts``1(System.Type,System.Func{System.Reflection.TypeInfo,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            To be added
            </summary>
            <typeparam name="T">enumerable type</typeparam>
            <param name="type">type value</param>
            <param name="selector">selector value</param>
            <returns>Returns the get part</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions.GetField(System.Type,System.Func{System.Reflection.FieldInfo,System.Boolean})">
            <summary>
            Gets the field of the given type.
            </summary>
            <param name="type">The type.</param>
            <param name="predicate">The Func to test each field.</param>
            <returns>The field of the given type.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions.GetField(System.Type,System.String)">
            <summary>
            Gets the field of the given type and name.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The field name.</param>
            <returns>The field of the given type and name.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions.GetFields(System.Type)">
            <summary>
            Gets the fields of the given type.
            </summary>
            <param name="type">The type.</param>
            <returns>The fields of the given type.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions.GetProperties(System.Type)">
            <summary>
            Gets the properties of the given type.
            </summary>
            <param name="type">The type.</param>
            <returns>The properties of the given type.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.XamarinReflectionExtensions.GetProperty(System.Type,System.String)">
            <summary>
            Gets the property of the given type and name.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The property name.</param>
            <returns>The property of the given type and name.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IVisibility">
            <summary>
            Defines the Visibility property of the element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IVisibility.Visibility">
            <summary>
            Gets or sets a value indicating whether the visibility of the element.
            </summary>
            <value>The boolean value indicating the visibility of the element.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.BorderView">
            <summary>
            An element with border that contains a single child element.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.BorderView.VisibilityProperty">
            <summary>
            Identifies the Visibility bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.BorderView.BorderColorProperty">
            <summary>
            Identifies the BorderColor bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.BorderView.BorderThicknessProperty">
            <summary>
            Identifies the BorderThickness bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BorderView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.BorderView"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.BorderView.Visibility">
            <summary>
            Gets or sets a value indicating whether the view can be displayed.
            </summary>
            <value><b>True</b> if the element is visible, otherwise <b>false</b>. The default value is true.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.BorderView.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
            <value>The border color.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.BorderView.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
            <value>The border thickness.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BorderView.AddChild(Xamarin.Forms.View)">
            <summary>
            Add the current child to the spcified view.
            </summary>
            <param name="child">current child</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BorderView.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.BorderView.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController">
            <summary>
            Provides the base implementation for column drag-and-drop operations in SfDataGrid.
            </summary>
            <remarks>
            It provides the set of public properties to customize the drag-and-drop operation.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController"/> class.
            </summary>
            <param name="dataGrid">The reference of the SfDatagrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.OnDragStarted">
            <summary>
            This method is called when colum drag and drop operation is started
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.OnDragging(System.Double,System.Double)">
            <summary>
            This method is called when colum drag and drop operation is on going
            </summary>
            <param name="draggedX">X position</param>
            <param name="draggedY">Y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.OnDragEnded">
            <summary>
            This method is called when colum drag and drop operation is ended
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.InitializeDragViews">
            <summary>
            Initialize the drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.RemoveDragViews">
            <summary>
            Removes the drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.EndDragging">
            <summary>
            Call this method to end drag and drop
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.CanShowIndicationAtlast(System.Boolean)">
            <summary>
            Gets a value indicating whether the indication arrow can be shown in the last column
            </summary>
            <param name="isLastVisibleIndex">value indicates whether the index is last visible index</param>
            <returns>Returns a value indicating whether the indication value can be shown in the last column</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.CanShowErrorIndicator">
            <summary>
            Gets a value indicating whether the error indication icon can be shown
            </summary>
            <returns>Returns a value indicating whether the error indication icon can be shown</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.CanShowIndication">
            <summary>
            Gets a value indicating whether the indication arrow can be shown
            </summary>
            <returns>Returns a value indicating whether the error indication arrow can be shown</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.CalculateWidthAndHeight">
            <summary>
            Calculates the height and width of column drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.IndexToPoint(System.Int32)">
            <summary>
            Gets the starting point of the given column index
            </summary>
            <param name="columnIndex">current column index</param>
            <returns>Returns the starting point of the given column index</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.PointToColumnIndex(System.Int32,System.Int32)">
            <summary>
            Gets the column index at the given coordinates point
            </summary>
            <param name="x">X position</param>
            <param name="y">Y position</param>
            <returns>Returns the column index at the given coordinates point</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.GetColumnWidth(System.Int32)">
            <summary>
            Gets the column width
            </summary>
            <param name="index">current index</param>
            <returns>Returns the column width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.AutoScroll(System.Boolean)">
            <summary>
            Call this method to perform auto scroll during column drag and drop
            </summary>
            <param name="towardsRight">value indicates whether dragging is towards right</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.ResolveToStartIndex">
            <summary>
            Gets the start index based on the row header visibility
            </summary>
            <returns>Returns the start index based on the row header visibility</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.GetHiddenColumnCount(System.Int32,System.Int32)">
            <summary>
            Gets the hidden column count
            </summary>
            <param name="startIndex">start index</param>
            <param name="endIndex">end index</param>
            <returns>Returns the hidden column count</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.GetEndIndex">
            <summary>
            Method which return the current end index while the column is in dragging/dropping.
            </summary>
            <returns>Return the current end index while the column is in dragging/dropping.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnDragDropController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridColumn">
            <summary>
            Serves as the base class for the different column types of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>This abstract class provides the base functionality for all <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> columns.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridcolumn"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.TextMarginProperty">
            <summary>
            Identifies the TextMargin bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderCellTextSizeProperty">
            <summary>
            Identifies the HeaderCellTextSize bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.CellTextSizeProperty">
            <summary>
            Identifies the CellTextSize bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.FontAttributeProperty">
            <summary>
            Identifies the FontAttribute bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.RecordFontProperty">
            <summary>
            Identifies the RecordFont bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderFontProperty">
            <summary>
            Identifies the HeaderFont bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderFontAttributeProperty">
            <summary>
            Identifies the HeaderFontAttribute bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.TextAlignmentProperty">
            <summary>
            Identifies the TextAlignment bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderTextAlignmentProperty">
            <summary>
            Identifies the HeaderTextAlignment bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.LineBreakModeProperty">
            <summary>
            Identifies the LineBreakMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.TextWrappingProperty">
            <summary>
            Identifies the TextWrapping bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.#ctor">
            <summary>
            Initializes a new instance of the GridColumn class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.ColumnSizer">
            <summary>
            Gets or sets the value that indicates how the column width is determined.
            </summary>
            <value>One of the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer"/> enumeration that adjust the column width. The default value is <see cref="F:Syncfusion.SfDataGrid.XForms.ColumnSizer.None"/>.</value>      
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn();
            numericColumn.ColumnSizer = ColumnSizer.Star;
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.ColumnSizerProperty">
            <summary>
            Identifies the ColumnSizer bindable property.
            </summary>
            <remarks>
            This bindable property is read-only.
            </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.AllowEditing">
            <summary>
            Gets or sets a value indicating whether to enable/disable editing for a column. The user can enable or disable editing 
            for particular column by using this property.
            </summary>
            <value><b>True</b> if editing for the column is enabled, otherwise <b>false</b>. 
            The default value is false.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.AllowEditing = false;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing#column-editing"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.AllowEditingProperty">
            <summary>
            Identifies the AllowEditing bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.CellStyleProperty">
            <summary>
            Identifies the CellStyle bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.CellStyle">
            <summary>
            Gets or sets the style that is used to render the cells in the column. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to 
            apply cell styles for a GridColumn that is used to render the cells in that column. 
            </summary>
            <value>The style that is used to render the cells in the column.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to apply cell styles for a GridColumn that is used to render the cells in that column. 
            When cell style is applied, the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCell"/> appears in the custom style rather than the default one. 
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
            <syncfusion:GridTextColumn MappingName="Freight" Format="C">
                <syncfusion:GridTextColumn.CellStyle>
                    <Style TargetType = "syncfusion:GridCell" >
                        <Setter Property="Foreground" Value="Red" />
                    </Style>
                </syncfusion:GridTextColumn.CellStyle>
            </syncfusion:GridTextColumn>
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/conditional-styles"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.ActualWidth">
            <summary>
            Gets the current width of the column in device independent unit.
            </summary>
            <value>The current width of the column in device independent unit.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.ActualWidthProperty">
            <summary>
            Identifies the ActualWidth bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.LoadUIView">
            <summary>
            Gets or sets a value indicating whether to load UIView or draw cell value in Android. 
            </summary>
            <value>
            <b>True</b> if UIView is loaded in the grid cell, otherwise <b>false</b>.
            The default value is false for Android platform and true for other platforms.
            </value>
            <remarks>
            By default, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> draws the value in the cell for Android platform, and loads the UIElement in other platforms.
            The user can customize the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> to load the UIElement for android platform, by setting 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.LoadUIView"/> as true.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.LoadUIView = true;
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.PaddingProperty">
            <summary>
            Identifies the Padding bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.Padding">
            <summary>
            Gets or sets the padding applied to the cells in the column.
            </summary>
            <value>The padding applied to the cells in the column.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.Padding = new Thickness(10,5,10,5);
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.MappingNameProperty">
            <summary>
            Identifies the MappingName bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#mappingname"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName">
            <summary>
            Gets or sets the mapping name that associates the column with a property in the bound data source.
            </summary>
            <value>The mapping name that associates the column with a property in the data source.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.MappingName = "OrderID";
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#mappingname"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderTextProperty">
            <summary>
            Identifies the HeaderText bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderText">
            <summary>
            Gets or sets the display text of the column header.
            </summary>
            <value>The display text of the column header. 
            The default value of header text is the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> of the column.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.MappingName = "OrderID";
            column.HeaderText = "Order ID";
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#headertext"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.AllowSortingProperty">
            <summary>
            Identifies the AllowSorting bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.AllowSorting">
            <summary>
            Gets or sets a value indicating whether the column can be sorted or not.
            </summary>
            <value><b>True</b> if sorting for the column is enabled, otherwise <b>false</b>. 
            The default value is true.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows sorting for the column only when both <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSorting"/> 
            and <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.AllowSorting"/> is true. This enables the user to restrict a particular column from being sorted by setting
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.AllowSorting"/> as false.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridTextColumn column = new GridTextColumn();
            column.AllowSorting = false;
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.FormatProperty">
            <summary>
            Identifies the Format bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.Format">
            <summary>
            Gets or sets a value that indicates the format applied for the Content of record cells in the column. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables 
            the user to apply Format for the records in the cells by setting this property. 
            <para/>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the user to populate the data for the <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/> using this property. This 
            property enables the user to format the values of other columns and display the formatted value in unbound column.
            </summary>
            <value>The format applied to the record in the cells.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the user to apply Format for the records in the cells by setting this property. 
            Assign the FormatString to this property based on the type of the property the GridColumn is associated with to format the value.
            <para/>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the user to populate the data for the <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/> using this property. This 
            property enables the user to format the values of other columns and display the formatted value in unbound column.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "ShippingDate",
                Format = "dd/MM/yyyy"
                });
            ]]></code>
            </example>
            <example>
            <code lang="C#"><![CDATA[
            GridUnboundColumn DiscountColumn = new GridUnboundColumn()
            {
                MappingName = "DiscountPrice",
                HeaderText = "Discount Price",
                Format = "'{Discount}% for {OrderID}'"
            };
            dataGrid.Columns.Add(DiscountColumn);
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#formatting"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/unbound-column#using-format"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.CultureInfoProperty">
            <summary>
            Identifies the Culture bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.CultureInfo">
            <summary>
            Gets or sets the culture used for formatting the Content of record cells in the column. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the user 
            to apply different culture to the records in the cells by setting this property.
            </summary>
            <value>The Culture used for formatting the Content of record cells in the column.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to apply different <see cref="T:System.Globalization.CultureInfo"/> for the GridColumns by using this
            property. Assign the FormatString to this property based on the type of the property the column is associated with to format the value. 
            The user can use different StringFormats to customize the value displayed in the record cells.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                Format = "C",
                CultureInfo = new CultureInfo("en-US")
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#formatting-gridtextcolumn-with-different-culture"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.TextMargin">
            <summary>
            Gets or sets the padding applied to the record cells in the column.
            </summary>
            <value>The padding applied to the record cells in the column.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderCellTextSize">
            <summary>
            Gets or sets the font size for the Content of header cell in the column. The default value is 14. The font size for the Content of header cell in the GridColumn 
            can be customized by using the this property.
            </summary>
            <value>The font size for the Content of header cell in the column. The default value is 14.</value>
            <remarks>
            The font size for the Content of header cell in the GridColumn can be customized by using the this property. 
            However this property will not work if <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderTemplate"/> is used for a column. 
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                HeaderCellTextSize = 16
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#headercelltextsize"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.CellTextSize">
            <summary>
            Gets or sets the font size for the Content of record cells in the column. The font size for the Content of record cells in the GridColumn 
            can be customized by using this property.
            </summary>
            <value>The FontSize for the Content of record cells in the column. The default value is 14.</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                CellTextSize = 12
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#celltextsize"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.FontAttribute">
             <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.FontAttributes"/> that describes the font attribute for the Content of the record cells in the GridColumn. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the 
             user to apply different font attributes to the Content of the record cells using this property. The record cells text can be customized 
             as <b>bold</b> or <b>Italic</b> using this property.
             </summary>
             <value>Represents the <see cref="T:Xamarin.Forms.FontAttributes"/> that describes the font attribute for the Content of the record cell in the column. 
             The default value is <see cref="F:Xamarin.Forms.FontAttributes.None"/>.</value>
             <example>
             <code lang="C#"><![CDATA[
             dataGrid.Columns.Add (new GridTextColumn ()
            { 
                 MappingName = "Freight",
                 FontAttribute = FontAttribute.Bold
                 });
             ]]></code> 
             </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.RecordFont">
            <summary>
            Gets or sets the font family for the Content of record cells in the column. The font family for the Content of record cells in the GridColumn 
            can be customized by using this property.
            </summary>
            <value>The font family for the Content of record cells in the column. The default value is "Helvetica Neue".</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                RecordFont = "HelveticaNeue LT 55 Roman"
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#recordfont"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderFont">
            <summary>
            Gets or sets the font family for the Content of header cell in the column. The font family for the Content of header cells in the GridColumn 
            can be customized by using this property.
            </summary>
            <value>The FontFamily for the Content of header cell in the column. The default value is "HelveticaNeue LT 55 Roman".</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                HeaderFont = "Helvetica Neue"
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#headerfont"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderFontAttribute">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.FontAttributes"/> that describes the font style for the Content of the header cell in the column. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the 
            user to apply different font attributes to the Content of the header cells using this property. The header text can be customized 
            as <b>bold</b> or <b>Italic</b> using this property.
            </summary>
            <value>Represents the <see cref="T:Xamarin.Forms.FontAttributes"/> that describes the font style for the Content of the header cell in the column. 
            The default value is <see cref="F:Xamarin.Forms.FontAttributes.None"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                HeaderFontAttribute = FontAttributes.Bold;
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#headerfontattribute"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.TextAlignment">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.TextAlignment"/> for the record cells in the column. The default alignment for the record cells 
            in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> is <b>center</b> and you can customize this to <b>Start</b> or <b>End</b>.
            </summary>
            <value>The <see cref="T:Xamarin.Forms.TextAlignment"/> for the record cells in the column. 
            The default value is <see cref="F:Xamarin.Forms.TextAlignment.Center"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                TextAlignment = TextAlignment.Start;
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#textalignment"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderTextAlignment">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.TextAlignment"/> for the header cell in the column. The default alignment for the header cells 
            in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> is <b>center</b> and you can customize this to <b>Start</b> or <b>End</b>.
            </summary>
            <value>The <see cref="T:Xamarin.Forms.TextAlignment"/> for the header cell in the column. 
            The default value is <see cref="F:Xamarin.Forms.TextAlignment.Center"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                HeaderTextAlignment = TextAlignment.Start;
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#headertextalignment"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.LineBreakMode">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.LineBreakMode"/> for the cells in the column. The user can customize the line breaking mode of 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> by using this property. By default, the word will be wrapped in the record cells, when the text for the record cells 
            exceeds the Content area.
            </summary>
            <value>The <see cref="T:Xamarin.Forms.LineBreakMode"/> for the cells in the column. 
            The default value is <see cref="F:Xamarin.Forms.LineBreakMode.WordWrap"/></value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                LineBreakMode = LineBreakMode.NoWrap;
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#linebreakmode"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.TextWrapping">
            <summary>
            Gets or sets the LineBreakMode for the cells in the column.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.WidthProperty">
            <summary>
            Identifies the Width bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.Width">
            <summary>
            Gets or sets the column width. The user can customize the column width by using this property. 
            By default, this property will not be assigned any value and the GridColumn renders in view based on the value of 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.DefaultColumnWidth"/> property.
            </summary>
            <value>The width of the column. The default value is <see cref="F:System.Double.NaN"/></value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                Width = 100
                });
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#column-width"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.HeaderTemplate">
            <summary>
            Gets or sets the template used to display the header of the current column. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize the 
            header cell based on your requirement by using this property. 
            </summary>
            <value>The template used to display the header of the current column.</value>
            <example>
            <code lang="XAML"><![CDATA[
            <syncfusion:GridTextColumn MappingName="OrderID">
              <syncfusion:GridTextColumn.HeaderTemplate>
                <DataTemplate>
                    <Label x:Name="OrderID" Text="OrderID" TextColor="Black" 
                           BackgroundColor="Yellow" YAlign="Center" />
                </DataTemplate>
              </syncfusion:GridTextColumn.HeaderTemplate>
            </syncfusion:GridTextColumn>
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#headertemplate"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.ValueBinding">
            <summary>
            Gets or sets the value binding that associates the column with a property in the data source. 
            The value of the property in the underlying model object binded to the value binding will be the Content of the 
            grid cell in edit mode.
            </summary>
            <value>The value binding that associates the column with a property in the data source.</value>
            <remarks>
            The <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the user to display a different property as the Content of the grid cell, when 
            the grid cell enters into edit mode. If the user wants to display a different property in edit mode, the user can make use of this 
            property. While setting <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> alone to the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.ValueBinding"/> 
            will be automatically generated based on the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/>.
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
            <syncfusion:SfDataGrid.Columns>
                <syncfusion:GridTextColumn MappingName = "CustomerID"
                                           DisplayBinding = "CustomerID"
                                           ValueBinding="{Binding OrderID}"
                                           />
            </syncfusion:SfDataGrid.Columns>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding">
            <summary>
            Gets or sets the display binding that associates the column with a property in the data source. 
            The value of the property in the underlying model object binded to the Display binding will be the Content of the grid cell in normal mode. 
            When the grid cell is entered into edit mode, The value of the property in the underlying model object binded to the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.ValueBinding"/> will be 
            the Content of the grid cell.
            </summary>
            <value>The display binding that associates the column with a property in the data source.</value>
            <remarks>
            The display Content of GridColumn is determined from <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> property. 
            It gets and sets the binding that associates the GridColumn with a property in the data source.
            While setting <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> alone to the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> 
            will be automatically generated based on the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/>.
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
            <syncfusion:SfDataGrid.Columns>
                <syncfusion:GridTextColumn MappingName = "CustomerID"
                                           DisplayBinding="{Binding OrderID}"
                                           />
            </syncfusion:SfDataGrid.Columns>
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#binding-options"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.MinimumWidth">
            <summary>
            Gets or sets the lower bound for the width of the column.
            </summary>
            <value>
            The minimum width constraint of the column. The default value is <b>20d</b> .
            </value>
            <remarks>
            When <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowResizingColumn"/> is enabled, the column can be resized from <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MinimumWidth"/> 
            to <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MaximumWidth"/>. Hence, using this property the user can restrict the minimum width the column can be 
            resized.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                MinimumWidth = 30
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#resizing-columns"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.MinimumWidthProperty">
            <summary>
            Identifies the MinimumWidth bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.MaximumWidth">
            <summary>
            Gets or sets the upper bound for the width of the column.
            </summary>
            <value>
            The maximum width constraint of the column. The default value is <b>double.NaN</b>.
            </value>
            <remarks>
            When <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowResizingColumn"/> is enabled, the column can be resized from <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MinimumWidth"/> 
            to <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MaximumWidth"/>. Hence, using this property the user can restrict the maximum width the column can be 
            resized.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                MaximumWidth = 200
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#resizing-columns"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.MaximumWidthProperty">
            <summary>
            Identifies the MaximumWidth bindable property.
            property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.IsHidden">
            <summary>
            Gets or sets a value indicating whether the visibility of the column. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to hide a particular column 
            using this property or not.
            </summary>
            <value>
            <b>True</b> if the column is hidden, otherwise <b>false</b>. 
            The default value is <b>false</b>.
            </value>        
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to hide a particular column by two ways, the user can either set <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.IsHidden"/> 
            property as true or set <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.Width"/> as 0.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Columns.Add (new GridTextColumn () { 
                MappingName = "Freight",
                IsHidden = true
                });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#ishidden"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.IsHiddenProperty">
            <summary>
            Identifies the IsHidden bindable property.        
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.GroupMode">
            <summary>
            Gets or sets a value that decides whether grouping is processed based on display value or edit value or value in the underlying collection 
            of the column.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.DataReflectionMode"/> that decides whether grouping is processed based on display value or edit value or value in the 
            underlying collection of the column. 
            The default value is <see cref="F:Syncfusion.Data.DataReflectionMode.Default"/>.</value>
            <remarks>
            By default, column grouping occurs based on the value in the underlying collection thereby creating a new group for each new value of 
            that column. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> also allows the user to group a column either on the display value or edit value of the column using 
            this property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn cargoWeight = new GridTextColumn();
            cargoWeight.MappingName = "ShipmentWeight";
            cargoWeight.GroupMode = Syncfusion.Data.DataReflectionMode.Display;
            cargoWeight.Format = "#";
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#groupmode"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridColumn.GroupModeProperty">
            <summary>
            Identifies the GroupMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.CellType">
            <summary>
            Gets or sets a value indicating the cell type of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>. This property is used to identify the type of the column. This property must be specified with a string value when creating a custom column extending from the base class.
            </summary>
            <value>The CellType of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the user to create their own column type when the available column type does not meet his requirements.
            The user must set the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.CellType"/> of the grid column to the type of UIElement to be loaded in the grid cell. It is mandatory 
            to create a custom cell renderer for the custom column created and it must be added in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CellRenderers"/> collection. The user 
            can handle his customizations in the custom renderer class implementing the <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCellRenderer`2"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            StepperColumn stepperColumn = new StepperColumn();
            stepperColumn.MappingName = "OrderID";
            dataGrid.Columns.Add(stepperColumn);
            
            dataGrid.CellRenderers.Add("Stepper", new StepperColumnRenderer());
            
            //StepperColumn.cs
            public class StepperColumn : GridColumn
            {
            
                public StepperColumn()
                {
                    CellType = "Stepper";
                }
            
            }
            
            //StepperColumnRenderer.cs
            public class StepperColumnRenderer : GridVirtualizingCellRenderer<Stepper,Stepper>
            {
            
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.IsDisplayBindingExplicitlyAssigned">
             <summary>
            Gets or sets a value indicating whether display binding is assigned explicitly or not;
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.IsValueBindingExplicitlyAssigned">
             <summary>
            Gets or sets a value indicating whether value binding is assigned explicitly or not;
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.IsTemplate">
            <summary>
            Gets or sets a value indicating whether the column is of the type GridTemplateColumn.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.DataGrid">
            <summary>
            Gets the instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.IsAutoGenerated">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> is auto generated.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.BindingMode">
            <summary>
            Gets or sets the BindingMode of the GridColumn.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumn.IsUnbound">
            <summary>
            Gets or sets a value indicating whether the GridColumn is an UnboundColumn.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.GetFormattedValue(System.Object)">
            <summary>
            Gets the Formatted value for the Content of a record cell in the column based on the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.Format"/> and <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.CultureInfo"/> of the column.
            </summary>
            <param name="value">The actual value of the record cell in the column.</param>
            <returns>The formatted value based on the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.Format"/> and <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.CultureInfo"/> properties of the column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.SetDisplayBindingConverter">
            <summary>
            Sets the converter for the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> of column.
            </summary>
            <remarks>
            You can override this method to specify the converter for <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.SetValueBindingConverter">
            <summary>
            Sets the converter for the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.ValueBinding"/> of column.
            </summary>
            <remarks>
            You can override this method to specify the converter for <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.ValueBinding"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.SetGrid(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Sets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.GetCulture">
            <summary>
            Gets the Culture of the GridColumn.
            </summary>
            <returns>Returns the current culture info.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.CanEditCell">
            <summary>
            Determines whether the column is editable.
            </summary>
            <returns>
            Returns <b>true</b> if all the cells with in the column is editable .
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnAllowEditingChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Dependency call back for AllowEditing property.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnGridColumnSizerChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Dependency call back for GridColumnSizer property.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnCellStyleChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the CellStyle property is changed.
            </summary>
            <param name="bindable">The GridColumn as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnTextWrappingChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the TextWrapping property is changed.
            </summary>
            <param name="bindable">The GridColumn as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnMinimumWidthChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Callback for MinimumWidth property.
            </summary>
            <param name="bindable">The GridColumn as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnMaximumWidthChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
             Callback for MaximumWidth property.
            </summary>
            <param name="bindable">The GridColumn as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnIsHiddenChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Callback for IsHidden property.
            </summary>
            <param name="bindable">The GridColumn as BindableObject.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnUpdateBindingInfo(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Updates the binding of the data columns in the GridColumn.
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.UpdateBinding(System.Boolean)">
            <summary>
            Updates the binding of the data columns in the GridColumn.
            </summary>
            <param name="isColumnBindingChanged">A boolean value denoting whether the column binding is changed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.OnFormatPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for FormatProperty changed.
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.SetDisplayBinding(System.Boolean,Xamarin.Forms.Binding)">
            <summary>
            Sets the display binding of the GridColumn.
            </summary>
            <param name="externalSet">A boolean value denoting whether the binding is set externally.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumn.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.Columns">
            <summary>
            A collection of <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>, that represent the columns in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. This class cannot be inherited.
            </summary>
            <remarks>Use the Columns collection to programmatically manage a collection of 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. 
            You can add, remove or insert columns in the Columns collection.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.Columns.#ctor">
            <summary>
            Initializes a new instance of the Columns class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.Columns.Item(System.String)">
            <summary>
            Gets a <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>-derived column object with the specified 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> from the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection.
            </summary>
            <param name="mappingName">The mapping name of the column whose column object to be retrieved.</param>
            <value>A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> object in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> 
            collection, associated with the given mapping name.</value>
            <remarks>Use this Indexer to get a <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>-derived column object
            with the specified <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> from the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection using array notation.</remarks>
            <returns>Returns the current column</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridTextColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> column that hosts textual Content in its cells.
            </summary>
            <remarks>
            <para>Use GridTextColumn to display columns of data as text.
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection and to populate the data 
            to the column set the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> to the property in the data source.
            <c>dataGrid.Columns.Add(new GridTextColumn() { MappingName = "OrderID" });</c>
            </para>
            <para>
            The data can also be populated to the column by using the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> property. 
            The Binding property is applied to the <see cref="T:Xamarin.Forms.Label"/> view created in the column.
            The <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> for the view in each cell is the data item for the row
            the cell is present. Therefore, to set up the binding you only have to set the <see cref="P:Xamarin.Forms.Binding.Path"/>. 
            Optionally, you can specify a <see cref="P:Xamarin.Forms.Binding.Converter"/> if you want to convert the data.
            </para></remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridtextcolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTextColumn.#ctor">
            <summary>
            Initializes a new instance of the GridTextColumn class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSwitchColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> column that hosts <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> view in its cells.
            </summary>
            <remarks>
            <para>Use GridSwitchColumn to display columns of Boolean data as a <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/>.
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection and to populate the data 
            to the column set the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> to the property in the data source.
            <c>dataGrid.Columns.Add(new GridSwitchColumn() { MappingName = "IsClosed" });</c>
            </para>
            <para>
            The data can also be populated to the column by using the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> property. 
            The Binding property is applied to the <see cref="T:Syncfusion.SfDataGrid.XForms.SfSwitchControl"/> view created in the column.
            The <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> for the view in each cell is the data item for the row
            the cell is present. Therefore, to set up the binding you only have to set the <see cref="P:Xamarin.Forms.Binding.Path"/>. 
            Optionally, you can specify a <see cref="P:Xamarin.Forms.Binding.Converter"/> if you want to convert the data.
            </para></remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridswitchcolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSwitchColumn.#ctor">
            <summary>
            Initializes a new instance of the GridSwitchColumn class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridImageColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> column that hosts <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/> in its cells.
            </summary>
            <remarks>
            <para>Use GridImageColumn to display columns of ImageSource data as a <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/>.
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection and to populate the data 
            to the column set the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> to the property in the data source.
            <c>dataGrid.Columns.Add(new GridSwitchColumn() { MappingName = "DealerImage" });</c>
            </para>
            <para>
            The data can also be populated to the column by using the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> property. 
            The Binding property is applied to the <see cref="T:Syncfusion.SfDataGrid.XForms.SfImageView"/> view created in the column.
            The <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> for the view in each cell is the data item for the row
            the cell is present. Therefore, to set up the binding you only have to set the <see cref="P:Xamarin.Forms.Binding.Path"/>. 
            Optionally, you can specify a <see cref="P:Xamarin.Forms.Binding.Converter"/> if you want to convert the data.
            </para></remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridimagecolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridImageColumn.#ctor">
            <summary>
            Initializes a new instance of the GridImageColumn class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridTemplateColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> column that hosts template-specified Content in its cells.
            </summary>
            <remarks>
            Use GridTemplateColumn to display the value in the template of your requirement.
            <para/>
            The GridTemplateColumn type enables you to create your own column types by specifying the cell template or cell template selector
            to use for displaying value. To specify the template that is used to display the contents of a cell, set the <see cref="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplate"/> property. 
            and to set the template selector, use <see cref="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplateSelector"/> property.
            </remarks>
            <example><code lang="XAML"><![CDATA[        
            <syncfusion:GridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Label Text = "{Binding CustomerID}" 
                       TextColor="Black" 
                       XAlign="Center" 
                       YAlign="Center" />
              </DataTemplate>
            </syncfusion:GridTemplateColumn.CellTemplate>
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridtemplatecolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.#ctor">
            <summary>
            Initializes a new instance of the GridTemplateColumn class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplate">
            <summary>
            Gets or sets the template that is used to display the contents of a cell.
            </summary>
            <value>The <see cref="T:Xamarin.Forms.DataTemplate"/> that is used to display the contents of a cell.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the GridColumn with your own view by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplate"/> of 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridTemplateColumn"/>. To specify the template that is used to display the contents of a cell, set the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplate"/> property.
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
            <syncfusion:GridTemplateColumn MappingName="CustomerID">
                <syncfusion:GridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Label Text = "{Binding CustomerID}" TextColor="Black" 
                               XAlign="Center" YAlign="Center" />
                    </DataTemplate>
                </syncfusion:GridTemplateColumn.CellTemplate>
            </syncfusion:GridTemplateColumn>
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#celltemplate"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplateSelector">
            <summary>
            Gets or sets the template selector that selects the template in which the Content of the cell to be displayed.
            </summary>
            <value>The <see cref="T:Xamarin.Forms.DataTemplateSelector"/> that selects the template in which the 
            Content of the cell to be displayed.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the GridColumn with your own view by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.GridTemplateColumn.CellTemplateSelector"/> of 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridTemplateColumn"/>. When the user wants to select the template between the available templates based on the value in the 
            underlying collection, the user can use this property. The Content of the cell will be displayed in the template selected.
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
            <sfgrid:GridTemplateColumn MappingName="Freight" >
             <sfgrid:GridTemplateColumn.CellTemplateSelector>
                <local:FreightTemplateSelector High = "{StaticResource high}"
                                               Average="{StaticResource average}"
                                               Low="{StaticResource low}"/>
             </sfgrid:GridTemplateColumn.CellTemplateSelector>
            </sfgrid:GridTemplateColumn>
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridtemplatecolumn"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridPickerColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> column that hosts <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker"/> in its cells.
            </summary>
            <remarks>Use GridPickerColumn to display columns of picker data as a <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker"/>.
            <para/>
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection. To populate the column, 
            bind the column to the data by using the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> property. The Binding property is 
            applied to the <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.GridPicker"/> view created in the column. The <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/>
            for the view in each cell is the data item for the row the cell is in. Therefore, to set up the binding you only have to 
            set the <see cref="P:Xamarin.Forms.Binding.Path"/>. Optionally, you can specify a <see cref="P:Xamarin.Forms.Binding.Converter"/> 
            if your data source and target are different types.</remarks>
            <example><code lang="XAML"><![CDATA[        
            <sfGrid:SfDataGrid.Columns>
               <sfgrid:GridPickerColumn BindingContext = "{x:Reference viewModel}"
                                        HeaderText="Dealer Name"                                 
                                        ItemsSource="{Binding CustomerNames}"                                 
                                        MappingName="DealerName"/>
            </sfGrid:SfDataGrid.Columns>
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridpickercolumn"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridPickerColumn.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridPickerColumn.TitleProperty">
            <summary>
            Identifies the Title bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridPickerColumn.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridPickerColumn.ValueMemberPathProperty">
            <summary>
            Identifies the ValueMemberPath bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridPickerColumn.#ctor">
            <summary>
            Initializes a new instance of the GridPickerColumn class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridPickerColumn.ItemsSource">
            <summary>
            Gets or sets the items source of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridPickerColumn"/>. The user can create a <see cref="T:Syncfusion.SfDataGrid.XForms.GridPickerColumn"/> and set its 
            ItemsSource property to a simple collection to display the collection items in the picker drop down.
            </summary>
            <value>The data source for the picker.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridPickerColumn pickerColumn = new GridPickerColumn()
            {
                BindingContext = viewModel,
                ItemsSource = viewModel.CustomerNames,
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridpickercolumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridPickerColumn.Title">
            <summary>
            Gets or sets the title of the GridPickerColumn.
            </summary>
            <value>The title of the GridPickerColumn.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridPickerColumn pickerColumn = new GridPickerColumn()
            {
                BindingContext = viewModel,
                ItemsSource = viewModel.CustomerNames,
                Title = "Customer Names"
            };
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridPickerColumn.DisplayMemberPath">
            <summary>
            Gets or sets the display member path that associates the column with a property in the data source.
            The property of the collection binded to the display member path will be the Content of the grid cell in normal and editing mode. 
            The value will be displayed in the grid cell only when the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> is equal to the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridPickerColumn.ValueMemberPath"/>, else the grid cell will be blank. 
            But the value corresponding to the given property in the data source will be displayed in the picker in edit mode.
            </summary>
            <value>The display member path that associates the column with a property in the data source.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridPickerColumn pickerColumn = new GridPickerColumn()
            {
                MappingName = "OrderID",
                DisplayMemberPath = "EmployeeID",
                ValueMemberPath = "OrderID",
                ItemsSource = viewmodel.PickerInfo
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#displaymemberpath"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridPickerColumn.ValueMemberPath">
            <summary>
            Gets or sets the value member path of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridPickerColumn"/> that associates the column with a property in the data source. 
            The column in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection whose <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> is equal to the value member path, 
            will be updated with the corresponding value for the selected item in the picker, when editing in the <see cref="T:Syncfusion.SfDataGrid.XForms.GridPickerColumn"/> is ended.
            </summary>
            <value>The value member path that associates the column with a property in the data source.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridPickerColumn pickerColumn = new GridPickerColumn()
            {
                MappingName = "OrderID",
                DisplayMemberPath = "EmployeeID",
                ValueMemberPath = "OrderID",
                ItemsSource = viewmodel.PickerInfo
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#valuememberpath"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridPickerColumn.SetDisplayBindingConverter">
            <summary>
            Sets the converter for the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> of column.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> column that hosts <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker"/> in its cells.
            </summary>
            <remarks>
            Use <see cref="T:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn"/> to display columns of date-time as picker data in <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker"/>.
            <para/>
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection. To populate the column, 
            bind the column to the data by using the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> property. The Binding property is 
            applied to the <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker"/> view created in the column. The <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/>
            for the view in each cell is the data item for the row the cell is in. Therefore, to set up the binding you only have to 
            set the <see cref="P:Xamarin.Forms.Binding.Path"/>. Optionally, you can specify a <see cref="P:Xamarin.Forms.Binding.Converter"/> 
            if your data source and target are different types.</remarks>
            <example><code lang="XAML"><![CDATA[        
            <sfGrid:SfDataGrid.Columns>
                <sfgrid:GridDateTimeColumn Format="d"
                                           HeaderText="Shipped Date"
                                           MappingName="ShippedDate" />
            </sfGrid:SfDataGrid.Columns>
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#griddatetimecolumn"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MaximumDateProperty">
            <summary>
            Identifies the MaximumDate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MinimumDateProperty">
            <summary>
            Identifies the MinimumDate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MaximumDate">
            <summary>
            Gets or sets the maximum date to be available in the <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker">SfDatePicker</see> in each record cell of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn"/>.
            </summary>
            <value>The maximum date to be available in the SfDatePicker.</value>
            <remarks>
            The <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker">SfDatePicker</see> enables you to scroll through a list of dates between the <see cref="P:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MinimumDate"/> 
            and <see cref="P:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MaximumDate"/> and select one from it.
            A <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker">SfDatePicker</see> control is loaded in the record cells of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn"/>. 
            It enables you to scroll through a list of dates between the <see cref="P:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MinimumDate"/>  and <see cref="P:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MaximumDate"/> and select one from it.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridDateTimeColumn dateTimeColumn = new GridDateTimeColumn();
            dateTimeColumn.MaximumDate = new DateTime(2020, 01, 01);
            dateTimeColumn.MinimumDate = new DateTime(1990, 01, 01);
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#griddatetimecolumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MinimumDate">
            <summary>
            Gets or sets the minimum date to be available in the <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker">SfDatePicker</see> in each record cell of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn"/>.
            </summary>
            <value>The minimum date to be available in the SfDatePicker.</value>
            <remarks>
            A <see cref="T:Syncfusion.SfDataGrid.XForms.Renderers.SfDatePicker">SfDatePicker</see> control is loaded in the record cells of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn"/>. 
            It enables you to scroll through a list of dates between the <see cref="P:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MinimumDate"/>  and <see cref="P:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.MaximumDate"/> and select one from it.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridDateTimeColumn dateTimeColumn = new GridDateTimeColumn();
            dateTimeColumn.MaximumDate = new DateTime(2020, 01, 01);
            dateTimeColumn.MinimumDate = new DateTime(1990, 01, 01);
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#griddatetimecolumn"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDateTimeColumn.SetValueBindingConverter">
            <summary>
            Sets the converter for the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.ValueBinding"/> of column.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridNumericColumn">
            <summary>
            Represents a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> column that hosts numeric Content in its cells.
            </summary>
            <remarks>Use GridNumericColumn to display columns of data in numeric format.
            <para/>
            To create a column, add it to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection. To populate the column, 
            bind the column to the data by using the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> property. 
            The Binding property is applied to the <see cref="T:Xamarin.Forms.Label"/> view created in the column.
            The <see cref="P:Xamarin.Forms.BindableObject.BindingContext"/> for the view in each cell is the data item for the row
            the cell is in. Therefore, to set up the binding you only have to set the <see cref="P:Xamarin.Forms.Binding.Path"/>. 
            Optionally, you can specify a <see cref="P:Xamarin.Forms.Binding.Converter"/> if you want to convert the data.</remarks>
            <example><code lang="XAML"><![CDATA[        
            <sfGrid:SfDataGrid.Columns>
                <sfgrid:GridNumericColumn NumberDecimalDigits="0"
                                          HeaderText="Product No"
                                          MappingName="ProductNo"/>
            </sfGrid:SfDataGrid.Columns>
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridnumericcolumn"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberDecimalDigitsProperty">
            <summary>
            Identifies the NumberDecimalDigits bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberDecimalSeparatorProperty">
            <summary>
            Identifies the NumberDecimalSeparator bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberGroupSeparatorProperty">
            <summary>
            Identifies the NumberGroupSeparator bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberGroupSizesProperty">
            <summary>
            Identifies the NumberGroupSizes bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberNegativePatternProperty">
            <summary>
            Identifies the NumberNegativePattern bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridNumericColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridNumericColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberDecimalDigits">
            <summary>
            Gets or sets the number of decimal digits to be displayed after the decimal point in the numeric values.
            </summary>
            <value>
            The number of decimal digits to be displayed after the decimal point in the numeric values.
            </value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn()
            {
                MappingName = "ProductNo",
                HeaderText = "Product No",
                NumberDecimalDigits = 0
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberDecimalSeparator">
            <summary>
            Gets or sets the string to use as the decimal separator in numeric values.
            </summary>
            <value>The string to use as the decimal separator in numeric values. 
            The default string used to separate the decimal part of the numeric value is "<b>.</b>" operator.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn()
            {
                MappingName = "ProductNo",
                HeaderText = "Product No",
                NumberDecimalSeparator = ":"
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberGroupSeparator">
            <summary>
            Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.
            </summary>
            <value>
            The string that separates groups of digits to the left of the decimal in numeric values. 
            The default string used to separate groups of digits to the left of the decimal in numeric values is "<b>,</b>" operator.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn()
            {
                MappingName = "ProductNo",
                HeaderText = "Product No",
                NumberGroupSeparator = "'"
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberGroupSizes">
            <summary>
            Gets or sets the number of digits in each group to the left of the decimal in numeric values.
            </summary>
            <value>
            The number of digits in each group to the left of the decimal in numeric values.
            </value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn()
            {
                MappingName = "ProductNo",
                HeaderText = "Product No",
                NumberGroupSizes = 3
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberNegativePattern">
            <summary>
            Gets or sets the format pattern for negative numeric values.
            </summary>
            <value>
            The format pattern for negative numeric values.
            The default pattern for negative number is "<b>-n</b>", where 'n' represents the number.
            </value>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#number-formatting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridNumericColumn.NumberFormatInfo">
            <summary>
            Gets or sets the number format info for formatting and parsing numeric value.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridNumericColumn.OnUpdateNumericBindingInfo(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Updates the binding of the data columns in the numeric column.
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridNumericColumn.SetDisplayBindingConverter">
            <summary>
            Sets the converter for the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.DisplayBinding"/> of column.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridNumericColumn.GetFormattedValue(System.Object)">
            <summary>
            Gets the Formatted value for the Content of a record cell in the column based on the Format and CultureInfo of the column.
            </summary>
            <param name="value">The actual value of the record cell in the column.</param>
            <returns>The formatted value based on the Format and CultureInfo properties of the column.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridEditorColumn">
            <summary>
            Provides the base implementation for all the editor columns in a SfDataGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridEditorColumn.AllowNullValueProperty">
            <summary>
            Identifies the AllowNullValue bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridEditorColumn.NullValueProperty">
            <summary>
            Identifies the NullValue bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridEditorColumn.MinValueProperty">
            <summary>
            Identifies the MinValue bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridEditorColumn.MaxValueProperty">
            <summary>
            Identifies the MaxValue dependency property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridEditorColumn.NullTextProperty">
            <summary>
            Identifies the NullText dependency property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditorColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridEditorColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.AllowNullValue">
            <summary>
            Gets or sets a value indicating whether the null values are allowed to the editor columns. When this property is enabled, 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.NullValue"/> or <see cref="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.NullText"/> will be set to the column, instead of the null value given by the user in edit mode.
            </summary>
            <value>
            <b>True</b> if the null value is allowed, otherwise <b>false</b>.
            The default value is <b>false</b>.
            </value>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn();
            numericColumn.AllowNullValue = true;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.NullValue">
            <summary>
            Gets or sets an object that is displayed instead of null value if the cell value is null, provided that <see cref="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.AllowNullValue"/> is 
            enabled.
            </summary>          
            <value>
            An object that is displayed instead of null value in the cell.
            </value>
            <remarks>
            The <b>NullValue</b> is applied, when the <see cref="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.AllowNullValue"/> property is enabled.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn();
            numericColumn.AllowNullValue = true;
            numericColumn.NullValue = 0;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.NullText">
            <summary>
            Gets or sets a string that is displayed instead of null value if the cell value is null, provided that <see cref="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.AllowNullValue"/> is 
            enabled.
            </summary>
            <value>
            A string that is displayed instead of null value in the cell, 
            provided that the <see cref="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.NullValue"/> is null.
            </value>
            <remarks>
            The <b>NullText</b> is applied, when the <see cref="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.AllowNullValue"/> property is enabled and 
            the <see cref="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.NullValue"/> is null.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridNumericColumn numericColumn = new GridNumericColumn();
            numericColumn.AllowNullValue = true;
            numericColumn.NullText = "null";
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.MinValue">
            <summary>
            Gets or sets the minimum value constraint of the column.
            </summary>
            <value>
            The minimum value constraint of the column.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridEditorColumn.MaxValue">
            <summary>
            Gets or sets the maximum value constraint of the column.
            </summary>
            <value>
            The maximum value constraint of the column.
            </value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridEditorColumn.GetFormattedValue(System.Object)">
            <summary>
            Gets the Formatted value for the Content of a record cell in the column based on the Format and CultureInfo of the column.
            </summary>
            <param name="value">The actual value of the record cell in the column.</param>
            <returns>The formatted value based on the Format and CultureInfo properties of the column.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridColumnSizer">
            <summary>
            Represents a class that handles the sizing for all the GridColumns in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridColumnSizer class using the specified datagrid instance,.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.#ctor">
            <summary>
            Initializes a new instance of the GridColumnSizer class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumnSizer.DataGrid">
            <summary>
            Gets the current instance of the SfDataGrid.
            </summary>
            <value>The current instance of the SfDataGrid.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.OnColumnPropertyChanged(Syncfusion.SfDataGrid.XForms.GridColumn,System.String)">
            <summary>
            Represents the method that will handle the property changes in grid columns.
            </summary>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> object.</param>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.ResetAutoWidth(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Resets the auto width for the specified column.
            </summary>
            <param name="column">The corresponding column to reset the auto width.</param>
            <remarks>The column width is reset to <b>double.Nan</b>, if the column sizing needs to be recalculate based on the data.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the column is null.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.SetAutoWidth(Syncfusion.SfDataGrid.XForms.GridColumn,System.Double)">
            <summary>
            Sets the width for the specified column based on <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer.Auto"/> column sizer.
            </summary>
            <param name="column">The corresponding column to set Auto width.</param>
            <param name="width">The corresponding width set as Auto width.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when the column is null.</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.Refresh(System.Boolean)">
            <summary>
            Refreshes the GridColumns in the view.
            </summary>
            <param name="needsLayout">A boolean value specifying whether layout is needed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.GetAutoRowHeight(System.Int32,Syncfusion.SfDataGrid.XForms.GridRowSizingOptions)">
            <summary>
            Gets the height for the specified row based on the row data Content.
            </summary>
            <param name="rowIndex">The corresponding row to set Auto height.</param>
            <param name="options">The RowSizingOptions.</param>
            <returns>Returns the height for the specified row based on the row data Content</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.InitializeGridColumnSizer(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initialize the Grid column sizer.
            </summary>
            <param name="grid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.WireEvent">
            <summary>
            Wires the events associated with <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumnSizer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.UnWireEvent">
            <summary>
            UnWires the events associated with <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumnSizer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.RefreshColumnSizer(System.Double)">
            <summary>
            Refreshes the GridColumns in the view with respect to the given view size.
            </summary>
            <param name="viewSize">size the SfDataGrid is rendered for</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.SetColumnWidth(Syncfusion.SfDataGrid.XForms.GridColumn,System.Double)">
            <summary>
            Sets the given width to the specified <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.
            </summary>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> object.</param>
            <param name="width">The width for the column.</param>
            <returns>Returns the actual width of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.GetFinalWidth(Syncfusion.SfDataGrid.XForms.GridColumn,System.Double)">
            <summary>
            Gets the final width after comparing the minimum, maximum and actual width of the column
            </summary>
            <param name="column">current column</param>
            <param name="width">current width</param>
            <returns>Returns the final width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.GetColumnToFill">
            <summary>
            Gets the column to fill the remaining view port size based on column sizer.
            </summary>
            <returns>the column to fill.</returns>        
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.Refresh(System.Double)">
            <summary>
            Refreshes the GridColumns in the view with respect to the given view size.
            </summary>
            <param name="viewSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.CalculateColumnSizerWidth(System.Double)">
            <summary>
            Calculates the width for the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="viewSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.IsFillOrAutoFillColumn(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Gets a value indicating whether the current column has column sizer auto fill
            </summary>
            <param name="column">current column</param>
            <returns>Returns a value indicating whether auto fill column is set for current column</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.SetColumnWidthBasedOnGridColumnSizer(System.Double,System.Collections.Generic.List{Syncfusion.SfDataGrid.XForms.GridColumn},Syncfusion.SfDataGrid.XForms.GridColumn,System.Double)">
            <summary>
            Sets the width for the GridColumns based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer"/>.
            </summary>
            <param name="totalColumnsSize">The total size of the columns.</param>
            <param name="calculatedColumns">The list of calculated columns.</param>
            <param name="lastColumn">The last column.</param>
            <param name="viewSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.CalculateAutoFitWidth(Syncfusion.SfDataGrid.XForms.GridColumn,System.Boolean)">
            <summary>
            Calculates and returns the auto width of the header cell and grid cell
            </summary>
            <param name="column">current column</param>
            <param name="isAuto">checks whether columnsizer is auto</param>
            <returns>Returns the auto width of the header cell and grid cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.GetColumnWidth(Syncfusion.SfDataGrid.XForms.GridColumn,System.Double)">
            <summary>
            Gets the column width
            </summary>
            <param name="column">current column</param>
            <param name="columnWidth">current width</param>
            <returns>Returns the column width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.CalculateHeaderWidth(Syncfusion.SfDataGrid.XForms.GridColumn,System.Boolean)">
            <summary>
            Calculates the header width
            </summary>
            <param name="column">current column</param>
            <param name="setWidth">current width</param>
            <returns>Returns the header width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.GetHeaderCellWidth(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Gets the header cell width
            </summary>
            <param name="column">current column</param>
            <returns>Returns the header cell width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.CalculateCellWidth(Syncfusion.SfDataGrid.XForms.GridColumn,System.Boolean)">
            <summary>
            Calculates the width of the grid cell
            </summary>
            <param name="column">current column</param>
            <param name="setWidth">Indicates whether the calculated width can be set to the column</param>
            <returns>Returns the width of the grid cell</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.GetCellWidth(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Gets the cell width
            </summary>
            <param name="column">current column</param>
            <returns>Returns the cell width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.CalculateResultWidth(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object,System.Double,System.Double)">
            <summary>
            Calculates and returns the greatest width among the default column width, measured width and the actual width
            </summary>
            <param name="column">current column</param>
            <param name="data">row data</param>
            <param name="resultWidth">The final width</param>
            <param name="measuredWidth">measured width</param>
            <returns>Returns the greatest width among the default column width, measured width and the actual width</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.CalculateCellSize(Xamarin.Forms.Size,Syncfusion.SfDataGrid.XForms.GridColumn,System.Object,Syncfusion.SfDataGrid.XForms.GridQueryBounds,System.Double)">
            <summary>
            Gets the size of the cell to measure the width of the specified column.
            </summary>
            <param name="cellSize">size of the cell</param>
            <param name="column">
            The corresponding column to measure its cell size.
            </param>
            <param name="data">
            The corresponding data to measure cathe text size in cell.
            </param>
            <param name="bounds">Indicates a value whether to measure width or height</param>
            <param name="measuredWidth">Measured width</param>
            <returns>
            Returns the size of the cell.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.GetDisplayText(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            Gets the display text of cell for the specified column and record.
            </summary>
            <param name="column">
            The corresponding column to get the display text of cell.
            </param>
            <param name="record">
            The corresponding record to get the display text.
            </param>
            <returns>
            Returns the display text of the corresponding column.
            </returns>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridColumnSizer.Control">
            <summary>
            Gets or sets the control to measure the template for column sizing calculation.
            </summary>
            <value>
            The <see cref="T:Xamarin.Forms.ContentView"/> to measure the template for column sizing calculation. 
            </value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.GetControl(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            Gets the Content control to measure the template when column sizer is Auto.
            </summary>
            <param name="column">
            The corresponding column to get the Content control.
            </param>
            <param name="record">
            The corresponding record to get the Content control.
            </param>
            <returns>
            Returns the <see cref="T:Xamarin.Forms.ContentView"/> for the specified column and record.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.MeasureTemplate(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object,Syncfusion.SfDataGrid.XForms.GridQueryBounds)">
            <summary>
            Measures the size of the template when the column sizer is <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer.Auto"/>.
            </summary>        
            <param name="column">
            The corresponding column to measure the template.
            </param>        
            <param name="rowData">Row data vaue</param>
            <param name="bounds">GridQueryBounds instance</param>
            <returns>
            Returns the size of template.
            </returns>       
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.MeasureHeaderTemplate(Syncfusion.SfDataGrid.XForms.GridColumn,Syncfusion.SfDataGrid.XForms.GridQueryBounds)">
            <summary>
            Measures the size of the template when the column sizer is <see cref="!:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer.Auto"/>.
            </summary>        
            <param name="column">
            The corresponding column to measure the template.
            </param> 
            <param name="bounds">Indicates a value whether to measure width or height</param>
            <returns>
            Returns the size of template.
            </returns>       
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.SetStarWidthForColumns(System.Double,System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.XForms.GridColumn})">
            <summary>
            Sets star width for the remaining columns for which the widths are yet to be assigned.
            </summary>
            <param name="columnsWidth">The width of the columns.</param>
            <param name="columns">The collection of remaining <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.SetColumnWidthForRemainingColumns(System.Collections.Generic.IEnumerable{Syncfusion.SfDataGrid.XForms.GridColumn})">
            <summary>
            Sets the default column width for the columns that are yet to be assigned width after applying column sizer calculations.
            </summary>
            <param name="remainingColumns">The collection of remaining <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.MeasureTextWidth(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.GridColumn,System.String)">
            <summary>
            Measures and returns the text width based on the cell value
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="column">current column</param>
            <param name="text">current column text</param>
            <returns>Returns the text width based on the cell value</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridColumnSizer.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider">
            <summary>
            Implements <see cref="T:Syncfusion.Data.ItemPropertiesProvider"/> to get / set value on the underlying object which is used by <see cref="T:Syncfusion.Data.CollectionViewAdv"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider.#ctor(Syncfusion.Data.ICollectionViewAdv,Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridItemPropertiesProvider class using the specified values.
            </summary>
            <param name="view">The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> representing the underlying collection of the datagrid.</param>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider.SetDataGrid(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Sets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider.GetDisplayValue(System.Object,System.String,System.Boolean)">
            <summary>
            Gets the display value of particular property for the specified record and property name.
            </summary>
            <param name="record">
            The corresponding record to get formatted value.
            </param>
            <param name="propName">
            The corresponding property name to get formatted value.
            </param>
            <param name="canUseBindingReflection">
            If true then use binding reflection to get the display value
            </param>
            <returns>
            Returns the display value of particular property based on the specified record and property name.
            </returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridDynamicPropertiesProvider">
            <summary>
            Implements <see cref="T:Syncfusion.Data.DynamicPropertiesProvider"/> to get / set value on the underlying dynamic object which is used by <see cref="T:Syncfusion.Data.CollectionViewAdv"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDynamicPropertiesProvider.#ctor(Syncfusion.Data.ICollectionViewAdv,Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridDynamicPropertiesProvider"/> class.
            </summary>
            <param name="view">The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> representing the underlying collection of the datagrid.</param>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDynamicPropertiesProvider.SetDataGrid(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Sets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridDynamicPropertiesProvider.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="isDisposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridXElementAttributesProvider">
            <summary>
            Implements <see cref="T:Syncfusion.Data.XElementAttributesProvider"/> to Get / Set value on the underlying object which is used by <see cref="T:Syncfusion.Data.CollectionViewAdv"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridXElementAttributesProvider.#ctor(Syncfusion.Data.ICollectionViewAdv,Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridXElementAttributesProvider"/> class.
            </summary>
            <param name="view">The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> representing the underlying collection of the datagrid.</param>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridXElementAttributesProvider.SetDataGrid(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Sets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridXElementAttributesProvider.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="isDisposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridModel">
            <summary>
            Represents a wrapper class for a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control handling the collection and view related operations.
            </summary>
            <remarks>GridModel listens to the collection changes in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control and responds to them.
            It updates the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> in response to the collection changes.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridModel class using the specified <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> object.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridModel.View">
            <summary>
            Gets the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridModel.IsInSort">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> is changing.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridModel.IsSortDescriptionChanged">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridModel.IsSortColumnChanged">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridModel.HasGroup">
            <summary>
            Gets a value indicating whether a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> has group.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.WireEvents">
            <summary>
            Wires the required events for the collections in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnTableSummaryPositionChanged(Syncfusion.SfDataGrid.XForms.GridTableSummaryRow,System.Object)">
            <summary>
            Update the table summary row position based on the runtime position changes.
            </summary>
            <param name="summaryRow">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow"/> object</param>
            <param name="position">A <see cref="T:Syncfusion.SfDataGrid.XForms.Position"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.WireColumnDescriptor(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Wires the required events for a <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.
            </summary>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.UnWireEvents">
            <summary>
            UnWires the required events for the collections in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.UnWireColumnDescriptor(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            UnWires the required events for a <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/>.
            </summary>
            <param name="column">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnCaptionSummaryRowChanged(Syncfusion.SfDataGrid.XForms.GridSummaryRow)">
            <summary>
            Method which helps to update the view when caption summary row is changed.
            </summary>
            <param name="row">The grid summary row.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnGridColumnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raised when the Columns collection gets changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.GetSortColumnsNotInGroupColumns">
            <summary>
            Method which helps to get the sortColumn which are not in the GroupedColumns
            </summary>
            <returns>A collection of <see cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.GetSortDescriptionNotInGroupDescription">
            <summary>
            Method which helps to get the unavailable sort description which property names is not in group description
            </summary>
            <returns>A collection of <see cref="T:Syncfusion.Data.SortDescription"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.ResetColumns(System.Boolean)">
            <summary>
            Method which helps to reset the column count and column indexes when group added or removed
            </summary>
            <param name="removeIndents">Value indicating whether indent height is considered or not</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.Suspend">
            <summary>
            Method helps to suspend all the collection change update when doing grouping operations.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.Resume">
            <summary>
            Method helps to suspend all the collection change update when doing grouping operations.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.DataGrid_OnGroupColumnDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the GroupColumnDescriptions is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.DataGrid_OnTableSummaryRowsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when TableSummaryRows collection is changed.
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.DataGrid_OnGroupSummaryRowsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when GroupSummaryRows collection is changed.
            </summary>
            <param name="sender">SfDataGrid</param>
            <param name="e">NotifyCollectionChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.UpdateHeaderCells(System.Boolean)">
            <summary>
            Updates the header cells in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="updateCellStyle">A boolean value specifying whether to update the cell style.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.UpdateExpanderIconSourceForCaptionRows">
            <summary>
            Updates the 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.ExpandGroupsAtLevel(System.Collections.Generic.List{Syncfusion.Data.Group},System.Int32)">
            <summary>
            Method which helps to expand all the groups in Specific level
            </summary>
            <param name="groups">current group</param>
            <param name="groupLevel">The level of the current group</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.CollapseGroupsAtLevel(System.Collections.Generic.List{Syncfusion.Data.Group},System.Int32)">
            <summary>
            Method which helps to collapse all the groups in Specific level
            </summary>
            <param name="groups">current group</param>
            <param name="groupLevel">The level of the current group</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.ExpandGroup(Syncfusion.Data.Group)">
            <summary>
            Method which helps to expand the specific group by passing the corresponding group.
            </summary>
            <param name="group">The group to be expanded.</param>
            <returns>Returns a boolean value indicating whether this expanding action is succeeded or failed</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.RestExpandedState(Syncfusion.Data.Group)">
            <summary>
            Resets the expand state
            </summary>
            <param name="group">Group instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.CollapseGroup(Syncfusion.Data.Group)">
            <summary>
            Method which helps to collapse the specific group by passing the corresponding group.
            </summary>
            <param name="group">The group to be collapsed.</param>
            <returns>Returns a boolean value indicating whether this collapsing action is succeeded or failed</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.RefreshDataRowForGroup(System.Int32,System.Boolean)">
            <summary>
            Refresh data row for group
            </summary>
            <param name="fromRowIndex">The row index from which data has to be refreshed</param>
            <param name="invalidateMeasure">Indicates a value whether to begin a layout pass.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.DataGrid_SortComparers_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortComparers"/> is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnTopLevelGroupCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the top level group collection in <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnRecordPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Occurs when the record property in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnSourceCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the source collection in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.CheckForExistingGroupDescription(System.String)">
            <summary>
            Check whether the given column name is already present in <see cref="P:Syncfusion.Data.ICollectionView.GroupDescriptions"/> or not.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>A boolean value denoting whether the given column name is already present in <see cref="P:Syncfusion.Data.ICollectionView.GroupDescriptions"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.CheckForExistingGroupColumn(System.String)">
            <summary>
            Check whether the corresponding column name is already present in <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupColumnDescriptions"/> or not.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>A boolean value denoting whether the corresponding column name is already present in <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupColumnDescriptions"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnRecordCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/>'s collection is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.RefreshView(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction,System.Int32,System.Int32)">
            <summary>
            Refreshes the view when the row index is not in the visible region.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="count">The count.</param>
            <param name="action">The action.</param>
            <param name="recordIndex">The record index.</param>
            <param name="recordCount">The record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.UpdateDataRow(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the data row when the row index is in the visible region.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnGroupDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the <see cref="P:Syncfusion.Data.ICollectionView.GroupDescriptions"/> collection in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.SetIsHidden(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Sets IsHidden property.
            </summary>
            <param name="action">NotifyCollectionChanged action</param>
            <param name="groupedColumns">grouped column</param>
            <param name="columnName">current column</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.InitializeGrouping">
            <summary>
            Add the initial Groupdescription to GropDropArea
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.UpdateView(System.Int32,System.Int32,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Updates the view. Inserts  or deletes visible lines when row index is in visible region.
            </summary>
            <param name="index">The Index.</param>
            <param name="count">The count.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.RefreshDataRow">
            <summary>
            Refreshes the <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> objects in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.ResetRowIndex(Syncfusion.SfDataGrid.XForms.DataRowBase)">
            <summary>
            Resets the row index of the specified <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/>.
            </summary>
            <param name="dr">A <see cref="T:Syncfusion.SfDataGrid.XForms.DataRow"/> object.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.RefreshView">
            <summary>
            Refreshes the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.MakeSort(Syncfusion.SfDataGrid.XForms.GridColumn)">
            <summary>
            Makes the sort and remove the sort in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. 
            Executes when a header cell is touched if the AllowSorting property in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> 
            and the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> associated with the header cell is <b>true</b>. 
            <para/>
            Adds and clears <see cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> collection in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="gridColumn">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> object to be sorted.</param>
            <exception cref="T:System.InvalidOperationException">Mapping Name necessary for Sorting</exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.ShowSortNumbers">
            <summary>
            Helps to make numbering for the sorted column
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.CollapseSortNumber">
            <summary>
            Collapse the sort number visibility when ShowSortNumber property sets false
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.OnSortDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the sort descriptions changed event.
            Checks whether sort description needs to be added, removed, replaced or reset when sort description changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.DataGrid_SortColumnDescriptions_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the sort columns descriptions changed event.
            Checks whether sort description needs to be added, removed, replaced or reset when sort description changes.
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.RaiseSortColumnsChanging(System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changing event.
            Calls the raise column changing method in the DataGrid to check whether SortColumnChanged event can be called or not.
            </summary>
            <returns><b>true</b>, if sort columns changing is raised, <b>false</b> otherwise.</returns>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.RaiseSortColumnsChanged(System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changed event.
            Calls the raise column changed method in the DataGrid to check whether SortColumnChanging event is called or not.
            </summary>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridModel.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper">
            <summary>
            Represents the wrapper class that implements the <see cref="T:Syncfusion.Data.QueryableCollectionView"/> to create 
            a queryable collection based on which data manipulation is performed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.#ctor(System.Collections.IEnumerable,Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridQueryableCollectionViewWrapper class using the specified source and dataGrid object.
            </summary>
            <param name="source">The item source of the collection.</param>
            <param name="grid">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.GetFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Func for the given property, data operation and the reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for the property, data operation and reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Expression Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.GetDisplayValueFunc(System.String,Syncfusion.Data.DataOperation)">
            <summary>
            Returns a Func for getting the display value for the given property and data operation.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <returns>Func for getting the display value for the given property and data operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.CreateItemPropertiesProvider">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider"/> class.
            </summary>
            <returns>A new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider"/> class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.GetDataGrid">
            <summary>
            Gets the reference of the DataGrid in the view.
            </summary>
            <returns>The reference of the DataGrid in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.CreateRecords">
            <summary>
            Create records list based on the source provided by view.
            </summary>
            <returns>
            Returns RecordsList.
            </returns>
            <remarks>
            Creates <see cref="T:Syncfusion.Data.VirtualRecordsList"/> when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.CreateTopLevelGroup">
            <summary>
            Creates TopLevelGroup while grouping for view.
            </summary>
            <returns>Returns TopLevelGroup.</returns>
            <remarks>
            Creates <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingTopLevelGroup"/> when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>  
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridQueryableCollectionViewWrapper.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CollectionViewExtensions">
            <summary>
            Represents a class that provides extension methods for getting the func of the collection view.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CollectionViewExtensions.GetValueFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.XForms.GridColumn,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode,System.String)">
            <summary>
            Gets ValueFunc for based on corresponding  column and DataOperationMode
            </summary>
            <param name="view">CollectionView Adv</param>
            <param name="column">the current grid column</param>
            <param name="operation">Data Operation</param>
            <param name="mode">Grouping mode</param>
            <param name="propertyName">property Name</param>
            <returns>Return ValueFunc for based on corresponding  column and DataOperationMode</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CollectionViewExtensions.GetValueExpressionFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.XForms.GridColumn,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Gets ValueExpressionFunc for corresponding column and data operation
            </summary>
            <param name="view">CollectionView Adv</param>
            <param name="column">Current column</param>
            <param name="operation">Data Operation</param>
            <param name="mode">The given data reflection mode</param>
            <returns>Returns ValueExpressionFunc for corresponding column and data operation</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CollectionViewExtensions.GetDynamicFunc(Syncfusion.Data.CollectionViewAdv)">
            <summary>
            Returns Dynamic Func to reflect the value in dynamic collection
            </summary>
            <param name="view">CollectionView Adv</param>
            <returns>Dynamic collection Func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CollectionViewExtensions.GetDynamicExpressionFunc(Syncfusion.Data.CollectionViewAdv)">
            <summary>
            Returns Dynamic Expression Func to reflect the value in Dynamic collection
            </summary>
            <param name="view">CollectionView Adv</param>
            <returns>Dynamic collection Expression Func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CollectionViewExtensions.GetUnboundFunc(Syncfusion.Data.CollectionViewAdv,Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.SfDataGrid.XForms.GridUnboundColumn)">
            <summary>
            Gets Unbound Func Value for sorting and grouping
            </summary>
            <param name="view">current view</param>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="column">Current column</param>
            <returns>Returns Unbound Func Value for sorting and grouping</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CollectionViewExtensions.GetXElementAttributeFunc(Syncfusion.Data.CollectionViewAdv)">
            <summary>
            To be added
            </summary>
            <param name="view">current view</param>
            <returns>Returns the added view</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CollectionViewExtensions.GetXElementFunc(Syncfusion.Data.CollectionViewAdv)">
            <summary>
            To be added
            </summary>
            <param name="view">current view</param>
            <returns>Returns the added view.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSummaryColumn">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.Data.ISummaryColumn"/> that contains properties exposed through ISummaryColumn
            for getting information on the summary values to be computed for the Groups.
            </summary>   
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#defining-summary-for-column-1"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridSummaryColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Template">
            <summary>
            Gets or sets the template that is used to display the contents of a summary column.
            </summary>
            <value>The <see cref="T:Xamarin.Forms.DataTemplate"/> that is used to display the contents of a caption summary cell.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the GridSummaryColumn with your own view by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Template"/> of 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridSummaryColumn"/>. To specify the template that is used to display the contents of a caption summary cell, set the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Template"/> property.
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> also allows the user to customize the GridSummaryColumn with different type of views by setting <see cref="T:Xamarin.Forms.DataTemplateSelector"/> to the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Template"/>.
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
                <syncfusion:GridSummaryColumn.Template>
                    <DataTemplate>
                        <Label Text = "Caption Column" TextColor="Black" 
                               XAlign="Center" YAlign="Center" />
                    </DataTemplate>
                </syncfusion:GridSummaryColumn.Template>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.CustomAggregate">
            <summary>
            Gets or sets the custom aggregate of the GridSummary column. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides the built in aggregate types for calculating 
            the values for the GridSummary column in the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.SummaryType"/> of the GridSummaryColumn. The user can implement their own aggregate 
            function when the built in aggregate function does not meet his requirement using this property. When the user defines his own aggregate 
            function in the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.CustomAggregate"/>, he needs to set the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.SummaryType"/> as <see cref="F:Syncfusion.Data.SummaryType.Custom"/>.
            </summary>
            <value>The custom aggregate of the GridSummary column.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to implement your own aggregate functions, when the built-in aggregate functions do not meet your 
            requirement.The user can calculate the summary values based on custom logic using this property. When the user defines his own aggregate 
            function in the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.CustomAggregate"/>, he needs to set the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.SummaryType"/> as <see cref="F:Syncfusion.Data.SummaryType.Custom"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "CaptionSummary",
            CustomAggregate  = new CustomAggregate(),
            MappingName = "OrderID",
            SummaryType = SummaryType.Custom
            });
            
            //CustomAggregate.cs
            public class CustomAggregate : ISummaryAggregate
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#custom-summaries"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Format">
            <summary>
            Gets or sets the format to be applied to the summary value. The user can format the summary value by setting the appropriate format 
            after the aggregate function followed by a colon(:) in <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Format"/> property.
            </summary>
            <value>The format to be applied to the summary value.</value>  
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "CaptionSummary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#formatting-summary"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.MappingName">
            <summary>
            Gets or sets the mapping name of the summary column, that is used for summary calculation.
            </summary>
            <value>The column name to be used for summary calculation.</value>   
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "CaptionSummary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#defining-summary-for-column-1"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Name">
            <summary>
            Gets or sets the name of the summary column that helps to denote the GridSummaryColumn in <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Title"/>. 
            The user can format the summary value for row using <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Title"/> when <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> 
            set to true.
            </summary>
            <value>The name of the summary column.</value>
            <remarks>
            The caption of the summary can be displayed either in the summary row or summary column, if the caption is displayed in the summary row 
            by setting <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> as true. The summary row defines the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Title"/> which makes 
            use of the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Name"/> to display its value.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.ShowSummaryInRow = true;
            summaryRow.Title = "Total Salary:{TotalSalary}";
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#formatting-summary-for-row-using-title-property"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.SummaryType">
            <summary>
            Gets or sets a value indicating the summary type of the GridSummary column for calculating values of the GridSummary column. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides the built in aggregate types for calculating the values for the GridSummary column in the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.SummaryType"/>. The user can implement their own aggregate function when the built in aggregate 
            function does not meet his requirement using <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.CustomAggregate"/> property.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.SummaryType"/> of the summary column.</value>      
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides the built in aggregate types for calculating the values for the GridSummary column in the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.SummaryType"/>. The user can implement their own aggregate function when the built in aggregate 
            function does not meet his requirement using <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.CustomAggregate"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#formatting-summary"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSummaryRow">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.Data.ISummaryRow"/> that contains properties exposed through ISummaryRow
            for getting information on the summary values to be computed for the Groups in <see cref="T:Syncfusion.Data.TopLevelGroup"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSummaryRow.#ctor">
            <summary>
            Initializes a new instance of the GridSummaryRow class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Name">
            <summary>
            Gets or sets the name of the summary row.
            </summary>
            <value>The name of the summary row.</value>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.Name = "CaptionSummary";
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow">
            <summary>
            Gets or sets a value indicating whether to show summary in row. By setting the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> to true, you can display the 
            summary information in the row, by defining the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Title"/> based on <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Name"/>.
            </summary>
            <value><b>True</b> if show summary in row, otherwise <b>false</b>.</value>
            <remarks>
            The caption of the summary can be displayed either in the summary row or summary column, if the caption is displayed in the summary row 
            by setting <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> as true. The summary row defines the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Title"/> which makes 
            use of the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Name"/> to display its value.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.ShowSummaryInRow = true;
            summaryRow.Title = "Total Salary:{TotalSalary}";
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#defining-summary-for-row-1"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.SummaryColumns">
            <summary>
            Gets or sets the collection of summary columns in the summary row. The summary columns will be defined and added to the summary row using 
            this property.
            </summary>
            <value>The collection of summary columns in the summary row.</value>
            <example>
             <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Title">
            <summary>
            Gets or sets the title to be displayed in the summary row. When <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> is true, the title 
            of the summary row will be displayed.The summary row defines the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Title"/> which makes use of the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Name"/> to display its value.
            </summary>
            <value>The title to be displayed in the summary row.</value>
            <remarks>
            The caption of the summary can be displayed either in the summary row or summary column, if the caption is displayed in the summary row 
            by setting <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.ShowSummaryInRow"/> as true. The summary row defines the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Title"/> which makes 
            use of the <see cref="P:Syncfusion.SfDataGrid.XForms.GridSummaryColumn.Name"/> to display its value. The title of the summary will be displayed as the caption of the 
            summary row.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridSummaryRow summaryRow = new GridSummaryRow();
            summaryRow.ShowSummaryInRow = true;
            summaryRow.Title = "Total Salary:{TotalSalary}";
            summaryRow.SummaryColumns.Add(new GridSummaryColumn
            {
            Name = "TotalSalary",
            MappingName = "Salary",
            Format = "{Sum:c}",
            SummaryType = SummaryType.DoubleAggregate
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#defining-summary-for-row-1"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSummaryRow.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridGroupSummaryRow">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.SfDataGrid.XForms.GridSummaryRow"/> that defines summary information of group summary row in SfDataGrid. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridGroupSummaryRow.#ctor">
            <summary>
            Initializes a new instance of the GridTableSummaryRow class.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.SfDataGrid.XForms.GridSummaryRow"/> that defines summary information of table summary row in SfDataGrid. 
            </summary>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#defining-summary-for-row"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow.#ctor">
            <summary>
            Initializes a new instance of the GridTableSummaryRow class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow.DataGrid">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow.Position">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.Position"/> of the table summary row. The table summary row can be displayed either 
            in the top below the header or bottom of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> by using this property.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.Position"/> of the table summary row. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.XForms.Position.Bottom"/>.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to add table summary rows either at top or bottom positions using 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow.Position"/> property.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            GridTableSummaryRow topSummaryRow = new GridTableSummaryRow();
            topSummaryRow.Position = Position.Top;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#positioning-tablesummaryrows"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow.PositionProperty">
            <summary>
            Identifies the Position bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow.OnTableSummaryRowPositionChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the position property is changed.
            </summary>
            <param name="bindable">The GridTableSummaryRow as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.CalculationExtensions">
            <summary>
            Represents a class that implements the calculation for GridUnboundColumn.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.GetCompiledExpression(System.Object,System.Boolean,System.String,Syncfusion.SfDataGrid.XForms.ExpressionError@)">
            <summary>
            Gets Compiled Expression
            </summary>
            <param name="source">The data</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns Compiled Expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.GetSimpleExpression(System.Object,System.Boolean,System.String,System.Linq.Expressions.ParameterExpression,Syncfusion.SfDataGrid.XForms.ExpressionError@)">
            <summary>
            Get Simple Expression
            </summary>
            <param name="source">The data</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns Simple Expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.CompileToExpression(System.Object,System.Linq.Expressions.ParameterExpression,System.Boolean,System.String@,System.Char[],System.Char[],Syncfusion.SfDataGrid.XForms.ExpressionError@)">
            <summary>
            Compile to Expression
            </summary>
            <param name="source">The data</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula">The formula applied</param>
            <param name="operations">Specifies the operation set to be performed</param>
            <param name="allOperations">Specifies all the available operations</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns the complied expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.CompileToExpressionSingleValue(System.Object,System.Linq.Expressions.ParameterExpression,System.Boolean,System.String@,System.Char[],System.Char[],Syncfusion.SfDataGrid.XForms.ExpressionError@)">
            <summary>
            Gets a value whether the complex expression can be converted to a single expression
            </summary>
            <param name="source">The complex expression</param>
            <param name="paramExp">param needs to be added</param>
            <param name="caseSensitive">case sensitive needs to be added</param>
            <param name="formula">formula needs to be added</param>
            <param name="operations">Operation needs to be added</param>
            <param name="allOperations">To be added</param>
            <param name="error">specifies the possible expression error</param>
            <returns>Returns a value whether the complex expression can be converted to a single expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.CoerceType(System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,Syncfusion.SfDataGrid.XForms.ExpressionError@)">
            <summary>
            Casting the type according to the expression
            </summary>
            <param name="leftExp">Specifes the left part of expression</param>
            <param name="rightExp">Specifes the right part of expression</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.GetExpression(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,System.String,System.Char,Syncfusion.SfDataGrid.XForms.ExpressionError@)">
            <summary>
            Gets Expression
            </summary>
            <param name="source">The source.</param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="paramExp">Specifies the parameter expression applied</param>
            <param name="left">Specifes the left part of expression</param>
            <param name="right">Specifes the right part of expression</param>
            <param name="operand">Specifies the operand</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns expression</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.GetFunctionName(System.Char)">
            <summary>
            Gets function name
            </summary>
            <param name="c">Specifies the character containing the key word for the function</param>
            <returns>Function Name as string</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.GetExpressionPiece(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,Syncfusion.SfDataGrid.XForms.ExpressionError@)">
            <summary>
            Gets the expression piece.
            </summary>
            <param name="source">The source.</param>
            <param name="caseSensitive">A boolean value specifying whether to enable case sensitive or not.</param>
            <param name="paramExp">The parameter expression.</param>
            <param name="piece">The piece.</param>
            <param name="error">The expression error.</param>
            <returns>Returns the expression piece.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.CalculationExtensions.TokenizeStrings(System.String,Syncfusion.SfDataGrid.XForms.ExpressionError@)">
            <summary>
            Tokenize the strings
            </summary>
            <param name="formula">The formula applied</param>
            <param name="error">Specifies one of the values from the ExpressionError enum</param>
            <returns>Returns the tokenized string</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn">
            <summary>    
            Represents the column which is used to display additional information in columns which are not bound with data object.
            </summary>
            <remarks>
            It is mandatory to specify the `GridColumn.MappingName` for `GridUnboundColumn` with some name to identify the column. It is not necessary to define name of field in the data object.
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/unbound-column"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.CaseSensitive">
            <summary>
            Gets or sets a value that indicates the casing of <see cref="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Expression"/> evaluation for computing the display value of the 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/>.
            </summary>
            <value>
            <b>True</b> if the case sensitive is enabled, otherwise <b>false</b>. The default value is <b>true</b>.
            </value>
            <remarks>
            The user can specify the arithmetic or logic expression using <see cref="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Expression"/> property to compute the display value for the 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/>. By default, the expression is evaluated with casing. The user can disable the casing while evaluating 
            the <see cref="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Expression"/> by setting <see cref="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.CaseSensitive"/> property to false.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            GridUnboundColumn DiscountColumn = new GridUnboundColumn()
            {
                MappingName = "DiscountPrice",
                HeaderText = "Discount Price",
                Expression = "Unitprice*discount",
                CaseSensitive = false
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/unbound-column#using-expression"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.CaseSensitiveProperty">
            <summary>
            Identifies the CaseSensitive bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Expression">
            <summary>
            Gets or sets an expression which used to calculate values for <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/>. The user can populate the data for unbound 
            column by setting <see cref="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Expression"/> or <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.Format"/> property.
            </summary>
            <value>
            A string that specifies an expression to populate the data for <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/>. The default value is <b>string.Empty</b>.
            </value>
            <remarks>
            The user can specify the arithmetic or logic expression using <see cref="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Expression"/> property to compute the display value for the 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/>. By default, the expression is evaluated with casing. The user can disable the casing while evaluating 
            the <see cref="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Expression"/> by setting <see cref="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.CaseSensitive"/> property to false.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            GridUnboundColumn DiscountColumn = new GridUnboundColumn()
            {
                MappingName = "DiscountPrice",
                HeaderText = "Discount Price",
                Expression = "UnitPrice*Discount"
            };
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/unbound-column#using-expression"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.ExpressionProperty">
            <summary>
            Identifies the Expression bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Error">
            <summary>
            Gets the constants that specify the possible expression error in <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.OnExpressionPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when expression property is changed.
            </summary>
            <param name="column">The GridUnboundColumn as bindable object.</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.OnFormatPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when Format property is changed
            </summary>
            <param name="column">The GridUnboundColumn as bindable object.</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.ComputeValue(System.Object)">
            <summary>
            Gets Computed value for expression in UnboundColumn
            </summary>
            <param name="record">Specifies the current row data</param>
            <returns>Value of compiled expression as object</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.GetFormattedValue(System.Object)">
            <summary>
            Gets the Formatted value for the Content of a record cell in the column based on the Format and CultureInfo of the column.
            </summary>
            <param name="value">The actual value of the record cell in the column.</param>
            <returns>The formatted value based on the Format and CultureInfo properties of the column.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridUnboundColumn.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView">
            <summary>
            Represents the wrapper class that inherits the <see cref="T:Syncfusion.Data.VirtualizingCollectionView"/> to create a collection view.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the GridVirtualizingCollectionView class using the specified source.
            </summary>
            <param name="source">An <see cref="T:System.Collections.IEnumerable"/> collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.#ctor">
            <summary>
            Initializes a new instance of the GridVirtualizingCollectionView class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.GetFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Func for the given property, data operation and the reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for the property, data operation and reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Expression Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.GetDisplayValueFunc(System.String,Syncfusion.Data.DataOperation)">
            <summary>
            Returns a Func for getting the display value for the given property and data operation.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <returns>Func for getting the display value for the given property and data operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.CreateItemPropertiesProvider">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider"/> class.
            </summary>
            <returns>A new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridItemPropertiesProvider"/> class.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.GetDataGrid">
            <summary>
            Gets the reference of the DataGrid in the view.
            </summary>
            <returns>The reference of the DataGrid in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.SetDataGrid(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initialize an instance for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> class.
            </summary>
            <param name="sfDataGrid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView"/> class.
            </summary>
            <param name="isDisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingCollectionView.DetachGridView">
            <summary>
            Method to unwire the grid in the view.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingTopLevelGroup">
            <summary>
            Initializes the GridVirtualizingTopLevelGroup class.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingTopLevelGroup.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.Data.CollectionViewAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingTopLevelGroup"/> class.
            </summary>
            <param name="grid">The reference of the SfDataGrid.</param>
            <param name="collectionView">The underlying collection in the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridVirtualizingTopLevelGroup.Invalidate(System.Int32,System.Int32)">
            <summary>
            Invalidates the rows that lies between the given index and the count.
            </summary>
            <param name="index">The starting index of th row to be invalidated.</param>
            <param name="count">The number of rows to be invalidated.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescription">
            <summary>
            Represents a class for that contains the grouping information like group column's name and converter based on which grouping for a column is processed in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GroupColumnDescription.ColumnNameProperty">
            <summary>
            Identifies the ColumnName bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.GroupColumnDescription.ConverterProperty">
            <summary>
            Identifies the Converter bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GroupColumnDescription.#ctor">
            <summary>
            Initializes a new instance of the GroupColumnDescription class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GroupColumnDescription.ColumnName">
            <summary>
            Gets or sets the column name for grouping. This property represents the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> of the column 
            which should be grouped.
            </summary>
            <value>The column name for grouping.</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupColumnDescriptions.Add (new GroupColumnDescription () {
            ColumnName = "CustomerID",
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#programmatic-grouping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GroupColumnDescription.Converter">
            <summary>
            Gets or sets the converter for grouping. This property is used when the user needs to group the column with their custom logic. 
            The user must assign the converter class implementing the <see cref="T:Xamarin.Forms.IValueConverter"/> to this property.
            </summary>
            <value>The converter for grouping.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to group a column based on custom logic when the standard grouping techniques do not meet 
            the requirements. When the user wants to apply grouping to the column based on his custom logic, 
            he needs to the write the converter class implementing the <see cref="T:Xamarin.Forms.IValueConverter"/> and assign it to this property.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupColumnDescriptions.Add (new GroupColumnDescription () {
            ColumnName = "CustomerID",
            Converter = new GroupConverter()
            });
            
            //GroupConverter.cs
            public class GroupConverter : IValueConverter
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#custom-grouping"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescriptions">
            <summary>
            A collection of <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescription"/> objects that used to maintain the grouping information in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GroupColumnDescriptions.#ctor">
            <summary>
            Initializes a new instance of the GroupColumnDescriptions class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GroupColumnDescriptions.Item(System.String)">
            <summary>
            Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescription"/> with the given column name from the GroupColumnDescriptions collection.
            </summary>
            <param name="columnName">The column name whose GroupColumnDescription to be retrieved.</param>
            <returns>The <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescription"/> with the given column name from the GroupColumnDescriptions collection.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SortColumnDescriptions">
            <summary>
            A collection of <see cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> objects that used to maintain the sorting information in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SortColumnDescriptions.#ctor">
            <summary>
            Initializes a new instance of the SortColumnDescriptions class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SortColumnDescriptions.Item(System.String)">
            <summary>
            Returns the <see cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> with the given column name from the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> collection.
            </summary>
            <param name="columnName">The column name whose SortColumnDescription to be retrieved.</param>
            <returns>The <see cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> with the given column name from the SortColumnDescriptions collection.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription">
            <summary>
            Represents a class for that contains the sorting information like sort column's name and sorting direction based on which sorting for a column is processed in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SortColumnDescription.ColumnNameProperty">
            <summary>
            Identifies the ColumnName bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SortColumnDescription.SortDirectionProperty">
            <summary>
            Identifies the SortDirection bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SortColumnDescription.#ctor">
            <summary>
            Initializes a new instance of the SortColumnDescription class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SortColumnDescription.ColumnName">
            <summary>
            Gets or sets the name of the column to be sorted. This property represents the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> of the column 
            which should be sorted.
            </summary>
            <value>The name of the column to be sorted.</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AllowSorting = true;
            dataGrid.SortColumnDescriptions.Add (new SortColumnDescription()
            {
               ColumnName = "OrderID"
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#programmatic-sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SortColumnDescription.SortDirection">
            <summary>
            Gets or sets the direction of sorting for the given column.
            </summary>
            <value>The direction of sorting for the given column. The default value is <see cref="F:Syncfusion.Data.ListSortDirection.Ascending"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AllowSorting = true;
            dataGrid.SortColumnDescriptions.Add (new SortColumnDescription()
            {
               ColumnName = "OrderID",
               SortDirection = ListSortDirection.Descending
            });
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#programmatic-sorting"/>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ExtendedScrollView">
            <summary>
            Represents a customized <see cref="T:Xamarin.Forms.View"/> that is capable of scrolling if its Content requires.
            </summary>
            <remarks>ExtendedScrollView is a customized <see cref="T:Xamarin.Forms.View"/> that scrolls its Content 
            in both horizontal and vertical direction if the Content exceeds the view area.
            <para/>
            The <see cref="P:Xamarin.Forms.ScrollView.Content"/> property of this customized <see cref="T:Xamarin.Forms.ScrollView"/> is 
            set to a container which holds the row and column of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtendedScrollView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.ExtendedScrollView"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.ExtendedScrollView.Container">
            <summary>
            Gets the VisualContainer.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtendedScrollView.OnChildMeasureInvalidated">
            <summary>
            Invoked whenever a child of the layout has emitted <see cref="E:Xamarin.Forms.VisualElement.MeasureInvalidated"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtendedScrollView.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control. 
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtendedScrollView.OnSizeAllocated(System.Double,System.Double)">
            <summary>
            This method is called when the size of the element is set during a layout cycle. This method is called directly 
            before the <see cref="E:Xamarin.Forms.VisualElement.SizeChanged"/> event is emitted.
            </summary>
            <param name="width">The new width of the element.</param>
            <param name="height">The new height of the element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtendedScrollView.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the Content of a ExtendedScrollView.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.AndroidScrollView">
            <summary>
            Represents a customized <see cref="T:Xamarin.Forms.View"/> that is capable of scrolling if its Content requires.
            </summary>
            <remarks>AndroidScrollView is a customized <see cref="T:Xamarin.Forms.View"/> that scrolls its Content 
            in both horizontal and vertical direction if the Content exceeds the view area.
            <para/>
            The <see cref="P:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.Content"/> property of this customized <see cref="T:Syncfusion.SfDataGrid.XForms.ExtScrollViewer"/> is 
            set to a container which holds the row and column of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.AndroidScrollView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.AndroidScrollView"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.AndroidScrollView.Container">
            <summary>
            Gets the VisualContainer.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.AndroidScrollView.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control.
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.AndroidScrollView.OnChildMeasureInvalidated">
            <summary>
            Invoked whenever a child of the layout has emitted <see cref="E:Xamarin.Forms.VisualElement.MeasureInvalidated"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.AndroidScrollView.OnSizeAllocated(System.Double,System.Double)">
            <summary>
            This method is called when the size of the element is set during a layout cycle. This method is called directly 
            before the <see cref="E:Xamarin.Forms.VisualElement.SizeChanged"/> event is emitted.
            </summary>
            <param name="width">The new width of the element.</param>
            <param name="height">The new height of the element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.AndroidScrollView.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the Content of a AndroidScrollView.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.ExtScrollViewer">
            <summary>
            Represents a customized <see cref="T:Xamarin.Forms.View"/> that is capable of scrolling if its Content requires.
            </summary>
            <remarks>ExtScrollViewer is a customized <see cref="T:Xamarin.Forms.View"/> that scrolls its Content 
            in both horizontal and vertical direction if the Content exceeds the view area.
            <para/>
            ExtScrollViewer inherits the <see cref="T:Xamarin.Forms.Layout"/> class and implements the interfaces
            <see cref="T:Xamarin.Forms.IScrollViewController"/> and <see cref="T:Xamarin.Forms.ILayoutController"/> 
            to scroll its Content. The scroll position for the element and the fling is achieved through the 
            implementation methods of the IScrollViewController.</remarks>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ScrollXProperty">
            <summary>
            Specifies the ScrollX position of the view.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.OrientationProperty">
            <summary>
            Identifies the Orientation bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ContentSizeProperty">
            <summary>
            Identifies the ContentSize bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ScrollYProperty">
            <summary>
            Specifies the ScrollY position of the view.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.#ctor">
            <summary>
            Initializes a new instance of the ExtScrollViewer class.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.Scrolled">
            <summary>
            Event to scroll the ExtScrollViewer.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ScrollToRequested">
            <summary>
            Event to scroll the ExtScrollViewer.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.Xamarin#Forms#IScrollViewController#ScrollToRequested">
            <summary>
            Event to scroll the ExtScrollViewer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ScrollX">
            <summary>
            Gets the horizontal position of the ExtScrollViewer. This is a bindable property.
            </summary>
            <value>A value that determines the horizontal position of the ExtScrollViewer.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ScrollY">
            <summary>
            Gets the vertical position of the ExtScrollViewer. This is bindable property.
            </summary>
            <value>A value that determines the vertical position of the ExtScrollViewer.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.Orientation">
            <summary>
            Gets or sets the scrolling direction of the ExtScrollViewer. This is a bindable property.
            </summary>
            <value>A value that determines the orientation of the ExtScrollViewer.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ContentSize">
            <summary>
            Gets the size of the Content added to the scroll viewer. This is a bindable property.
            </summary>
            <value>A <see cref="T:Xamarin.Forms.Size"/> that represents the size of the Content.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.Content">
            <summary>
            Gets or sets a <see cref="T:Xamarin.Forms.View"/> to display in the <see cref="T:Syncfusion.SfDataGrid.XForms.ExtScrollViewer"/>.
            </summary>
            <value>The <see cref="T:Xamarin.Forms.View"/> that is displayed.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control.
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the Content of a ExtScrollViewer.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ScrollToAsync(System.Double,System.Double,System.Boolean)">
            <summary>
            Scrolls the view to the given position asynchronously.
            </summary>
            <param name="positionX">The horizontal position to scroll.</param>
            <param name="positionY">The vertical position to scroll.</param>
            <param name="animated">A boolean value indicating whether to animate the scroll or not.</param>
            <returns>Returns the task that performs the scrolling asynchronously.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.ScrollToAsync(Xamarin.Forms.Element,Xamarin.Forms.ScrollToPosition,System.Boolean)">
            <summary>
            Scrolls the given element of <see cref="T:Syncfusion.SfDataGrid.XForms.ExtScrollViewer"/> to the specified position.
            </summary>
            <param name="element">The element belonging to <see cref="T:Syncfusion.SfDataGrid.XForms.ExtScrollViewer"/>.</param>
            <param name="position">The position to scroll.</param>
            <param name="animated">A boolean value indicating whether to animate the scroll or not.</param>
            <returns>Returns the task that performs the scrolling asynchronously.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.CheckTaskCompletionSource">
            <summary>
            Checks whether the previous scrolling operation is completed
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.CheckElementBelongsToScrollViewer(Xamarin.Forms.Element)">
            <summary>
            Checks and returns a value indicating whether the specified element belongs to the scroll viewer
            </summary>
            <param name="element">Current element</param>
            <returns>Returns a value indicating whether the specified element belongs to the scroll viewer</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.OnScrollToRequested(Xamarin.Forms.ScrollToRequestedEventArgs)">
            <summary>
            Scrolls to the requested height or width
            </summary>
            <param name="e">ScrollToRequestedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.GetCoordinate(Xamarin.Forms.Element,System.String,System.Double)">
            <summary>
            Gets the coordinate of the item in the x or y axis
            </summary>
            <param name="item">current item</param>
            <param name="coordinateName">coordinate name</param>
            <param name="coordinate">x and y coordinates</param>
            <returns>Returns the coordinate of the item in the x or y axis</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.Xamarin#Forms#IScrollViewController#GetScrollPositionForElement(Xamarin.Forms.VisualElement,Xamarin.Forms.ScrollToPosition)">
            <summary>
            Gets the position of the elements in native view
            </summary>
            <param name="item">current item</param>
            <param name="pos">current position</param>
            <returns>Returns the position of the elements in native view</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.GetScrollPositionForElement(Xamarin.Forms.VisualElement,Xamarin.Forms.ScrollToPosition)">
            <summary>
            Gets the position of the elements in native view
            </summary>
            <param name="item">current item</param>
            <param name="position">current position</param>
            <returns>Returns the position of the elements in native view</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.Xamarin#Forms#IScrollViewController#SendScrollFinished">
            <summary>
            Notifies that scrolling is finished
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.SendScrollFinished">
            <summary>
            Notifies that scrolling is finished
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.Xamarin#Forms#IScrollViewController#SetScrolledPosition(System.Double,System.Double)">
            <summary>
            Sets the scrolled position
            </summary>
            <param name="x">x position</param>
            <param name="y">y position</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.ExtScrollViewer.SetScrolledPosition(System.Double,System.Double)">
            <summary>
            Sets the scrolled position
            </summary>
            <param name="horizontalPosition">x position</param>
            <param name="verticalPosition">y position</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IElement">
            <summary>
            Defines properties that must be implemented to generate grid elements.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IElement.Element">
            <summary>
            Gets the grid element.
            </summary>
            <value>The grid element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IElement.Index">
            <summary>
            Gets the index of the element.
            </summary>
            <value>The index of the element.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IRowElement">
            <summary>
            Defines properties that must be implemented to generate grid row elements.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IRowElement.RowRegion">
            <summary>
            Gets the row region of the row element.
            </summary>
            <value>The row region of the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IRowElement.Level">
            <summary>
            Gets the level of the row element.
            </summary>
            <value>The level of the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IRowElement.RowType">
            <summary>
            Gets the row type of the row element.
            </summary>
            <value>The row type of the row element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IRowElement.ClipRect">
            <summary>
            Gets or sets the clip value of the row element.
            </summary>
            <value>The clip value of the row element.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IColumnElement">
            <summary>
            Defines properties that must be implemented to generate grid column elements.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IColumnElement.Renderer">
            <summary>
            Gets the renderer associated with the column element.
            </summary>
            <value>The renderer associated with the column element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IColumnElement.RowIndex">
            <summary>
            Gets the row index of the column element.
            </summary>
            <value>The row index of the column element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IColumnElement.ColumnSpan">
            <summary>
            Gets the column span of the column element.
            </summary>
            <value>The column span of the column element.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IColumnElement.ClipRect">
            <summary>
            Gets or sets the clip value of the column element.
            </summary>
            <value>The clip value of the column element.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IColumnElement.RefreshCellValue">
            <summary>
            Refreshes the Content inside the column element.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IRowGenerator">
            <summary>
            Defines properties and methods that must be implemented when generating the grid row elements.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IRowGenerator.Owner">
            <summary>
            Gets or sets an instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>An instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.IRowGenerator.Items">
            <summary>
            Gets the list of row elements in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The list of row elements in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.PreGenerateRows(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the row elements that occupy the view space for the first time.
            </summary>
            <param name="visibleRows">The visible row line collection.</param>
            <param name="visibleColumns">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.EnsureRows(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the row elements that has to be arranged in the view.
            </summary>
            <param name="visibleRows">The visible row line collection.</param>
            <param name="visibleColumns">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.EnsureColumns(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensures the visible columns in each row.
            </summary>
            <param name="visibleColumns">The visible column line collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.ColumnsInserted(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index.
            </summary>
            <param name="index">The index to insert the columns.</param>
            <param name="count">The column lines count to insert.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.ColumnsRemoved(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines starting from the given index.
            </summary>
            <param name="index">The index to remove the columns.</param>
            <param name="count">The column lines count to remove.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.QueryRowHeight(System.Int32,System.Double@)">
            <summary>
            Raises the QueryRowHeight event and returns a boolean value denoting whether the event is handled.
            </summary>
            <param name="rowIndex">The index of the row which is to be queried.</param>
            <param name="height">The height value that is passed as out parameter.</param>
            <returns>Returns a boolean value denoting whether the event is handled.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.ApplyColumnSizer(System.Double)">
            <summary>
            Apply column sizer calculations to the grid columns.
            </summary>
            <param name="viewSize">The size of the view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.ColumnInserted(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index.
            </summary>
            <param name="index">The index to insert.</param>
            <param name="count">The column lines count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IRowGenerator.ColumnRemoved(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines starting from the given index.
            </summary>
            <param name="index">The index to remove.</param>
            <param name="count">The column lines count.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.VisualContainer">
            <summary>
            Represents a container that holds the row elements in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VisualContainer.isInScrollLayout">
            <summary>
            Used to reset the ScrollView's Content size when TotalExtent changes in runtime.
            Should not use the flag isInScrollLayout anywhere as it will affect the ScrollView Layout pass
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VisualContainer.NeedsLayout">
            <summary>
            Used to Handle the ScrollView Layout pass when Content changed from other parent. 
            Shouldn't assign or handle anywhere else.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.#ctor">
            <summary>
            Initializes a new instance of the VisualContainer class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.IsChildInSwipe">
            <summary>
            Gets or sets a value indicating whether any child is in swipe.
            </summary>
            <value>A boolean value indicating whether any child is in swipe.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.RowGenerator">
            <summary>
            Gets a reference to the class that implements <see cref="T:Syncfusion.SfDataGrid.XForms.IRowGenerator"/>.
            </summary>
            <value>A reference to the class that implements <see cref="T:Syncfusion.SfDataGrid.XForms.IRowGenerator"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.RowHeightManager">
            <summary>
            Gets or sets a reference to the <see cref="P:Syncfusion.SfDataGrid.XForms.VisualContainer.RowHeightManager"/> instance that manages the row heights in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>A reference to the <see cref="P:Syncfusion.SfDataGrid.XForms.VisualContainer.RowHeightManager"/> instance that manages the row heights in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.NeedToRefreshColumn">
            <summary>
            Gets or sets a value indicating whether to refresh the columns.
            </summary>
            <value>A boolean value denoting whether to refresh the columns.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.RowHeights">
            <summary>
            Gets the rows height from the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <value>The rows height from the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.RefreshView">
            <summary>
            Gets or sets a reference to the <see cref="T:Syncfusion.SfDataGrid.XForms.PullToRefreshView"/> instance.
            </summary>
            <value>A reference to the <see cref="T:Syncfusion.SfDataGrid.XForms.PullToRefreshView"/> instance.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ColumnWidths">
            <summary>
            Gets the columns width from the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <value>The columns width from the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.RowCount">
            <summary>
            Gets or sets the row count in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The row count in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ColumnCount">
            <summary>
            Gets or sets the column count in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The column count in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.FrozenRows">
            <summary>
            Gets or sets the frozen rows count to freeze the rows at the top below header.
            </summary>
            <value>The frozen rows count to freeze the rows at the top below header.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Negative values are not allowed.</exception>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.FrozenColumns">
            <summary>
            Gets or sets the frozen columns count to freeze the columns at the left, next to RowHeader if <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> is true.
            </summary>
            <value>The frozen columns count to freeze the columns at the left, next to RowHeader if <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> is true.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Negative values are not allowed.</exception>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.FooterRowsCount">
            <summary>
            Gets or sets the footer rows count to freeze the rows at the bottom if SfDataGrid has table summary rows with position as bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ScrollOwner">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.SfDataGrid.XForms.ExtendedScrollView"/> instance.
            </summary>
            <value>A reference to the <see cref="T:Syncfusion.SfDataGrid.XForms.ExtendedScrollView"/> instance.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.AndroidScrollOwner">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.SfDataGrid.XForms.AndroidScrollView"/> instance.
            </summary>
            <value>A reference to the <see cref="T:Syncfusion.SfDataGrid.XForms.AndroidScrollView"/> instance.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ScrollRows">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> instance which contains the information of row lines in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>A reference to the <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> instance which contains the information of row lines in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ScrollColumns">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> instance which contains the information of column lines in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>A reference to the <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> instance which contains the information of column lines in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.HScrollBar">
            <summary>
            Gets a reference to the class that implements <see cref="T:Syncfusion.GridCommon.ScrollAxis.IScrollBar"/> which contains the horizontal scroll bar information.
            </summary>
            <value>A reference to the class that implements <see cref="T:Syncfusion.GridCommon.ScrollAxis.IScrollBar"/> which contains the horizontal scroll bar information.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.VScrollBar">
            <summary>
            Gets a reference to the class that implements <see cref="T:Syncfusion.GridCommon.ScrollAxis.IScrollBar"/> which contains the vertical scroll bar information.
            </summary>
            <value>A reference to the class that implements <see cref="T:Syncfusion.GridCommon.ScrollAxis.IScrollBar"/> which contains the vertical scroll bar information.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ExtentWidth">
            <summary>
            Gets the extent width of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The extent width of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ExtentHeight">
            <summary>
            Gets the extent height of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The extent height of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.HorizontalOffset">
            <summary>
            Gets or sets the horizontal offset of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The horizontal offset of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VisualContainer.HorizontalOffsetProperty">
            <summary>
            Identifies the HorizontalOffset bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.VerticalOffset">
            <summary>
            Gets or sets the vertical offset of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The vertical offset of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.VisualContainer.VerticalOffsetProperty">
            <summary>
            Identifies the VerticalOffset bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ScrollerHeight">
            <summary>
            Gets the height of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The height of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.ScrollerWidth">
            <summary>
            Gets the width of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.VisibleRowsCount">
            <summary>
            Gets the visible rows count in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.VisibleColumnsCount">
            <summary>
            Gets the visible columns count in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.NeedToArrangeHorizontally">
            <summary>
            Gets or sets a value indicating whether to arrange the columns inside a row when arranging the rows in the VisualContainer.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.IsInBindingContextChange">
            <summary>
            Gets or sets a value indicating whether any view in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control is in binding context change.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.InvalidateMeasure">
            <summary>
            Method that is called to invalidate the layout of this <see cref="T:Xamarin.Forms.VisualElement"/>.
            Raises the <see cref="E:Xamarin.Forms.VisualElement.MeasureInvalidated"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.OnSizeAllocated(System.Double,System.Double)">
            <summary>
            This method is called when the size of the element is set during a layout cycle. This method is called directly 
            before the <see cref="E:Xamarin.Forms.VisualElement.SizeChanged"/> event is emitted.
            </summary>
            <param name="width">The new width of the element.</param>
            <param name="height">The new height of the element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control.
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the children of the VisualContainer.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when adding a child.
            </summary>
            <param name="child">The Content of the VisualContainer.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when removing a child.
            </summary>
            <param name="child">The Content of the VisualContainer.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.OnChildMeasureInvalidated">
            <summary>
            Invoked whenever a child of the layout has emitted <see cref="E:Xamarin.Forms.VisualElement.MeasureInvalidated"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.GetSize(System.Double,System.Double)">
            <summary>
            Gets the size of the line at the given index.
            </summary>
            <param name="widthConstraint">width value</param>
            <param name="heightConstraint">height value</param>
            <returns>The size of the line at the given index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.AddChild(Xamarin.Forms.View)">
            <summary>
            Adds the current child to the view
            </summary>
            <param name="child">current view</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of row lines at the given index in the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <param name="insertAtRowIndex">The index to insert the lines.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes the given number of row lines from the given index in the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <param name="removeAtRowIndex">The index to remove the lines.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of column lines at the given index in the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <param name="insertAtColumnIndex">The index to insert the lines.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.MoveColumn(System.Int32,System.Int32)">
            <summary>
            Moves a column line from one index to another in the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <param name="fromIndex">The index of the line to be moved.</param>
            <param name="toIndex">The index the line should be moved to.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes the given number of column lines from the given index in the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <param name="removeAtColumnIndex">The column index to remove the lines.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.UpdateScrollBars">
            <summary>
            Updates the scroll bars.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.OnItemsSourceChanged">
            <summary>
            Occurs when the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.GetStartEndIndex(Syncfusion.GridCommon.ScrollAxis.VisibleLinesCollection,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Method to find the start and end index from the visible lines collection.
            </summary>
            <param name="visibleLines">The visible lines collection.</param>
            <param name="region">The region of lines.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.ExtendedScrollView_Scrolled(System.Object,Xamarin.Forms.ScrolledEventArgs)">
            <summary>
            Call Back for the Scrolled event of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The ScrolledEventArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.ResetSwipeOffset">
            <summary>
            Resets the swipe offset
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.OnCreateRowHeights">
            <summary>
            Creates a new instance of LineSizeCollection for getting the row heights.
            </summary>
            <returns>A new instance of the LineSizeCollection.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.OnCreateColumnWidths">
            <summary>
            Creates a new instance of LineSizeCollection for getting the column widths.
            </summary>
            <returns>A new instance of the LineSizeCollection.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.CreateScrollAxis(System.Boolean,Syncfusion.GridCommon.ScrollAxis.IScrollBar,Syncfusion.GridCommon.ScrollAxis.ILineSizeHost)">
            <summary>
            Creates a new instance of <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollingMode"/>.
            </summary>
            <param name="isPixelScroll">A boolean value denoting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollingMode"/>.</param>
            <param name="scrollBar">The scroll bar.</param>
            <param name="lineSizes">The line sizes.</param>
            <returns>Returns a new instance of <see cref="T:Syncfusion.GridCommon.ScrollAxis.ScrollAxisBase"/> based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollingMode"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.OnScrollColumnsChanged(System.Object,Syncfusion.GridCommon.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Occurs when the ScrollColumns is changed.
            </summary>
            <param name="sender">The ScrollColumns.</param>
            <param name="e">The ScrollChangedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.ResetOffset">
            <summary>
            Resets the vertical and horizontal offset values to zero.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.PregenerateItems">
            <summary>
            Method to generate the visible rows in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.EnsureItems(System.Boolean)">
            <summary>
            Method to ensure the visible rows in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control whenever the view is changed.
            </summary>
            <param name="needToRefresh">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.SetRowHeights">
            <summary>
            Sets the row height for the visible rows in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.RowHeightHelper(System.Int32,System.Int32,Syncfusion.SfDataGrid.XForms.RowRegion)">
            <summary>
            Sets the row height for the visible rows based on the values specified in the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowHeight"/> event.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="region">The row region.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.UpdateAxis(Xamarin.Forms.Size)">
            <summary>
            Updates the render size of ScrollRows and ScrollColumns.
            </summary>
            <param name="availableSize">The view size.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.ArrangeRows">
            <summary>
            Arranges the visible rows in the VisualContainer based on the Visible lines information.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.GetRowVisibleLineInfo(System.Int32)">
            <summary>
            Gets the visible line information for the given row index.
            </summary>
            <param name="index">The row index.</param>
            <returns>The visible line information of the given row index.</returns>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.VisualContainer.RowsGenerator">
            <summary>
            Gets a reference to the class that implements <see cref="T:Syncfusion.SfDataGrid.XForms.IRowGenerator"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.VisualContainer.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSelectionController">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.SfDataGrid.XForms.IGridSelectionController"/> that contains methods through IGridSelectionController
            for handling selection operations in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.#ctor(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            Initializes a new instance of the GridSelectionController class.
            </summary>
            <param name="dataGrid">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSelectionController.DataGrid">
            <summary>
            Gets or sets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSelectionController.SelectedRows">
            <summary>
            Gets or sets the collection of selected rows.
            </summary>
            <value>The collection of selected rows.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridSelectionController.LastSelectedRowIndex">
            <summary>
            Gets or sets the last selected row index.
            </summary>
            <value>The row index of the last selected row.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessingPointerTouchUp(Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Method to process the pointer touch up. Handles the touch up operation of each row in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="rowColumnIndex">The row column index in which the touch up action is performed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.XForms.CollectionChangedReason)">
            <summary>
            Handles the collection changes such as selected items and source collection changed to process selection. 
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
            <param name="reason">The reason for the collection change.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessSelectedItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Processes the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItems"/> collection changed to update the selection.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.HandleSelectionPropertyChanges(Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Handles the selection when the selection related properties gets changed.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessSelectedIndexChanged(Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Processes the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedIndex"/> changes in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs"/>.</param>
            <remarks>When <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode"/> is <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.Multiple"/> the index of the first selected item is stored in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedIndex"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessSelectionModeChanged(Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Processes the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode"/> changes in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs"/>.</param>
            <remarks>When selection mode is changed from multiple to single/singleDeselect clears all the selection expect last selection.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessSelectedItemChanged(Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Processes the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItem"/> changes in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessCurrentItemChanged(Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs)">
            <summary>
            Processes the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentItem"/> changes in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="args">SelectionPropertyChangedHandler arguments.</param>
            <remarks>When <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode"/> is <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.Multiple"/> the last selected item is stored in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentItem"/>.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessSourceCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.XForms.CollectionChangedReason)">
            <summary>
            Processes the source collection changes to update selection in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="e">NotifyCollectionChangedEvent arguments</param>
            <param name="reason">CollectionChanged reason</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.GetSelectionColor(System.Int32,System.Object)">
            <summary>
            Returns the selection color for selected row. This method can be overridden to apply multiple selection color.
            </summary>
            <param name="rowIndex">The index of the selected row</param>
            <param name="rowData">The row data of the selected row </param>
            <returns>The selection color for selected row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.RefreshSelection">
            <summary>
            Refreshes the selections and sets values for the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedIndex"/>, <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItem"/>, 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentItem"/> and <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItems"/> properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ClearSelection">
            <summary>
            Clears the selection in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.HandlePointerOperation(Syncfusion.SfDataGrid.XForms.GridPointerEventArgs,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the pointer operation (touch-up or double tap) to handle selection.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.XForms.GridPointerEventArgs"/>.</param>
            <param name="rowColumnIndex">The row column index in which the pointer operation is performed.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.SetSelectionAnimation(Syncfusion.SfDataGrid.XForms.VirtualizingCellsControl)">
            <summary>
             Sets animation for the selected row.
            </summary>
            <param name="rowElement">The view which holds the row data of the selected row </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.HandleGridOperation(Syncfusion.SfDataGrid.XForms.GridOperationHandlerArgs)">
            <summary>
            Handles the grid operation to update selection.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.XForms.GridOperationHandlerArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessOnSortChanged(Syncfusion.SfDataGrid.XForms.SortColumnChangedHandleArgs)">
            <summary>
            Processes selection when the sorting is changed in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="sortColumnHandleArgs">The <see cref="T:Syncfusion.SfDataGrid.XForms.SortColumnChangedHandleArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ProcessOnGroupChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Processes selection when the grouping is changed in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ResetSelection">
            <summary>
            Resets the selected index for the rows in <see cref="P:Syncfusion.SfDataGrid.XForms.GridSelectionController.SelectedRows"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.UpdateSelectionStyle(Syncfusion.SfDataGrid.XForms.DataRowBase)">
            <summary>
            Updates row and column style of selected row. 
            </summary>
            <param name="rowBase">instance of DataRowBase</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.ScrollToCurrentItem">
            <summary>
            Scrolls to current item while sorting if AllowAutoScroll is true 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.InvalidateSelectionOfRow(System.Object)">
            <summary>
            Invalidates the selected and previously selected row.
            </summary>
            <param name="rowData">selected row data</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.RaiseSelectionChanging(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object})">
            <summary>
            Raises the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanging"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="addedItems">The list of added items.</param>
            <param name="removedItems">The list of removed items.</param>
            <returns>A boolean value specifying whether the selection is changed.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.RaiseSelectionChanged(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object})">
            <summary>
            Raises the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanged"/> event in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="addedItems">The list of added items.</param>
            <param name="removedItems">The list of removed items.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectionController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="isDisposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.IGridSelectionController">
            <summary>
            Defines methods that must be implemented when handling selection in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridSelectionController.HandlePointerOperation(Syncfusion.SfDataGrid.XForms.GridPointerEventArgs,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the pointer operation to handle selection.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.SfDataGrid.XForms.GridPointerEventArgs"/>.</param>
            <param name="rowColumnIndex">The row column index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.IGridSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.SfDataGrid.XForms.CollectionChangedReason)">
            <summary>
            Handles the collection changes such as selected items and source collection changed to process selection. 
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
            <param name="reason">The reason for the collection changed.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridPointerEventArgs">
            <summary>
            Provides data for handling the pointer touch operations for selection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridPointerEventArgs.#ctor(Syncfusion.SfDataGrid.XForms.PointerOperation)">
            <summary>
            Initializes a new instance of the GridPointerEventArgs class.
            </summary>
            <param name="operation">The <see cref="T:Syncfusion.SfDataGrid.XForms.PointerOperation"/> related to the event.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridPointerEventArgs.Operation">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.PointerOperation"/> related to the event.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.PointerOperation"/> related to the event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridOperationHandlerArgs">
            <summary>
            Provides data for handling the grid operations to update selection.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridOperationHandlerArgs.#ctor(Syncfusion.SfDataGrid.XForms.GridOperation,System.Object)">
            <summary>
            Initializes a new instance of the GridOperationHandlerArgs class.
            </summary>
            <param name="operation">The <see cref="T:Syncfusion.SfDataGrid.XForms.GridOperation"/>.</param>
            <param name="operationArgs">The operation arguments.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridOperationHandlerArgs.Operation">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.GridOperation"/> related to the event.
            </summary>
            <value>An object that represents the <see cref="T:Syncfusion.SfDataGrid.XForms.GridOperation"/> related to the event.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridOperationHandlerArgs.OperationArgs">
            <summary>
            Gets the operation arguments related to the event.
            </summary>
            <value>An object that represents the operation arguments related to the event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs">
            <summary>
            Provides data for handling selection when the selection related properties are changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs.#ctor">
            <summary>
            Initializes a new instance of the SelectionPropertyChangedHandlerArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs.NewValue">
            <summary>
            Gets or sets the new value of the selection property changed.
            </summary>
            <value>An object representing the new value of the selection property changed.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs.OldValue">
            <summary>
            Gets or sets the old value of the selection property changed.
            </summary>
            <value>An object representing the old value of the selection property changed.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SelectionPropertyChangedHandlerArgs.PropertyName">
            <summary>
            Gets or sets the name of the property related to the event.
            </summary>
            <value>The name of the property related to the event.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridRowInfo">
            <summary>
            Represents a class that implements <see cref="T:System.IEquatable`1"/> to store the required informations of a selected row.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowInfo.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowInfo"/> class.
            </summary>
            <param name="rowIndex">The zero-based index of the row.</param>
            <param name="rowData">The underlying data in the row.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowInfo.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the GridRowInfo class using the specified rowIndex.
            </summary>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridRowInfo.RowData">
            <summary>
            Gets the data in the particular row.
            </summary>
            <value>The data in the particular row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridRowInfo.IsDataRow">
            <summary>
            Gets a value indicating whether this object is data row cell.
            </summary>
            <value><b>True</b> if this object is data row, otherwise <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridRowInfo.RowIndex">
            <summary>
            Gets a value indicating the row index of the particular row.
            </summary>
            <value>The row index of the particular row.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.GridRowInfo.NodeEntry">
            <summary>
            Gets a NodeEntry information of the particular row.
            </summary>
            <value> Node Entry. </value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowInfo.GetHashCode">
            <summary>
            GetHashCode is intended to serve as a hash function for this object. Based on the contents of the object, 
            the hash function will return a suitable value with a relatively random distribution over the various inputs.
            <para/>
            The default implementation returns the [....] block index for this instance. Calling it on the same object multiple 
            times will return the same value, so it will technically meet the needs of a hash function, but it's less than ideal.
            Objects (especially value classes) should override this method.
            </summary>
            <returns>Return a suitable value with a relatively random distribution over the various inputs based on the contents of the object.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridRowInfo.Equals(Syncfusion.SfDataGrid.XForms.GridRowInfo)">
            <summary>
            Returns a boolean indicating if the passed <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowInfo"/> object is Equal to this.
            Equality is defined as object equality for reference types and bitwise equality for value types 
            using a loader trick to replace Equals with EqualsValue for value types.
            </summary>
            <param name="obj">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowInfo"/> object to compare with the current object.</param>
            <returns>Returns a boolean indicating if the passed object is Equal to this.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowInfo"/> objects that represent the selected rows in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.#ctor">
            <summary>
            Initializes a new instance of the GridSelectedRowsCollection class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.Contains(Syncfusion.SfDataGrid.XForms.GridRowInfo)">
            <summary>
            Determines whether the given object is in <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItems"/> collection.
            </summary>
            <param name="rowInfo">A <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowInfo"/> object to be queried in the selected items collection.</param>
            <returns>A boolean value denoting whether the given <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowInfo"/> object is available.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.Contains(System.Int32)">
            <summary>
            Determines whether the object in the given row index is in <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItems"/> collection.
            </summary>
            <param name="rowIndex">The row index whose corresponding object is to be queried in the selected items collection.</param>
            <returns>A boolean value denoting whether a <see cref="T:Syncfusion.SfDataGrid.XForms.GridRowInfo"/> object with the given row index is available.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.Contains(System.Object)">
            <summary>
            Determines whether the given row object is in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItems"/> collection.
            </summary>
            <param name="rowData">An object to be queried in the selected items collection.</param>
            <returns>A boolean value denoting whether the given object is available.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.Contains(Syncfusion.Data.NodeEntry)">
            <summary>
            Determines whether the given object is in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItems"/> collection.
            </summary>
            <param name="nodeEntry">A <see cref="T:Syncfusion.Data.NodeEntry"/> object which is to be queried in the selected items collection.</param>
            <returns>A boolean value denoting whether the given <see cref="T:Syncfusion.Data.NodeEntry"/> object is available.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.Find(Syncfusion.Data.NodeEntry)">
            <summary>
            Finds and returns the row info of the given row index
            </summary>
            <param name="nodeEntry">NodeEntry instance</param>
            <returns>Returns the row entry</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.Find(System.Int32)">
            <summary>
            Finds and returns the row info of the given row index
            </summary>
            <param name="rowIndex">NodeEntry instance</param>
            <returns>Returns the row entry</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.Find(System.Object)">
            <summary>
            Finds and returns the row info of the given row index
            </summary>
            <param name="rowData">NodeEntry instance</param>
            <returns>Returns the row entry</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.Find(Syncfusion.SfDataGrid.XForms.GridRowInfo)">
            <summary>
            To be added
            </summary>
            <param name="rowInfo">NodeEntry instance</param>
            <returns>Returns the row entry</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.GridSelectedRowsCollection.GetRowIndexes">
            <summary>
            To be added
            </summary>
            <returns>Returns the row entry</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SelectionHelper">
            <summary>
            Represents an extension class that provides resolving methods for a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SelectionHelper.ResolveToRowIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Object)">
            <summary>
            Gets the resolved row index of the given record.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="recordItem">The underlying data of the row.</param>
            <returns>The resolved row index of the given record.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SelectionHelper.GetRecordAtRowIndex(Syncfusion.SfDataGrid.XForms.SfDataGrid,System.Int32)">
            <summary>
            Gets the record at the given row index.
            </summary>
            <param name="dataGrid">The reference of the SfDataGrid.</param>
            <param name="index">The index of the row.</param>
            <returns>The record at the given row index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SelectionHelper.GetDataColumnBase(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.GridCommon.ScrollAxis.RowColumnIndex)">
            <summary>
            Gets the data column at given row column index.
            </summary>
            <param name="dataGrid">The SfDataGrid</param>
            <param name="rowColumnIndex">The row column index</param>
            <returns>TReturns the data column at the given row column index.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataGridStyle">
            <summary>
            Represents the style of a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <remarks>DataGridStyle allows you to set style for all the elements in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            To apply a custom style to change the visual appearance of all the elements in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>,
            write a class overriding from DataGridStyle and assigning it to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridStyle"/> property.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/styles"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.#ctor">
            <summary>
            Initializes a new instance of the DataGridStyle class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.GridLinesVisibility">
            <summary>
            Gets or sets the border appearance style.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.CurrentCellBorderColor">
            <summary>
            Gets or sets the editing border color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.HeaderForeground">
            <summary>
            Gets or sets the header foreground color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.HeaderBackground">
            <summary>
            Gets or sets the header background color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.CellBackground">
            <summary>
            Gets or sets the cell background color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.CellForeground">
            <summary>
            Gets or sets the cell foreground color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.AlternatingRowColor">
            <summary>
            Gets or sets the alternate row color of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. The alternation count of the rows for which the alternate row color 
            can be customized by using <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AlternationCount"/> property.
            </summary>
            <value>The alternate row color of the SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to set alternate row color by setting the <see cref="!:SfDataGrid.GridStyle.AlternatingRowColor"/> 
            property. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize the rows for which the alternate row color needs to be updated based 
            on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AlternationCount"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.GridStyle.AlternatingRowColor = Color.Fuschia;
            dataGrid.AlternationCount = 3;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://www.syncfusion.com/kb/5727/how-to-apply-alternate-row-color-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.DefaultRowColor">
            <summary>
            Gets or sets the default row color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.SelectionBackgroundColor">
            <summary>
            Gets or sets the selection background color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.SelectionForegroundColor">
            <summary>
            Gets or sets the selection foreground color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.CaptionRowBackgroundColor">
            <summary>
            Gets or sets the caption summary row background color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.CaptionRowForegroundColor">
            <summary>
            Gets or sets the caption summary row foreground color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.TableSummaryRowForegroundColor">
            <summary>
            Gets or sets the table summary row foreground color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.TableSummaryRowBackgroundColor">
            <summary>
            Gets or sets the table summary row background color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.LoadMoreViewBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> background color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.LoadMoreViewForeGroundColor">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> foreground color.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.HeaderSortIndicatorUp">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.ImageSource"/> for the ascending sort indicator.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.HeaderSortIndicatorDown">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.ImageSource"/> for the descending sort indicator.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.GroupExpanderIcon">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.ImageSource"/> for the group expander icon.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.GroupCollapseIcon">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.ImageSource"/> for the group collapse icon.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.DragDownIndicator">
            <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.ImageSource"/> for the drag down indicator.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.ResizingIndicatorIcon">
            <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.ImageSource"/> for the drag down indicator.
             </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.DragUpIndicator">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.ImageSource"/> for the drag up indicator.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.ColumnDragViewBorderColor">
            <summary>
            Gets or sets the border color of column drag view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.RowDragViewBorderColor">
            <summary>
            Gets or sets the border color of row drag view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.ColumnDragViewBackgroundColor">
            <summary>
            Gets or sets the background color of column drag view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.ColumnDragViewForegroundColor">
            <summary>
            Gets or sets the foreground color of column drag view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.RowDragViewBackgroundColor">
            <summary>
            Gets or sets the background color for row drag view
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataGridStyle.RowDragViewForegroundColor">
            <summary>
            Gets or sets the foreground color for row drag view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.FromRGB(System.Double,System.Double,System.Double)">
             <summary>
             Returns the RGB color instance from the given values.
             </summary>
             <param name="red">The red component of the color.</param>
             <param name="green">The green component of the color.</param>
             <param name="blue">The blue component of the color.</param>
             <returns>A RGB color value.</returns>
            <remarks>Component values are clamped to [0,1]. The Xamarin.Forms.Color.FromRgb() method is 
            strictly equivalent to new Color (r, g, b), and is present for API consistency.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetGridLinesVisibility">
            <summary>
            Gets the type of the borders to be drawn in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <returns>The <see cref="T:Syncfusion.SfDataGrid.XForms.GridLinesVisibility"/> for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetAlternatingRowBackgroundColor">
            <summary>
            Gets the AlternatingRow's background color.
            </summary>
            <returns>The AlternatingRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetHeaderBackgroundColor">
            <summary>
            Gets the header's background color.
            </summary>
            <returns>The header's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetHeaderForegroundColor">
            <summary>
            Gets the header's foreground color.
            </summary>
            <returns>The header's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetHeaderBorderColor">
            <summary>
            Gets the header's border color
            </summary>
            <returns>The header's border color</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetRecordBackgroundColor">
            <summary>
            Gets the record's background color.
            </summary>
            <returns>The record's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetRecordForegroundColor">
            <summary>
            Gets the record's foreground color.
            </summary>
            <returns>The record's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetBorderColor">
            <summary>
            Gets the border color of SfDataGrid.
            </summary>
            <returns>The border color of SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetIndentBackgroundColor(Syncfusion.SfDataGrid.XForms.RowType)">
            <summary>
            Gets the IndentCell's background color.
            </summary>
            <param name="rowType">The type of DataRow.</param>
            <returns>The IndentCell's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCaptionSummaryRowBackgroundColor">
            <summary>
            Gets the CaptionSummaryRow's background color.
            </summary>
            <returns>The CaptionSummaryRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCaptionSummaryRowBackgroundColor(Syncfusion.Data.Group)">
            <summary>
            Gets the CaptionSummaryRow's bcakground color.
            </summary>
            <param name="group">The group.</param>
            <returns>The CaptionSummaryRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCaptionSummaryRowBackgroundColor(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.Data.Group)">
            <summary>
            Gets the CaptionSummaryRow's background color.
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="group">group value</param>
            <returns>The CaptionSummaryRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCaptionSummaryRowForegroundColor">
            <summary>
            Gets the CaptionSummaryRow's foreground color.
            </summary>
            <returns>The CaptionSummaryRow's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCaptionSummaryRowForegroundColor(Syncfusion.SfDataGrid.XForms.SfDataGrid,Syncfusion.Data.Group)">
            <summary>
            Used to get the foreground color for captionsummary row
            </summary>
            <param name="dataGrid">SfDataGrid instance</param>
            <param name="group">group value</param>
            <returns>Returns the foreground color for captionsummary row</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCaptionSummaryRowForegroundColor(Syncfusion.Data.Group)">
            <summary>
            Gets the CaptionSummaryRow's foreground color for specified group.
            </summary>
            <param name="group">The group</param>
            <returns>The CaptionSummaryRow's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetGroupSummaryRowForegroundColor">
            <summary>
            Gets the GroupSummaryRow's foreground color.
            </summary>
            <returns>The GroupSummaryRow's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetGroupSummaryRowBackgroundColor">
            <summary>
            Gets the GroupSummaryRow's background color.
            </summary>
            <returns>The GroupSummaryRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetTableSummaryBackgroundColor">
            <summary>
            Gets the TableSummaryRow's background color.
            </summary>
            <returns>The TableSummaryRow's background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetTableSummaryForegroundColor">
            <summary>
            Gets the TableSummaryRow's foreground color.
            </summary>
            <returns>The TableSummaryRow's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetHeaderSortIndicatorDown">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for header sort down indicator icon.
            </summary>
            <returns>Returns the <see cref="T:Xamarin.Forms.ImageSource"/> for the header sort down indicator icon.</returns>
            <remarks>If the value is null then the rotation animation is provided to the sort indicator <see cref = "M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetHeaderSortIndicatorUp" /> </remarks>.
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetHeaderSortIndicatorUp">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for header sort up indicator icon.
            </summary> 
            <returns>Returns the <see cref="T:Xamarin.Forms.ImageSource"/> for the header sort up indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetSelectionBackgroundColor">
            <summary>
            Gets the background color of the selected row.
            </summary>
            <returns>The background color of the selected row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetSelectionForegroundColor">
            <summary>
            Gets the foreground color of the selected row.
            </summary>
            <returns>The foreground color of the selected row.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetLoadMoreViewBackgroundColor">
            <summary>
            Gets the load more view background color.
            </summary>
            <returns>The load more view background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetLoadMoreViewForegroundColor">
            <summary>
            Gets the load more view foreground color.
            </summary>
            <returns>The load more view foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetGroupExpanderIcon">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for group expander icon.
            </summary>
            <returns>The <see cref="T:Xamarin.Forms.ImageSource"/> of group expander icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetGroupCollapseIcon">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for group collapse icon.
            </summary>
            <returns>The <see cref="T:Xamarin.Forms.ImageSource"/> of group collapse icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCurrentCellBorderColor">
            <summary>
            Gets the border color of the current cell which is focused.
            </summary>
            <returns>The border color of the current cell which is focused.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetColumnDragDownIndicator">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for column drag down indicator icon.
            </summary>
            <returns>Returns the <see cref="T:Xamarin.Forms.ImageSource"/> for the column drag down indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetResizingIndicatorIcon">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for the resizing indicator icon.
            </summary>
            <returns>Returns the <see cref="T:Xamarin.Forms.ImageSource"/> for the resizing indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetColumnDragUpIndicator">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for column drag up indicator icon.
            </summary>
            <returns>Returns the <see cref="T:Xamarin.Forms.ImageSource"/> for the column drag up indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetRowDragDownIndicator">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> for row drag down indicator icon.
            </summary>
            <returns>Returns the <see cref="T:Xamarin.Forms.ImageSource"/> for the row drag down indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetRowDragUpIndicator">
            <summary>
            Gets the <see cref="T:Xamarin.Forms.ImageSource"/> row drag up indicator icon.
            </summary>
            <returns>Returns the <see cref="T:Xamarin.Forms.ImageSource"/> for the row drag up indicator icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCaptionSummaryFontAttribute">
            <summary>
            Gets the <see cref="!:FontattributeForCaptionSummary"/> property.
            </summary>
            <returns>Returns the <see cref="!:FontattributeForCaptionSummary"/> property.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetTableSummaryFontAttribute">
            <summary>
            Gets the <see cref="!:FontattributeForTableSummary"/> property.
            </summary>
            <returns>Returns the <see cref="!:FontattributeForTableSummary"/> property.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetGroupSummaryFontAttribute">
            <summary>
            Gets the <see cref="!:FontattributeForGroupSummary"/> property.
            </summary>
            <returns>Returns the <see cref="!:FontattributeForGroupSummary"/> property.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetColumnDragViewBorderColor">
            <summary>
            Gets the column drag view border color.
            </summary>
            <returns>The column drag view border color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetColumnDragViewBackgroundColor">
            <summary>
            Gets the column drag view background color.
            </summary>
            <returns>The column drag view background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetColumnDragViewForegroundColor">
            <summary>
            Gets the column drag view foreground color.
            </summary>
            <returns>The column drag view foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetRowDragViewBackgroundColor">
            <summary>
            Gets the row drag view background color.
            </summary>
            <returns>The row drag view background color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetRowDragViewForegroundColor">
            <summary>
            Gets the row drag view foreground color.
            </summary>
            <returns>The row drag view foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetResizingIndicatorColor">
            <summary>
            Gets the color of the column resizing cursor.
            </summary>
            <returns>The color of the column resizing cursor.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetBordercolor">
            <summary>
            Gets the border color of SfDataGrid.
            </summary>
            <returns>The border color of SfDataGrid.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.GetCaptionSummaryRowForeGroundColor">
            <summary>
            Gets the CaptionSummaryRow's foreground color.
            </summary>
            <returns>The CaptionSummaryRow's foreground color.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataGridStyle.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.SfDataGrid">
            <summary>
            A data bound list control that displays the items from data source in a tabular view. The SfDataGrid control allows you to select, sort and group these items.
            </summary>
            <remarks>
            The SfDataGrid control provides a flexible way to display a collection of data in rows and columns. 
            The SfDataGrid includes built-in column types and a template column for hosting custom Content.
            <para/>
            To bind the SfDataGrid to data, set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> property to an <see cref="T:System.Collections.IEnumerable"/> implementation.
            Each row in the data grid is bound to an object in the data source, and each column in the data grid is bound 
            to a property of the data object. In order for the SfDataGrid user interface to update automatically when items are 
            added to or removed from the source data, the SfDataGrid must be bound to a collection that implements the 
            <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> interface, such as an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>. To automatically reflect property changes, 
            the objects in the source collection must implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface.
            </remarks>    
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/getting-started"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.MaxSwipeOffSetProperty">
            <summary>
            Identifies the MaxSwipeOffset bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMorePostionProperty">
            <summary>
            Identifies the LoadMorePosition bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.EnableDataVirtualizationProperty">
            <summary>
            Identifies the EnableDataVirtualization bindable property.
            </summary>
            <remarks>
            The identifier for the EnableDataVirtualization bindable property.
            </remarks>             
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.VerticalOverScrollModeProperty">
            <summary>
            Identifies the VerticalOverScrollMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowGroupExpandCollapseProperty">
            <summary>
            Identifies the AllowGroupExpandAndCollapse bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoExpandGroupsProperty">
            <summary>
            Identifies the AutoExpandGroups bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.RightSwipeTemplateProperty">
            <summary>
            Identifies the RightSwipeTemplate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.LeftSwipeTemplateProperty">
            <summary>
            Identifies the LeftSwipeTemplate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSwipingProperty">
            <summary>
            Identifies the AllowSwiping bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.MaxSwipeOffsetProperty">
            <summary>
            Identifies the MaxSwipeOffset bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowDraggingColumnProperty">
            <summary>
            Identifies the AllowDraggingColumn bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowDragDropTemplateProperty">
            <summary>
            Identifies the RowDragDropTemplate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowResizingColumnProperty">
            <summary>
            Identifies the AllowResizingColumn bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupingModeProperty">
            <summary>
            Identifies the GroupingMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.ResizingModeProperty">
            <summary>
            Identifies the ResizingMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowDraggingRowProperty">
            <summary>
            Identifies the AllowDraggingRow bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeaderTemplateProperty">
            <summary>
            Identifies the RowHeaderTemplate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.LiveDataUpdateModeProperty">
            <summary>
            Identifies the LiveDataUpdateMode bindable property.
            </summary>
            <remarks>
            This bindable property is read only. </remarks>   
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.CaptionSummaryTemplateProperty">
            <summary>
            Identifies the CaptionSummaryTemplate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupSummaryTemplateProperty">
            <summary>
            Identifies the GroupSummaryTemplate bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SummaryCalculationModeProperty">
            <summary>
             Identifies the CaptionSummaryTemplate bindable property.
            </summary>
            <remarks>
            This bindable property is read-only.
            </remarks>     
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.FreezeGroupHeaderProperty">
            <summary>
            Identifies the FreezeGroupHeader bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>       
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowColumnWhenGroupedProperty">
            <summary>
            Identifies the ShowColumnWhenGrouped bindable property.
            </summary>   
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshViewProperty">
            <summary>
            Identifies the PullToRefreshView bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowPullToRefreshProperty">
            <summary>
            Identifies the AllowPullToRefresh bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommandProperty">
            <summary>
            Identifies the PullToRefreshCommand bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortComparersProperty">
            <summary>
            Identifies the SortComparers bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.CellRenderersProperty">
            <summary>
            Identifies the CellRenderers bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.ViewProperty">
            <summary>
            Identifies the View bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnsProperty">
            <summary>
            Identifies the Columns bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizerProperty">
            <summary>
            Identifies the ColumnSizer bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.IndentColumnWidthProperty">
            <summary>
            Identifies the IndentColumnWidth bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.NotificationSubscriptionModeProperty">
            <summary>
            Identifies the NotificationSubscriptionMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SourceTypeProperty">
            <summary>
            Identifies the SourceType bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumnsProperty">
            <summary>
            Identifies the AutoGenerateColumns bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.HeaderRowHeightProperty">
            <summary>
            Identifies the HeaderRowHeight bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeightProperty">
            <summary>
            Identifies the RowHeight bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.DefaultColumnWidthProperty">
            <summary>
            Identifies the DefaultColumnWidth bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeaderProperty">
            <summary>
            Identifies the ShowRowHeader bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeaderWidthProperty">
            <summary>
            Identifies the RowHeaderWidth bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.FrozenRowsCountProperty">
            <summary>
            Identifies the FrozenRowsCount bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.FrozenColumnsCountProperty">
            <summary>
            Identifies the FrozenColumnsCount bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptionsProperty">
            <summary>
            Identifies the SortColumnDescriptions bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSortingProperty">
            <summary>
            Identifies the AllowSorting bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowTriStateSortingProperty">
            <summary>
            Identifies the AllowTriStateSorting bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowMultiSortingProperty">
            <summary>
            Identifies the AllowMultiSorting bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridStyleProperty">
            <summary>
            Identifies the GridStyle bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AlternationCountProperty">
            <summary>
            Identifies the AlternationCount bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.DataFetchSizeProperty">
            <summary>
            Identifies the DataFetchSize bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionControllerProperty">
            <summary>
            Identifies the SelectionController bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollingModeProperty">
            <summary>
            Identifies the ScrollingMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.CaptionSummaryRowProperty">
            <summary>
            Identifies the CaptionSummaryRow bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupSummaryRowsProperty">
            <summary>
            Identifies the GroupSummaryRows bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.TableSummaryRowsProperty">
            <summary>
            Identifies the TableSummaryRows bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortTapActionProperty">
            <summary>
            Identifies the SortTapAction bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentItemProperty">
            <summary>
            Identifies the CurrentItem bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItemsProperty">
            <summary>
            Identifies the SelectedItems bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowEditingProperty">
            <summary>
            Identifies the AllowEditing bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.EditTapActionProperty">
            <summary>
            Identifies the TapAction bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.EditorSelectionBehaviorProperty">
            <summary>
            Identifies the EditorSelectionBehavior bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.EditingControllerProperty">
            <summary>
            Identifies the EditingController bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupColumnDescriptionsProperty">
            <summary>
            Identifies the GroupColumnDescriptions bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCaptionTextFormatProperty">
            <summary>
            Identifies the GroupCaptionTextFormat bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumnsModeProperty">
            <summary>
            Identifies the AutoGenerateColumnsMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowLoadMoreProperty">
            <summary>
            Identifies the AllowLoadMore bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommandProperty">
            <summary>
            Identifies the LoadMoreCommand bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridTappedCommandProperty">
            <summary>
            Identifies the GridTappedCommand bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLongPressedCommandProperty">
            <summary>
            Identifies the GridLongpressedCommand bindable property.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMorePositionProperty">
            <summary>
            Identifies the LoadMorePosition bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreViewProperty">
            <summary>
            Identifies the LoadMoreView bindable property. 
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusyProperty">
            <summary>
            Identifies the IsBusy bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.#ctor">
            <summary>
            Initializes a new instance of the SfDataGrid class.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnsChanging">
            <summary>
            Occurs when the columns is being sorted in SfDataGrid.
            </summary>
            <remarks>The user can cancel the sorting based on the columns being sorted by using this event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SortColumnsChanging += DataGrid_SortColumnsChanging;
            
            void DataGrid_SortColumnsChanging (object sender, DataGridSortColumnsChangingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#sorting-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnsChanged">
            <summary>
            Occurs after the columns is sorted in SfDataGrid.
            </summary>
            <remarks>This event will raise only when the sorting is done. This event will not raise if 
            the sorting is canceled in the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnsChanging"/> event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SortColumnsChanged += DataGrid_SortColumnsChanged;
            
            void DataGrid_SortColumnsChanged (object sender, DataGridSortColumnsChangedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#sorting-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowHeight">
            <summary>
            Occurs when the row height of SfDataGrid is queried for each row data.
            </summary>
            <remarks>SfDataGrid supports auto row height feature, by using this event. 
            The user can query row the row height based on its Content and set the queried height as its row height.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryRowHeight += DataGrid_QueryRowHeight;
            
            void DataGrid_QueryRowHeight (object sender, QueryRowHeightEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/row-height-customization#auto-fit-the-grid-rows-based-on-content"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGeneratingColumn">
            <summary>
             Occurs when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumns"/>is set as true. Using this event, the user 
             can customize the columns being generated automatically.
             </summary>
             <example>
             <code lang="C#"><![CDATA[
             dataGrid.AutoGeneratingColumn += DataGrid_AutoGeneratingColumn;
             
             void DataGrid_AutoGeneratingColumn (object sender, AutoGeneratingColumnArgs e)
             {
             //You can achieve your requirement here.
             }
             ]]></code>
             </example>
             <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#customize-automatically-generated-columns"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanging">
            <summary>
            Occurs when the selection is changing in SfDataGrid.
            </summary>
            <remarks>The user can cancel the selection by using this event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SelectionChanging += DataGrid_SelectionChanging;
            
            void DataGrid_SelectionChanging (object sender, GridSelectionChangingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection#selection-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanged">
            <summary>
            Occurs when selection is changed in SfDataGrid.
            </summary>
            <remarks>This event will raise only when the selection is done. This event will not raise if 
            the selection is canceled in the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionChanging"/> event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SelectionChanged += DataGrid_SelectionChanged;
            
            void DataGrid_SelectionChanged (object sender, GridSelectionChangedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection#selection-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridViewCreated">
            <summary>
            Occurs when the view for a SfDataGrid is created.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridViewCreated += DataGrid_GridViewCreated;
            
            void DataGrid_GridViewCreated (object sender, GridViewCreatedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grid-events#gridviewcreated-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLoaded">
            <summary>
            Occurs when the SfDataGrid is loaded.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridLoaded += DataGrid_GridLoaded;
            
            void DataGrid_GridLoaded (object sender, GridLoadedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grid-events#gridloaded-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridTapped">
            <summary>
            Occurs when the grid is tapped.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridTapped += DataGrid_GridTapped;
            
            void DataGrid_GridTapped (object sender, GridTappedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grid-events#gridtapped-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridDoubleTapped">
            <summary>
            Occurs when the grid is double tapped.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridDoubleTapped += DataGrid_GridDoubleTapped;
            
            void DataGrid_GridDoubleTapped (object sender, GridDoubleTappedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grid-events#griddoubletapped-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SwipeStarted">
            <summary>
            Occurs when swiping is started in SfDataGrid.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SwipeStarted += DataGrid_SwipeStarted;
            
            void DataGrid_SwipeStarted (object sender, SwipeStartedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/swiping#swipe-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.Swiping">
            <summary>
            Occurs when swiping is in progress in SfDataGrid.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.Swiping += DataGrid_Swiping;
            
            void DataGrid_Swiping (object sender, SwipingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/swiping#swipe-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.SwipeEnded">
            <summary>
            Occurs when swiping is ended in SfDataGrid.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SwipeEnded += DataGrid_SwipeEnded;
            
            void DataGrid_SwipeEnded (object sender, SwipeEndedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/swiping#swipe-events"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLongPressed">
            <summary>
            Occurs when the SfDataGrid is long pressed.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GridLongPressed += DataGrid_GridLongPressed;
            
            void DataGrid_GridLongPressed (object sender, GridLongPressedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grid-events#gridlongpressed-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanding">
            <summary>
            Occurs when a group is being expanded in SfDataGrid.
            </summary>
            <remarks>
            You can cancel or customize the group being expanded through <see cref="T:Syncfusion.SfDataGrid.XForms.GroupChangingEventArgs"/> arguments. 
            This event will not be raised when the group is expanded programmatically. 
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupExpanding += DataGrid_GroupExpanding;
            
            void DataGrid_GroupExpanding (object sender, GroupChangingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanded"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsed"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#groupexpanding-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsing">
            <summary>
            Occurs when a group is being collapsed in SfDataGrid.
            </summary>
            <remarks>
            You can cancel or customize the group being collapsed through <see cref="T:Syncfusion.SfDataGrid.XForms.GroupChangingEventArgs"/> arguments.
            This event will not raise when the group is collapsed programmatically. 
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupCollapsing += DataGrid_GroupCollapsing;
            
            void DataGrid_GroupCollapsing (object sender, GroupChangingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsed"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanded"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#groupcollapsing-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanded">
            <summary>
            Occurs when a group is expanded in SfDataGrid.
            </summary>
            <remarks>
            This event occurs after the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanding"/> event, if that event is not canceled. 
            This event will not raised when the group is expanded programmatically.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupExpanded += DataGrid_GroupExpanded;
            
            void DataGrid_GroupExpanded (object sender, GroupChangedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsed"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#groupexpanded-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsed">
            <summary>
            Occurs when a group is collapsed in SfDataGrid.
            </summary>
            <remarks>
            This event occurs after the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsing"/> event, if that event is not canceled.
            This event will not raise when the group is collapsed programmatically.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupCollapsed += DataGrid_GroupCollapsed;
            
            void DataGrid_GroupCollapsed (object sender, GroupChangedEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCollapsing"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanding"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupExpanded"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#groupcollapsed-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryUnboundColumnValue">
            <summary>        
            Occurs to query or commit the values for <see cref="T:Syncfusion.SfDataGrid.XForms.GridUnboundColumn"/> when its cells is initialized or the value is committed.
            </summary>    
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryUnboundColumnValue += DataGrid_QueryUnboundColumnValue;
            
            void DataGrid_QueryUnboundColumnValue (object sender, GridUnboundColumnEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/unbound-column#using-queryunboundcolumnvalue-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryColumnDragging">
            <summary>
            Occurs when a column is being reordered to a new position in SfDataGrid.
            </summary>
            <remarks>
            You can cancel or customize the column being dragged through <see cref="T:Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryColumnDragging += DataGrid_QueryColumnDragging;
            
            void DataGrid_QueryColumnDragging (object sender, QueryColumnDraggingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columndraganddrop#column-drag-and-drop-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowDragging">
            <summary>
            Occurs when a row is being reordered to a new position in SfDataGrid.
            </summary>
            <remarks>
            You can cancel or customize the row being dragged through <see cref="T:Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryRowDragging += DataGrid_QueryRowDragging;
            
            void DataGrid_QueryRowDragging (object sender, QueryRowDraggingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/rowdraganddrop#row-drag-and-drop-event"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnResizing">
            <summary>
            Occurs when a column's width is being resized in SfDataGrid.
            </summary>
            <remarks>
            You can cancel or customize the column being resized through <see cref="T:Syncfusion.SfDataGrid.XForms.GridResizingEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.ColumnResizing += DataGrid_ColumnResizing;
            
            void DataGrid_ColumnResizing (object sender, GridResizingEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentCellBeginEdit">
            <summary>
            Occurs when entering edit mode on a grid cell in SfDataGrid.
            </summary>
            <remarks>
            You can cancel the current cell being edited through the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCurrentCellBeginEditEventArgs"/> arguments.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.CurrentCellBeginEdit += DataGrid_CurrentCellBeginEdit;
            
            void DataGrid_CurrentCellBeginEdit (object sender, GridCurrentCellBeginEditEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing#cancel-editing-1"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentCellEndEdit">
            <summary>
            Occurs when the edit mode ends for the current cell which is being edited in SfDataGrid.
            </summary>
            <remarks>
            You can cancel committing the edited value through the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCurrentCellEndEditEventArgs"/> event argument.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.CurrentCellEndEdit += DataGrid_CurrentCellEndEdit;
            
            void DataGrid_CurrentCellEndEdit (object sender, GridCurrentCellEndEditEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing#cancel-edited-value-from-getting-committed"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryCellStyle">
            <summary>
            Occurs when each cell in a data row being queried.
            </summary>
            <remarks>
            The user can apply styles such as background color, foreground color, font and font attributes in cell level using this event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryCellStyle += DataGrid_QueryCellStyle;
            
            void DataGrid_QueryCellStyle (object sender, QueryCellStyleEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowStyle">
            <summary>
            Occurs when each row in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control being queried.
            </summary>
            <remarks>
            The user can apply styles such as background color and foreground color in row level using this event.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.QueryRowStyle += DataGrid_QueryRowStyle;
            
            void DataGrid_QueryRowStyle (object sender, QueryRowStyleEventArgs e)
            {
            //You can achieve your requirement here.
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LiveDataUpdateMode">
            <summary>
            Gets or sets a value to control data manipulation operations during data updates.
            </summary>
            <value>
            Indicates how data manipulation operations are handled during data updates. 
            The default value is <see cref="F:Syncfusion.Data.LiveDataUpdateMode.Default"/>.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the contents of a row header. By default, nothing will be displayed in the row header. 
            However, when this property is set, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> loads the template as the Content of the row header cells.
            </summary>
            <value>The template that displays the contents of a RowHeader.</value>
            <remarks>
            To include the RowHeader column to SfDataGrid, you need to set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> to true.
            Initially when you set the <c>SfDataGrid.ShowRowHeader = true</c>, you will be able to see empty cells in front of the rows.
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the user to set the Content and the view to be loaded in the RowHeader by using 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeaderTemplate"/> property.
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
            <sfgrid:SfDataGrid ShowRowHeader="True">
            
            <sfgrid:SfDataGrid.RowHeaderTemplate>
                <DataTemplate>
                  <Label Text = "{Binding Index}" 
                         HorizontalTextAlignment = "Center" 
                         VerticalTextAlignment = "Center" 
                         />
                </DataTemplate>
            </sfgrid:SfDataGrid.RowHeaderTemplate>
            
            </sfgrid:SfDataGrid>
            ]]></code>
            </example>
            <seealso cref="!:https://www.syncfusion.com/kb/7164/how-to-display-rowindex-at-rowheadercell-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshView">
            <summary>
            Gets or sets the view to indicate the <b>Progress</b> of pulling operation in a SfDataGrid. Any view that can indicate the <b>Progress</b> of the pulling 
            can be assigned to the property such that it animates the values of the <b>Progress</b> of pulling.
            </summary>
            <value>The view that is displayed when pull to refresh is done.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides you an option to refresh it when performing the pulling action. A command will be fired when 
            pulling action is performed and it can be used to refresh (add, delete or modify the underlying data) in the grid. To enable the pull to refresh feature, 
            you must set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowPullToRefresh"/> to true and also must set the command to <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand"/> property. 
            By default, a busy indicator will be displayed when doing the pulling action. However, 
            SfDataGrid allows you to customize this view based on the requirement using <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshView"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.PullToRefreshView = new CustomPullToRefreshView();
            
            // CustomPullToRefreshView.cs
            public class CustomPullToRefreshView : PullToRefreshView
            {
            
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowPullToRefresh">
            <summary>
            Gets or sets a value indicating whether to enable/disable the refreshing option upon pulling the grid. 
            On enabling this property, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides an option to refresh it when performing the pulling action. 
            The refreshing can be done using the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand"/> and hence it is mandatory to set the property too for enabling the refreshing option.
            </summary>
            <value><b>True</b> if pull to refresh is enabled, otherwise <b>False</b>. By default, value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides an option to refresh it when performing the pulling action. A command will be fired and it can be used 
            to refresh (add, delete or modify the underlying data) the grid. To enable the pull to refresh feature, you must set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowPullToRefresh"/> 
            to true and also must set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand"/> property. By default, a busy indicator will be displayed when doing the pulling animation. 
            However, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize this view based on the requirement using <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshView"/> property.
            </remarks>
            <example><code lang="C#"><![CDATA[
            dataGrid.AllowPullToRefresh = true;
            dataGrid.PullToRefreshCommand = new Command(ExecutePullToRefreshCommand);
            
            private async void ExecutePullToRefreshCommand()
            {
                this.dataGrid.IsBusy = true;
                await Task.Delay(new TimeSpan(0, 0, 5));
                viewModel.ItemsSourceRefresh ();
                this.dataGrid.IsBusy = false;
            }
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/pull-to-refresh"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand">
            <summary>
            Gets or sets the command to be executed when performing the pulling operation to refresh the grid. 
            This command will be fired upon performing the pulling operation for doing the refreshing operation.
            </summary>
            <value>The command to be executed when PullToRefresh action is performed.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides an option to refresh it when performing the pulling action. 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand"/> will be fired to refresh (add, delete or modify the underlying data) 
            the grid. A busy indicator will be displayed to denote the pulling and refreshing operation.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[        
            dataGrid.AllowPullToRefresh = true;
            dataGrid.PullToRefreshCommand = new Command(ExecutePullToRefreshCommand);
            
            private async void ExecutePullToRefreshCommand()
            {
               this.dataGrid.IsBusy = true;
               await Task.Delay(new TimeSpan(0, 0, 5));
               viewModel.ItemsSourceRefresh ();
               this.dataGrid.IsBusy = false;
            }
            ]]></code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/pull-to-refresh#pulltorefreshcommand"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource">
            <summary>
            Gets or sets a value indicating whether the external data source of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, to display the data in the grid.
            It supports the data sources such as <see cref="T:System.Collections.Generic.List`1"/>, <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>, and so on. 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> property helps to bind the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> with the collection of objects.
            </summary>
            <value>The items source of the SfDataGrid.</value>
            <remarks>
            To bind the SfDataGrid to data, set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> property to an <see cref="T:System.Collections.IEnumerable"/> implementation.
            Each row in the data grid is bound to an object in the data source, and each column in the data grid is bound 
            to a property of the data object. In order for the SfDataGrid user interface to update automatically when items are 
            added to or removed from the source data, the SfDataGrid must be bound to a collection that implements the 
            <see cref="T:System.Collections.Specialized.INotifyCollectionChanged"/> interface, such as an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>. To automatically reflect property changes, 
            the objects in the source collection must implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[        
            dataGrid.ItemsSource = viewModel.OrderInfoCollection;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/data-binding"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortComparers">
            <summary>
            Gets the <see cref="T:Syncfusion.Data.SortComparers"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, 
            for applying sorting to the columns based on the custom logic. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to sort columns based on custom logic when the standard sorting techniques do not meet the requirements. 
            For each column, you can apply different sorting criteria by adding <see cref="T:Syncfusion.Data.SortComparer"/> objects 
            to <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortComparers"/> collection.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.SortComparers"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</value>
            <remarks>
            <see cref = "T:Syncfusion.SfDataGrid.XForms.SfDataGrid" /> allows you to sort columns based on custom logic when the standard sorting techniques do not meet the requirements.
            For each column, you can apply different sorting criteria by adding <see cref="T:Syncfusion.Data.SortComparer"/> objects 
            to <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortComparers"/> collection. 
            The <see cref="T:Syncfusion.Data.SortComparer"/> has the two properties : <see cref="P:Syncfusion.Data.SortComparer.PropertyName"/> 
            which refers to <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> of the column to apply sorting. 
            and <see cref="P:Syncfusion.Data.SortComparer.Comparer"/> which refers to the custom sort comparer that implements the <see cref="T:System.Collections.IComparer"/> 
            and <see cref="T:Syncfusion.Data.ISortDirection"/> interfaces.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[        
            dataGrid.SortComparers.Add (new SortComparer () 
                {
                PropertyName = "FirstName",
                Comparer = new CustomComparer()
                });
            dataGrid.SortColumnDescriptions.Add (new SortColumnDescription()
                {
                ColumnName = "FirstName",
                SortDirection = ListSortDirection.Descending
                });
                
            //CustomComparer.cs
            public class CustomComparer : IComparer<Object>, ISortDirection
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#custom-sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View">
            <summary>
            Gets the current view of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> has the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> property of type <see cref="T:Syncfusion.Data.ICollectionViewAdv"/> interface 
            that implements <see cref="T:Syncfusion.Data.ICollectionView"/> interface. View is responsible for maintaining and manipulating data 
            and other advanced operations like Sorting, Grouping, and etc.
            </summary>
            <value>The collection view of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> has the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> property of type <see cref="T:Syncfusion.Data.ICollectionViewAdv"/> interface 
            that implements <see cref="T:Syncfusion.Data.ICollectionView"/> interface. When you bind collection to <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> 
            property, the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.View"/> will be created and maintains the operations on data such as 
            grouping, sorting, insert, delete, and modification.
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/data-binding#view"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CellRenderers">
            <summary>
            Gets the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection"/> that contains the cell renderers in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CellRenderers"/> manages the creation of cells view objects when the cell is scrolled 
            into view and also unloading of the views. Contains logics to place the UIElement inside cells in display and edit mode. 
            </summary>
            <value>
            The collection containing the renderers in the SfDataGrid.
            </value>
            <remarks>
            The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CellRenderers"/> manages the creation of cells view objects when the cell is scrolled 
            into view and also unloading of the views. Contains logics to place the UIElement inside cells in display and edit mode. 
            The user can implement the renderer by extending it from the renderer he needs 
            and customize the type of cell to be loaded for each column type in editing and normal mode.
            <para/>
            <b>Note:</b>When the user overrides the renderer, he needs to replace it in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CellRenderers"/> collection.
            For example, if the user implements the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCellTextViewRenderer"/> class, to customize the cell in the <see cref="T:Syncfusion.SfDataGrid.XForms.GridTextColumn"/>, 
            then he needs to replace it in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CellRenderers"/> collection.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            dataGrid.CellRenderers.Remove("TextView");
            dataGrid.CellRenderers.Add("TextView", CustomTextViewRenderer);  
            
            //CustomTextViewRenderer.cs
            public class CustomTextViewRenderer : GridCellTextViewRenderer
            { 
            
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.Columns"/> collection of the SfDataGrid. The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> 
            collection contains the columns in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> which are created for each property in the model class. The user can add
            the various column types to the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> based on the requirement by specifying the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> 
            which associates the property in the data source.
            </summary>
            <value>The columns collection of the SfDataGrid.</value>
            <remarks>
            The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection contains the columns in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> which are created 
            for each property in the model class. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to define the columns manually by 
            adding the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> objects to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection. 
            There are different types of columns available in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> and you can create any column based on your requirement.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            dataGrid.Columns.Add(new GridTextColumn() { MappingName = "OrderID" });
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#manually-generate-columns"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-types#gridtextcolumn"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.ColumnSizer"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, that specify 
            how columns in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> are sized. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> applies width 
            for all the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer"/> property.
            </summary>
            <value>The type of <see cref="T:Syncfusion.SfDataGrid.XForms.ColumnSizer"/> that is applied to the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.XForms.ColumnSizer.None"/>.</value>
            <remarks>
            The user can specify how columns in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> are sized. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> applies width for all the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection 
            based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer"/> property. When the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer"/> is 
            <see cref="F:Syncfusion.SfDataGrid.XForms.ColumnSizer.Star"/>, all the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> are adjusted an equal column width to fit within the view.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.ColumnSizer = ColumnSizer.Star;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/column-sizer"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SourceType">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SourceType"/> of the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/>.
            </summary>
            <value>The type of the data source of SfDataGrid.</value>
            <remarks>
            The user can specify the type of <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SourceType"/> property. 
            The user may get the <see cref="T:System.InvalidCastException"/> sometimes when binding with complex data collections which can easily be handled by simply specifying the 
            type of <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SourceType"/> as given in the code example.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SourceType = typeof(OrderInfo);
            ]]>
            </code>
            </example>
            <exception cref="T:System.InvalidCastException">Sometimes you may get this exception, if you get this exception, you need to set this property
            as given in the code example.</exception>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether to generate the columns automatically or not.
            The <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> creates columns automatically based on the property <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumns"/>. 
            It decides columns generation for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumnsMode"/> property.
            </summary>
            <value><b>True</b> if auto generate columns is enabled, otherwise <b>false</b>. The default value is true.</value>
            <remarks>
            The <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> creates columns automatically based on the property <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumns"/>. 
            It decides columns generation for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumnsMode"/> property.
            The user can also customize the automatically generated column by using the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGeneratingColumn"/> event.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AutoGenerateColumns = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#automatic-columns-generation"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.HeaderRowHeight">
            <summary>
            Gets or sets the row height of the header in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The height of the header row. The default value is 40.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize the height of the header row by setting the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.HeaderRowHeight"/> property. The user can collapse the header row by setting <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.HeaderRowHeight"/> 
            to zero.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.HeaderRowHeight = 50; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/row-height-customization#customize-headerrowheight"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeight">
            <summary>
            Gets or sets the height of the rows in the body and footer region of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The height of the rows in the body and footer region of SfDataGrid. The default value is 50.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize the height of the grid rows in the body and footer region 
            by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeight"/> property. This property responds to runtime changes 
            and hence you can customize it based on your requirement.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.RowHeight = 60; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/row-height-customization#customize-rowheight-for-all-rows"/>
            <seealso cref="!:https://www.syncfusion.com/kb/7446/how-to-adjust-row-heights-of-each-row-based-on-their-content"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.DefaultColumnWidth">
            <summary>
            Gets or sets the default column width of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> renders in view based on the value of 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.DefaultColumnWidth"/> property in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The default column width of the SfDataGrid. The default value is 60.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize the default column width property based on the requirement by setting the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.DefaultColumnWidth"/> property. Columns are arranged in view based on the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.DefaultColumnWidth"/> property when the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnSizer"/> is <see cref="F:Syncfusion.SfDataGrid.XForms.ColumnSizer.None"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.DefaultColumnWidth = 50; 
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader">
            <summary>
            Gets or sets a value indicating whether to include the row header or not. By default, nothing will be displayed 
            in the row header. However, when <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeaderTemplate"/> property 
            is set, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> loads the given template as the Content of the row header cells.
            </summary>
            <value><b>True</b> if row header is visible, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            To include the RowHeader column to SfDataGrid, you need to set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> to true. 
            Initially when you set the <c>SfDataGrid.ShowRowHeader = true</c>, you will be able to see empty cells in front of the rows. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the user to set the Content and the view to be loaded in the RowHeader by using 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeaderTemplate"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.ShowRowHeader = true; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://www.syncfusion.com/kb/7164/how-to-display-rowindex-at-rowheadercell-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row header column which will be frozen at the left end of the view. To include the row header column, the user needs to set <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> 
            as true.
            </summary>
            <value>The width of the row header column. The default value is 20.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize the width of the row header column based on the requirement 
            by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowHeaderWidth"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.ShowRowHeader = true; 
            dataGrid.RowHeaderWidth = 15;
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.FooterRowsCount">
            <summary>
            Gets or sets the Footer rows count to freeze the rows at the bottom end. 
            </summary>
            <value>The number of rows to be frozen from bottom. The default value is 0.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.FooterColumnsCount">
            <summary>
            Gets or sets the Footer columns count to freeze the columns at the right end. 
            </summary>
            <value>The number of columns to be frozen from right end. The default value is 0.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.FrozenRowsCount">
            <summary>
            Gets or sets the frozen rows count to freeze the rows at the top below header. 
            </summary>
            <value>The number of rows to be frozen from top below header. The default value is 0.</value>
            <remarks>
            SfDataGrid provides extensive support to freeze the rows at the top of the view below the header row 
            by setting the <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.FrozenRowsCount"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.FrozenRowsCount = 2; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/freeze-panes#freeze-rows"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.FrozenColumnsCount">
            <summary>
            Gets or sets the frozen columns count to freeze the columns at the left, next to the row header column if 
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> is true.
            </summary>
            <value>The number of columns to be frozen from left end, next to row header, if <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> is true. 
            The default value is 0.</value>
            <remarks>
            SfDataGrid also provides support to freeze the columns at the left of the view by setting the 
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.FrozenColumnsCount"/> property.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.FrozenColumnsCount = 2; 
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/freeze-panes#freeze-columns"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. The user can get the columns that
            represent sorting from the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> collection. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> also allows 
            the user to programmatically sort the column by adding the <seealso cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> to the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> collection. The user must set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSorting"/> as true for 
            enabling interactive sorting in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The collection of columns which represent sorting.</value>
            <remarks>
            The user can get the columns that represent sorting from the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> collection. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> also allows the user to programmatically sort the column by adding the 
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> collection. The user must specify the column 
            to be sorted in the <see cref="P:Syncfusion.SfDataGrid.XForms.SortColumnDescription.ColumnName"/> which represents the <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> of the column and 
            the user can optionally set the direction of sorting to be applied by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SortColumnDescription.SortDirection"/>. 
            By default columns will be sorted in the ascending order.
            </remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.AllowSorting = true;
            dataGrid.SortColumnDescriptions.Add (new SortColumnDescription()
                {
                    ColumnName = "OrderID",
                    SortDirection = ListSortDirection.Descending
                });
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#programmatic-sorting"/>
            <seealso cref="!:https://www.syncfusion.com/kb/7379/how-to-sort-the-gridcolumns-programmatically-using-a-picker"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSorting">
            <summary>
            Gets or sets a value indicating whether to enable/disable sorting in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. When 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSorting"/> is set as true, the user can sort the data simply by tapping the column header he wishes to sort. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> also allows the user to programmatically sort the column by adding the <seealso cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> to the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> collection. 
            </summary>
            <value><b>True</b> if sorting is enabled, otherwise <b>false</b>. 
            The default value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to sort the data by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSorting"/> as true. The user can sort the data
            by just tapping the column header he wishes to sort or programmatically sort the column by adding the <seealso cref="T:Syncfusion.SfDataGrid.XForms.SortColumnDescription"/> 
            to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortColumnDescriptions"/> collection. Once sorting is applied, the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> shows a sort icon 
            in the respective column header indicating the direction of sorting. 
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            dataGrid.AllowSorting = true;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowTriStateSorting">
            <summary>
            Gets or sets a value indicating whether to enable tri-state sorting or not. By enabling the tri-state sorting in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, 
            the data can be sorted in three states : ascending,  descending and unsorted.
            </summary>
            <value><b>true</b> if tri-state sorting is enabled, otherwise <b>false</b>. 
            The default value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> also allows you to unsort the data in the original order by clicking the header again after sorting 
            to descending order by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowTriStateSorting"/> property to true.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AllowTriStateSorting = true;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#tri-state-sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowMultiSorting">
            <summary>
            Gets or sets a value indicating whether to enable multi sorting or not. By enabling the multi sorting, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the 
            user to sort the data against more than one columns.
            </summary>
            <value><b>True</b> if multi sorting is enabled, otherwise <b>false</b>. 
            The default value is false.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows multiple sorting by which the underlying 
            data can be sorted by more than one columns. To apply sorting for multiple columns, 
            tap the desired column headers after setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowMultiSorting"/> property to true.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.AllowMultiSorting = true;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#multi-sorting"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SortTapAction">
            <summary>
            Gets or sets a value indicating whether to sort the data on single tap or double tap action.
            </summary>
            <value>The value indicating the sort tap action. The default value is <see cref="F:Syncfusion.SfDataGrid.XForms.SortTapAction.SingleTap"/>.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to customize the <see cref="T:Syncfusion.SfDataGrid.XForms.SortTapAction"/> by which the user 
            can apply sorting either in single tap or double tap action.</remarks>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.SortTapAction = SortTapAction.DoubleTap;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/sorting#sort-column-in-double-click"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridStyle">
            <summary>
            Gets or sets the grid style of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. The default style will be applied to the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, the user 
            can customize the style applied to the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The grid style of the SfDataGrid.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to customize the style of datagrid, by implementing 
            the <see cref="T:Syncfusion.SfDataGrid.XForms.DataGridStyle"/> class and setting the customized grid style 
            class as <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridStyle"/>.</remarks>
            <example>
            <code>
            <![CDATA[
            dataGrid.GridStyle = new CustomGridStyle();
            
            //CustomGridStyle.cs
            public class CustomGridStyle : DataGridStyle
            {
            
            }
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/styles"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AlternationCount">
            <summary>
            Gets or sets the alternation count for applying alternate row color to the rows of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The alternation count of the rows for which the alternate row color should 
            be applied.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to set alternate row color by setting the <see cref="!:SfDataGrid.GridStyle.AlternatingRowColor"/> 
            property. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize the rows for which the alternate row color needs to be updated based 
            on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AlternationCount"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.GridStyle.AlternatingRowColor = Color.Fuschia;
            dataGrid.AlternationCount = 3;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://www.syncfusion.com/kb/5727/how-to-apply-alternate-row-color-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.DataFetchSize">
            <summary>
            Gets or sets the data fetch size for the Incremental Source. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> supports incremental loading, the user can
            customize the size of data to be fetched in incremental loading by using <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.DataFetchSize"/> property.
            </summary>
            <value>The size of the data to be fetched for the incremental source. The default value is 5.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> supports Incremental loading, by which when the user reaches the end of the collection in the dataGrid, 
            the data will be fetched automatically. The user can customize the size of the data to be fetched by setting 
            the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.DataFetchSize"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.DataFetchSize = 10;
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionController">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionController"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            The <see cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionController"/> handles the selection operations of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The selection controller of the SfDataGrid.</value>
            <remarks>The <see cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionController"/> contains methods that handle selection feature of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            The user can customize the <see cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionController"/> by implementing the <see cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionController"/> class
            and by setting the customized selection controller class to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionController"/>. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides extensibility to have multiple selection colors and to animate the selected rows by extending the 
            <see cref="T:Syncfusion.SfDataGrid.XForms.GridSelectionController"/> class.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            sfGrid.SelectionController = new CustomSelectionController(sfGrid);
            
            //CustomSelectionController.cs
            public class CustomSelectionController : GridSelectionController
            {
            
            }
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection#multiple-selection-colors"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection#selection-animation"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection#clear-selection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.SelectionMode"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. To enable Selection in 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, you need to set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode"/> property to value other than 
            <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.None"/>.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.SelectionMode"/> of the SfDataGrid. The default value is <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.None"/>.</value>
            <remarks><see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> lets you to select a specific row or group of rows either programmatically or by touch interactions. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to control the selection mode by using the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode"/> property. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> supports different selection modes : <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.Single"/>, 
            <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.Multiple"/>, <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.None"/>None and <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.SingleDeselect"/>.
            </remarks>
            <example>
            <code><![CDATA[
            dataGrid.SelectionMode = SelectionMode.Single;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection"/>
            <seealso cref="!:https://www.syncfusion.com/kb/7387/how-to-apply-multiple-selection-colors-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollingMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.ScrollingMode"/> of the <seealso cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. By default, 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> scrolls based on the pixel values. The user can customize the scrolling mode of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> 
            by using the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollingMode"/> property.
            </summary>
            <value>The <seealso cref="T:Syncfusion.SfDataGrid.XForms.ScrollingMode"/> of the SfDataGrid. The default value is <see cref="F:Syncfusion.SfDataGrid.XForms.ScrollingMode.Pixel"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to customize the scrolling mode of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> using the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollingMode"/> 
            property. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides three types of scrolling mode : <see cref="F:Syncfusion.SfDataGrid.XForms.ScrollingMode.Line"/>, 
            <see cref="F:Syncfusion.SfDataGrid.XForms.ScrollingMode.PixelLine"/> and <see cref="F:Syncfusion.SfDataGrid.XForms.ScrollingMode.Pixel"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.ScrollingMode = ScrollingMode.PixelLine;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/scrolling#scrollingmode"/>
            <seealso cref="!:https://www.syncfusion.com/kb/6935/how-to-make-sfdatagrid-scroll-like-an-excel-sheet"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CaptionSummaryRow">
            <summary>
            Gets or sets the caption summary row of the group in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. Every group as a caption summary row,  
            which is used to display the summary information in the caption of the group.
            </summary>
            <value>The caption summary row of the group in the SfDataGrid.</value>
            <remarks><seealso cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides built-in support for caption summaries. 
            The caption summary value calculated based on the records in a group and the summary information 
            will be displayed in the caption of group.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#caption-summaries"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupSummaryRows">
            <summary>
            Gets or sets the collection of group summary rows of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. The group summary value is calculated 
            based on the grouped records in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to add multiple group summary.
            </summary>
            <value>The collection of <see cref="T:Syncfusion.SfDataGrid.XForms.GridGroupSummaryRow"/> of SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides built-in support for group summaries. Group Summary is used to display the summary information.
            The user can add group summary row in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> by 
            adding <see cref="T:Syncfusion.SfDataGrid.XForms.GridGroupSummaryRow"/> to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupSummaryRows"/> collection.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            GridGroupSummaryRow summaryRow = new GridGroupSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn()
               {
               Name = "Salary",
               MappingName = "Salary",
               Format = "{Sum}",
               SummaryType = SummaryType.DoubleAggregate
               });
            sfGrid.GroupSummaryRows.Add(summaryRow);        
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.TableSummaryRows">
            <summary>
            Gets or sets the collection of table summary rows of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. The table summary value is calculated 
            based on all the records in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to add multiple table summary 
            rows either at top or bottom or at both positions.
            </summary>
            <value>The collection of <see cref="T:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow"/> of SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides built-in support for table summaries. Table Summary is used to display the summary information at 
            top and/or bottom in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. The user can add table summary row in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> by 
            adding <see cref="T:Syncfusion.SfDataGrid.XForms.GridTableSummaryRow"/> to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.TableSummaryRows"/> collection.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            GridTableSummaryRow summaryRow = new GridTableSummaryRow();
            summaryRow.SummaryColumns.Add(new GridSummaryColumn()
               {
               Name = "TotalSalary",
               MappingName = "Salary",
               Format = "{Sum}",
               SummaryType = SummaryType.DoubleAggregate
               });
            sfGrid.TableSummaryRows.Add(summaryRow);        
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/summary#table-summaries"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedIndex">
            <summary>
            Gets or sets the selected row's index in the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. To enable Selection in 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, you need to set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode"/> property to value other than 
            <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.None"/>.
            </summary>
            <value>The index of the selected row in the SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> lets you to select a specific row either programmatically or by touch interactions.
            Selection can also be done programmatically by setting the row index to be selected to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedIndex"/> property.
            </remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.SelectedIndex = 3;
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection#programmatic-selection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CurrentItem">
            <summary>
            Gets or sets the current selected item of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The current selected item of the SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItem">
            <summary>
            Gets or sets the selected item of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. To enable Selection in 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, you need to set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode"/> property to value other than 
            <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.None"/>.
            </summary>
            <value>The selected item of the SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> lets you to select a specific row either programmatically or by touch interactions.
            Selection can also be done programmatically by setting the underlying object to be selected to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItem"/> 
            property.
            </remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.SelectedItem = viewModel.OrdersInfo[5];
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection#programmatic-selection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItems">
            <summary>
            Gets or sets the selected items collection of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. To enable multiple Selection in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, 
            you need to set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectionMode"/> property to <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.Multiple"/>.
            </summary>
            <value>The selected items collection of the SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> lets you to select a specific row or group of rows either programmatically or by touch interactions.
            When the selection mode is <see cref="F:Syncfusion.SfDataGrid.XForms.SelectionMode.Multiple"/> the user can programmatically select more than one row 
            by adding the underlying object to be selected to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SelectedItems"/> property.
            </remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.SelectedItems.Add (viewModel.OrdersInfo [4]);
            dataGrid.SelectedItems.Add (viewModel.OrdersInfo [5]);
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/selection#programmatic-selection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowEditing">
            <summary>
            Gets or sets a value indicating whether to enable/disable editing in runtime. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides support for editing the cell values, when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowEditing"/> is set as true.
            </summary>
            <value><b>True</b> if editing is enabled, otherwise <b>false</b>. The 
            default value is false.</value>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowEditing = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EditTapAction">
            <summary>
            Gets or sets the edit <see cref="T:Syncfusion.SfDataGrid.XForms.TapAction"/> to enter edit mode in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides support for editing the cell values, when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowEditing"/> is set as true.
            </summary>
            <value>The tap action selected for entering into editing mode. The default value is 
            <see cref="F:Syncfusion.SfDataGrid.XForms.TapAction.OnDoubleTap"/>.</value>
            <remarks>
            The user can customize the edit tap action by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EditTapAction"/> property.
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enters into edit mode either by just tapping or double tapping the grid cells.
            </remarks>
            <example>
            <code>
            <![CDATA[
            this.dataGrid.EditTapAction = TapAction.OnTap;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing#entering-into-edit-mode"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EditorSelectionBehavior">
            <summary>
            Gets or sets the editor selection behavior, when a grid cell enters into edit mode. The editor selection behavior indicates
            the position of cursor and selection in edit element, when entering into edit mode.
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides support for editing the cell values, when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowEditing"/> is set as true.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfDataGrid.XForms.EditorSelectionBehavior"/>, when <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enters into editing mode. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.XForms.EditorSelectionBehavior.MoveLast"/>.
            </value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides support for customizing the editor selection behavior when the cell enters into edit mode.
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> either selects the text of edit element loaded inside cell or places the cursor at the last of 
            edit element loaded inside cell. By default, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> places the cursor at the last of the edit element.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.EditorSelectionBehavior = EditorSelectionBehavior.SelectAll;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing#cursor-behavior"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EditingController">
            <summary>
            Gets or sets the editing controller of the SfDataGrid.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.GridEditingController"/> of 
            SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupColumnDescriptions">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescriptions"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. The user can get the columns that
            represent grouping from the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupColumnDescriptions"/> collection. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to perform 
            grouping from the code by defining the <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescription"/> object and adding it in the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupColumnDescriptions"/> collection.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescriptions"/> collection 
            of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows grouping by which the records having identical values in the grouped column are combined to form a group.
            The user can get the columns that represent grouping from the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupColumnDescriptions"/> collection. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> groups the data based on the <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescription"/> object that is added to the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupColumnDescriptions"/> collection. The user must set the <see cref="P:Syncfusion.SfDataGrid.XForms.GroupColumnDescription.ColumnName"/> as the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MappingName"/> of the column, he wants to group.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[        
            dataGrid.GroupColumnDescriptions.Add (new GroupColumnDescription () 
                {
                ColumnName = "CustomerID",
                });
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#programmatic-grouping"/>
            <seealso cref="!:https://www.syncfusion.com/kb/7396/how-to-group-by-a-column-that-is-not-in-columns-collection"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCaptionTextFormat">
            <summary>
            Gets or sets the group caption text format of the caption summary rows in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. Every group as a caption summary row,  
            which is used to display the summary information in the caption of the group. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to customize the group caption 
            text format by using this property.
            </summary>
            <value>The group caption text format of the caption summary rows in SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> supports setting custom GroupCaptionTextFormat for CaptionSummaryRows. 
            By default the group caption text will be in the format "{ColumnName} : {Key} - {ItemsCount} Items". 
            The user can customize this text format by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupCaptionTextFormat"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.GroupCaptionTextFormat = "{ColumnName} : {Key} - {ItemsCount} Produkte";
            ]]>
            </code> 
            </example>
            <seealso cref="!:https://www.syncfusion.com/kb/6907/how-to-customize-groupcaptiontextformat-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumnsMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. 
            To generate the columns automatically based on the underlying collection the user must set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumns"/> 
            as true. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> decides columns generation based on the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumnsMode"/> property.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode"/> of SfDataGrid. 
            The default value is <see cref="F:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode.Reset"/>.</value>
            <remarks>
            When columns are generated automatically by setting <c>SfDataGrid.AutoGenerateColumns = true</c>, the user can set the 
            mode in which the columns should be generated by using the <see cref="!:SfDataGrid.AutoGernerateColumnsMode"/> property. 
            The user can also customize the automatically generated column by using the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGeneratingColumn"/> event.
            In order to include only the columns defined manually in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection, the user must set the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoGenerateColumnsMode"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.AutoGenerateColumnsMode.None"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AutoGenerateColumnsMode = AutoGenerateColumnsMode.None;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#automatic-columns-generation"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowLoadMore">
            <summary>
            Gets or sets a value indicating whether to enable/disable the load more option for adding more records in runtime, when the 
            grid is scrolled to the last record of the collection. On enabling this property, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides an option 
            to add more items to the underlying collection when the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/> is tapped, 
            by executing the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> and hence it is mandatory to set the property too for enabling the load more option.
            </summary>
            <value><b>True</b>, if load more is enabled, otherwise <b>false</b>. The 
            default value is false.</value>
            <remarks> 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides an option to load more items in runtime, when the grid is scrolled to the last record of the collection.
            A command will be fired when the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/> is tapped and it can be used to add more items to the underlying data. 
            To enable the load more feature, you must set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowLoadMore"/> to true and also must set the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> property. By default, a button will be displayed when the grid is scrolled
            to the last record. However, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize this view based on the requirement using 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/> property.
            <para/>
            <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> opacity animations cut for Xamarin.Forms.Android owing to the following issue 
            <see cref="!:https://bugzilla.xamarin.com/show_bug.cgi?id=51238"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowLoadMore = true;
            dataGrid.LoadMoreCommand = new Command(ExecuteLoadMoreCommand);
            
            private async void ExecuteLoadMoreCommand()
            {
                this.dataGrid.IsBusy = true;
                await Task.Delay(new TimeSpan(0, 0, 5));
                viewModel.LoadMoreItems();
                this.dataGrid.IsBusy = false;
            }
            ]]>
            </code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/load-more"/>
            <seealso cref="!:https://www.syncfusion.com/kb/7382/how-to-improve-performance-when-doing-bulk-changes-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand">
            <summary>
            Gets or sets the command to be executed when an end-user taps the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> to load new data items 
            in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The command to be executed when load more view is clicked.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to load more items in the datagrid, when the last data of the collection is reached, by executing the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> when an end-user taps the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowLoadMore = true;
            dataGrid.LoadMoreCommand = new Command(ExecuteLoadMoreCommand);
            
            private async void ExecuteLoadMoreCommand()
            {
                this.dataGrid.IsBusy = true;
                await Task.Delay(new TimeSpan(0, 0, 5));
                viewModel.LoadMoreItems();
                this.dataGrid.IsBusy = false;
            }
            ]]>
            </code>
            </example>
            <seealso cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/load-more#loadmorecommand"/>
            <seealso cref="!:https://www.syncfusion.com/kb/7382/how-to-improve-performance-when-doing-bulk-changes-in-sfdatagrid"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridTappedCommand">
            <summary>
            Gets or sets the command to be executed when an end-user taps on the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            </summary>
            <value>The command to be executed when Tap action is performed on DataGrid.</value>
            <example>
            <code lang="XAML"><![CDATA[
            <ContentPage.BindingContext>
            <local:ViewModel x:Name="viewModel" />
            </ContentPage.BindingContext>
            <syncfusion:SfDataGrid x:Name="dataGrid"  
                               GridTappedCommand="{Binding TapCommand}"
            </syncfusion:SfDataGrid>
            </sfgrid:SfDataGrid>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridLongPressedCommand">
            <summary>
            Gets or sets the command to be executed when an end-user long Press on the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The command to be executed when LongPress action is performed on <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.</value>
            <example>
            <code lang="XAML"><![CDATA[
            <ContentPage.BindingContext>
            <local:ViewModel x:Name="viewModel" />
            </ContentPage.BindingContext>
            <syncfusion:SfDataGrid x:Name="dataGrid"  
                               GridLongPressedCommand="{Binding LongPressedCommand}"
            </syncfusion:SfDataGrid>
            </sfgrid:SfDataGrid>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMorePosition">
            <summary>
            Gets or sets the position to load the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. When the grid is scrolled to the 
            last record of the collection, a view will be displayed which provides an option to load more items when the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> 
            is tapped. The user can customize the position of the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> either to appear in the bottom or top below the header 
            using this property. To enable the load more option, it is mandatory to set <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowLoadMore"/> as true.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreViewPosition"/> to display the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> in SfDataGrid. The default value is 
            <see cref="F:Syncfusion.SfDataGrid.XForms.LoadMoreViewPosition.Bottom"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the position of the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/>. 
            By default, the load more view will be positioned at the bottom of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. The user can customize the load more view to 
            appear in the top below the header by setting <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMorePosition"/> as <see cref="F:Syncfusion.SfDataGrid.XForms.LoadMoreViewPosition.Top"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.LoadMorePosition = LoadMoreViewPosition.Top;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/load-more#customize-loadmoreview-position"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, which will be displayed when the grid is scrolled 
            to the last position of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, provided that <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowLoadMore"/> is set as true.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> of SfDataGrid.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> provides an option to load more items in runtime, when the grid is scrolled to the last record of the collection.
            A command will be fired when the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/> is tapped and it can be used to add more items to the underlying data. 
            To enable the load more feature, you must set the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowLoadMore"/> to true and also must set the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> property. 
            <para/>
            By default, load more view is a button, containing the text "LOAD MORE ITEMS". <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> 
            allows to customize the load more view, by implementing the <see cref="T:Syncfusion.SfDataGrid.XForms.LoadMoreView"/> class and setting 
            the customized load more view class to <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.LoadMoreView = new CustomLoadMoreView();
            
            //CustomLoadMoreView.cs
            public class CustomLoadMoreView : LoadMoreView
            {
            
            }
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/load-more#customize-loadmoreview"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsBusy">
            <summary>
            Gets or sets a value indicating whether the busy state of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> while executing the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> or <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand"/>.
            </summary>
            <value><b>True</b> if SfDataGrid is executing either the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> or <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand"/>, otherwise <b>false</b>. 
            By default the value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> will be busy when the underlying collection is refreshed or modified by executing the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreCommand"/> or <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullToRefreshCommand"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreText">
            <summary>
            Gets or sets the load more text to be displayed in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/>. 
            By default, the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/> displays the "LOAD MORE ITEMS" text, the user can customize the text to be displayed 
            in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/> by using this property.
            </summary>
            <value>The text to be displayed in <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LoadMoreView"/>. By default, 
            the value is "LOAD MORE ITEMS".</value>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.LoadMoreText = "Load More Items";
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/load-more#customize-load-more-display-text"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.MaxSwipeOffset">
            <summary>
            Gets or sets the maximum swipe offset of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables the swiping option by setting the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSwiping"/> to true. Swipe views are displayed when swiping from ‘left to right’ or ‘right to left’ on a data row. 
            The swipe gesture can be restricted up to a certain point by using this property.
            </summary>
            <value>The maximum swipe offset of SfDataGrid. The default value is 200.</value>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.MaximumSwipeOffset = 300;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/swiping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSwiping">
            <summary>
            Gets or sets a value indicating whether to enable/disable the swiping in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. Swipe views are displayed
            when swiping from ‘left to right’ or ‘right to left’ on a data row when swiping is enabled. 
            </summary>
            <value><b>True</b>, if swiping is enabled, otherwise <b>false</b>. The default 
            value is false.</value>
            <remarks>
            When swiping is enabled in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, the swipe view can be displayed when swiping from ‘left to right’ or ‘right to left’ 
            on a data row. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the swipe views to be displayed by using 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LeftSwipeTemplate"/> and <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RightSwipeTemplate"/>. The swipe gesture can be restricted up to a 
            certain point by using <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.MaxSwipeOffset"/> property.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowSwiping = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/swiping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LeftSwipeTemplate">
            <summary>
            Gets or sets the left swipe template to be displayed when swiping from 'left to right'. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables you 
            to load a desired Content to be displayed when swiping towards right using this property. The swipe views will be displayed only when 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSwiping"/> is set as true.
            </summary>
            <value>The template that is displayed when left swipe action is performed.</value>
            <remarks>
            When swiping is enabled in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, the swipe view can be displayed when swiping from ‘left to right’ or ‘right to left’ 
            on a data row. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the swipe views to be displayed by using 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LeftSwipeTemplate"/> and <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RightSwipeTemplate"/>. The swipe gesture can be restricted up to a 
            certain point by using <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.MaxSwipeOffset"/> property. The contents inside the swipe template are arranged based on 
            the offset values when you swipe a data row.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.LeftSwipeTemplate = new DataTemplate(() =>
            {
            
            });
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/swiping#swipetemplate"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RightSwipeTemplate">
            <summary>
            Gets or sets the left swipe template to be displayed when swiping from 'right to left'. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables you 
            to load a desired Content to be displayed when swiping towards left using this property. The swipe views will be displayed only when 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowSwiping"/> is set as true.
            </summary>
            <value>The template that is displayed when right swipe action is performed.</value>
            <remarks>
            When swiping is enabled in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, the swipe view can be displayed when swiping from ‘left to right’ or ‘right to left’ 
            on a data row. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the swipe views to be displayed by using 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LeftSwipeTemplate"/> and <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RightSwipeTemplate"/>. The swipe gesture can be restricted up to a 
            certain point by using <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.MaxSwipeOffset"/> property. The contents inside the swipe template are arranged based on 
            the offset values when you swipe a data row.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.RightSwipeTemplate = new DataTemplate(() =>
            {
            
            });
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/swiping#swipetemplate"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AutoExpandGroups">
            <summary>
            Gets or sets a value indicating whether the <seealso cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> should auto expand groups when grouping. By enabling,
            this property, when the user group any column, then all groups will be in expanded state.
            </summary>
            <value><b>True</b> if auto expand groups is enabled, otherwise, <b>false</b>. 
            The default value is true.</value>
            <example>
            <code lang="C#">
            <![CDATA[
            this.dataGrid.AutoExpandGroups = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#expand-groups-while-grouping"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowGroupExpandCollapse">
            <summary>
            Gets or sets a value indicating whether to allow expanding and collapsing of groups in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            By default, the groups will be in expanded state in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, when grouped. However, the user can expand or collapse a 
            group in runtime by enabling this property.
            </summary>
            <value><b>True</b> if expand and collapse groups is enabled, otherwise <b>false</b>. The default value is false.</value>
            <example>
            <code lang="C#">
            <![CDATA[
            this.dataGrid.AllowGroupExpandCollapse = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#expand-or-collapse-the-groups"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowDraggingColumn">
            <summary>
            Gets or sets a value indicating whether to enable/disable the column dragging functionality in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> 
            allows you to drag and drop a column header by enabling this property.
            </summary>        
            <value><b>True</b> if column dragging is enabled, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to drag and drop a column header by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowDraggingColumn"/> property 
            to true. Drag view is displayed while dragging a column header. The drag and drop operation can be handled based on the requirement using 
            <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryColumnDragging"/> event.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowDraggingColumn = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columndraganddrop"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridColumnDragDropController">
            <summary>
            Gets or sets the grid column drag and drop controller.
            </summary>
            <value>The grid column drag and drop controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowDraggingRow">
            <summary>
            Gets or sets a value indicating whether to enable/disable the row dragging functionality in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> 
            also allows you to customize the row drag and drop popup using the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowDragDropTemplate"/> property.
            </summary>
            <value><b>True</b> if row dragging is enabled, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to drag and drop a row by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowDraggingRow"/> property 
            to true. A customizable row drag and drop template is displayed while dragging a row. The drag and drop operation can be handled 
            based on the requirement using <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowDragging"/> event.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowDraggingRow = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/rowdraganddrop"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridRowDragDropController">
            <summary>
            Gets or sets the grid row drag and drop controller.
            </summary>
            <value>The grid column row and drop controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowDragDropTemplate">
            <summary>
            Gets or sets the template to be displayed when row drag and drop action is performed. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows 
            the user to load a desired Content when performing row drag and drop operation using this property. To enable row drag and drop, it is 
            mandatory to set <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowDraggingRow"/> to true.
            </summary>
            <value>The template that is displayed when row drag and drop action is done.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to drag and drop a row by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowDraggingRow"/> property 
            to true. A customizable row drag and drop template is displayed while dragging a row. The default template will be displayed, if 
            row drag and drop template is empty. The drag and drop operation can be handled based on the requirement using 
            <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowDragging"/> event.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.RowDragDropTemplate = new DataTemplate(() => { return new RowTemplate(); });
            
            //RowTemplate.cs
            public class RowTemplate : Grid
            {
            
            }
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/rowdraganddrop#row-drag-and-drop-template"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowResizingColumn">
            <summary>
            Gets or sets a value indicating whether to enable the column resizing or not. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows to resize the 
            columns by tapping and dragging the right border of the column headers, by enabling this property.
            </summary>
            <value><b>True</b> if column resizing is enabled, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            By enabling column resizing in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> by setting <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowResizingColumn"/> to true, the columns 
            can be resized from <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MinimumWidth"/> to <see cref="P:Syncfusion.SfDataGrid.XForms.GridColumn.MaximumWidth"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.AllowResizingColumn = true;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#resizing-columns"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ResizingMode">
            <summary>
            Gets or sets a value indicating the <see cref="T:Syncfusion.SfDataGrid.XForms.ResizingMode"/> for the resizing operation in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control. 
            Columns in <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> can be resized either on touch-up or on-move.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.ResizingMode"/> of SfDataGrid. The default 
            value is <see cref="F:Syncfusion.SfDataGrid.XForms.ResizingMode.OnMoved"/>.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows two modes of resizing, which can be set using this property. 
            The available resizing modes are: <see cref="F:Syncfusion.SfDataGrid.XForms.ResizingMode.OnMoved"/> and <see cref="F:Syncfusion.SfDataGrid.XForms.ResizingMode.OnTouchUp"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.ResizingMode = ResizingMode.OnTouchUp;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/columns#resizing-modes"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnResizingController">
            <summary>
            Gets or sets the column resizing controller.
            </summary>
            <value>The grid column drag and drop controller.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.NotificationSubscriptionMode">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Data.NotificationSubscriptionMode"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. By default, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> 
            gets the notification for collection and property change of the underlying data. The user can customize the datagrid to get notifications from
            underlying data for either collection change or property change or both or none of them by using this property.
            </summary>
            <value>
            The <see cref="T:Syncfusion.Data.NotificationSubscriptionMode"/> of SfDataGrid. The default value is 
            <see cref="F:Syncfusion.Data.NotificationSubscriptionMode.CollectionChange"/> and 
            <see cref="F:Syncfusion.Data.NotificationSubscriptionMode.PropertyChange"/>.
            </value>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.NotificationSubscriptionMode = NotificationSubscriptionMode.PropertyChange;
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupingMode">
            <summary>
            Gets or sets a value that indicates whether to allow multiple columns in SfDataGrid.
            By default, the last column gets grouped if multiple <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescription"/> are added. other GroupColumnDescriptions will be cleared.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.GroupingMode = GroupingMode.Multiple;
            ]]></code>
            </example>
            <value>
            <b>GroupingMode.Multiple</b> Will allow to group more than one column.
            <b>GroupingMode.Single</b> will allow to group only one column.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IndentColumnWidth">
            <summary>
            Gets or sets the width of the indent column. 
            as true.
            </summary>
            <value>The width of the indent column. The default value is 20.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows you to customize the width of the indent column based on the requirement 
            by setting the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IndentColumnWidth"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[      
            dataGrid.IndentColumnWidth = 15;
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowColumnWhenGrouped">
            <summary>
            Gets or sets a value indicating whether the column is displayed on SfDataGrid after it is grouped.
            </summary>
            <value>
            <b>true</b> if the column is displayed in SfDataGrid ; otherwise ,<b>false</b>.The default value is <b>true</b>.
            </value>       
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CaptionSummaryTemplate">
            <summary>
            Gets or sets the template that is used to display the contents of a group caption. By default, text will be displayed on group caption . 
            However, when this property is set, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> loads the template as the Content of the group caption.
            </summary>
            <value>The template that displays the contents of a group caption.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the group caption with different type of views by setting <see cref="T:Xamarin.Forms.DataTemplateSelector"/> to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CaptionSummaryTemplate"/>.
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
            
            <sfgrid:SfDataGrid.CaptionSummaryTemplate>
                <DataTemplate>
                  <Label Text = "Template" 
                         HorizontalTextAlignment = "Center" 
                         VerticalTextAlignment = "Center" 
                         />
                </DataTemplate>
            </sfgrid:SfDataGrid.CaptionSummaryTemplate>
            
            </sfgrid:SfDataGrid>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupSummaryTemplate">
            <summary>
            Gets or sets the template that is used to display the contents of a group summary. By default, text will be displayed on group summary . 
            However, when this property is set, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> loads the template as the content of the group summary.
            </summary>
            <value>The template that displays the contents of a group summary.</value>
            <remarks>
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> allows the user to customize the group summary with different type of views by setting <see cref="T:Xamarin.Forms.DataTemplateSelector"/> to the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupSummaryTemplate"/>.
            </remarks>
            <example>
            <code lang="XAML"><![CDATA[
            
            <sfgrid:SfDataGrid.GroupSummaryTemplate>
                <DataTemplate>
                  <Label Text = "Template" 
                         HorizontalTextAlignment = "Center" 
                         VerticalTextAlignment = "Center" 
                         />
                </DataTemplate>
            </sfgrid:SfDataGrid.GroupSummaryTemplate>
            
            </sfgrid:SfDataGrid>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.SummaryCalculationMode">
            <summary>
            Gets or sets a value that denotes the mode of calculation for caption and group summaries for improved performance. 
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.Data.CalculationMode"/> that indicates when to perform the summary calculation.
            The default value is<see cref="F:Syncfusion.Data.CalculationMode.Default"/>.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.FreezeGroupHeader">
            <summary>
            Gets or sets a value indicating whether to froze the group header horizontaly or not in SfDataGrid.
            By default, group header will not be frozen horizontally <see cref="T:Syncfusion.SfDataGrid.XForms.GroupColumnDescription"/> are added. other GroupColumnDescriptions will be cleared.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            dataGrid.FreezeGroupHeader = True;
            ]]></code>
            </example>
            <value>
            <b>True</b> Group header will be frozed horizontally.
            <b>False</b> Group header can be scrolled horizontally.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridColumnSizer">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumnSizer"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>, which handles the column 
            sizing for all the columns in the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.Columns"/> collection of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumnSizer"/> of SfDataGrid.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnDragIndicatorView">
            <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.View"/> indicates the instance of the dragged column is drop.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnResizingIndicatorView">
            <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.View"/> indicating the instance of the column resizing indicator view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowDragIndicatorView">
            <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.View"/> indicates the instance of  the dragged row is drop.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnDragView">
            <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.View"/> indicates the instance of the dragging column.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowDragView">
            <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.View"/> indicates the instance of  the dragging row.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ColumnResizingIndicatorLine">
            <summary>
             Gets or sets the <see cref="T:Xamarin.Forms.View"/> indicating the instance of the column resizing indicator line.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowMultiLevelGrouping">
            <summary>
            Gets or sets a value indicating whether to group more than one column in SfDataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.VisualContainer">
            <summary>
            Gets the VisualContainer of the SfDataGrid.
            </summary>
            <value>The visual container.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.HeaderLineCount">
            <summary>
            Gets or sets the header line count of the SfDataGrid. The default value is 1.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RowGenerator">
            <summary>
            Gets or sets the RowGenerator.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.HasView">
            <summary>
            Gets a value indicating whether the View is null or not.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GridModel">
            <summary>
            Gets or sets the GridModel of the SfDataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.InRowHeaderChange">
            <summary>
            Gets or sets a value indicating whether the SfDataGrid is in row header change.
            </summary>
            <value><b>true</b> if in row header change; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.LeftSwipeView">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.View"/> which is created using left swipe template.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.RightSwipeView">
            <summary>
            Gets or sets the <see cref="T:Xamarin.Forms.View"/> which is created using right swipe template
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsConditionalFormattingApplied">
            <summary>
            Gets a value indicating whether the cell style or row style is applied in SfDataGrid.
            </summary>
            <value><b>true</b> if cell style or row style is applied; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsQueryCellStyleEventHooked">
            <summary>
            Gets a value indicating whether the cell style event is hooked.
            </summary>
            <value><b>true</b> if cell style event is hooked; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.IsQueryRowStyleEventHooked">
            <summary>
            Gets a value indicating whether the row style event is hooked.
            </summary>
            <value><b>true</b> if row style event is hooked; otherwise, <b>false</b>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.VerticalOverScrollMode">
            <summary>
            Gets or sets a value indicating what effect to be applied when <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> is vertically over scrolled. 
            <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> enables either to provide a bounce effect or no effect when <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> is vertically over-scrolled.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.VerticalOverScrollMode"/> of SfDataGrid. By default, <see cref="F:Syncfusion.SfDataGrid.XForms.VerticalOverScrollMode.Bounce"/> 
            effect is applied.
            </value>
            <remarks>
            Note that the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.VerticalOverScrollMode"/> has no effect in Windows platforms since it does not support bounce effects.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.VerticalOverScrollMode = VerticalOverScrollMode.None;
            ]]>
            </code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/scrolling#vertical-over-scroll-mode"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EnableDataVirtualization">
            <summary>
            Gets or sets a value indicating whether to create RecordEntry for all the objects in <see cref="P:Syncfusion.Data.CollectionViewAdv.SourceCollection"/> while loading itself.
            By default RecordEntry created for all the objects of <see cref="P:Syncfusion.Data.CollectionViewAdv.SourceCollection"/>.
            </summary>
            <value><b>True</b> to create RecordEntry only when try to access this index.</value>                      
            <remarks>
            If the <see cref="P:Syncfusion.Data.CollectionViewAdv.SourceCollection"/> is null then <see cref="M:Syncfusion.Data.CollectionViewAdv.GetItemAt(System.Int32)"/> used to populates the <see cref="P:Syncfusion.Data.CollectionViewAdv.Records"/>.
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[
            dataGrid.EnableDataVirtualization = true;
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the children of the SfDataGrid.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSizeAllocated(System.Double,System.Double)">
            <summary>
            This method is called when the size of the element is set during a layout cycle. This method is called directly 
            before the <see cref="E:Xamarin.Forms.VisualElement.SizeChanged"/> event is emitted.
            </summary>
            <param name="width">The new width of the element.</param>
            <param name="height">The new height of the element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control.
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when adding a child.
            </summary>
            <param name="child">A child of the SfDataGrid.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> when removing a child.
            </summary>
            <param name="child">A child of the SfDataGrid.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.Initialize_BindableProperties">
            <summary>
            Initalizing the Bindable properties values
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ResetSwipeOffset">
            <summary>
            Resets the swipe offset of <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. This method will reset the swiping offset programmatically when we no 
            need to maintain the swiping after navigating to another page.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.GetUnboundCellValue(Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            Gets the cell value to populate the UnboundColumn by evaluating the expression or format with the record.
            </summary>
            <param name="column">
            Specifies the corresponding column to get the cell value.
            </param>
            <param name="record">
            Specifies the corresponding record to get the cell value.
            </param>
            <returns>
            Returns the cell value of the specified column based on expression or format with the record.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Thrown when the GridUnboundColumn is defined with expression for DataTable .
            </exception>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollToColumnIndex(System.Int32)">
            <summary>
            Scrolls the SfDataGrid to the column at the given index. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> scrolls to the given 
            column index, next to the RowHeader column if the <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> is true.
            </summary>
            <param name="columnIndex">The destination column index to scroll.</param>
            <remarks>SfDataGrid supports programmatic scrolling. The user can scroll to the 
            required column by using this method.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/scrolling#scroll-to-column-index"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollToRowIndex(System.Int32)">
            <summary>
            Scrolls the SfDataGrid to the row at the given index.
            </summary>
            <param name="rowIndex">The destination row index to scroll.</param>
            <remarks>SfDataGrid supports programmatic scrolling. The user can scroll to the 
            required row by using this method.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/scrolling#scroll-to-row-index"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollToRowColumnIndex(System.Int32,System.Int32)">
            <summary>
            Scrolls the SfDataGrid to given row and column index. <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> scrolls to the given column index, next to the row header column, if 
            <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ShowRowHeader"/> is set as true.
            </summary>
            <param name="rowIndex">The destination row index to scroll.</param>
            <param name="columnIndex">The destination column index to scroll.</param>
            <remarks>SfDataGrid supports programmatic scrolling. The user can scroll to the 
            required row and column by using this method.
            </remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/scrolling#scroll-to-row-and-column-index"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ExpandAllGroup">
            <summary>
            Expands all the groups in SfDataGrid.
            </summary>
            <remarks>This method expands all the groups in SfDataGrid programmatically.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#expand-or-collapse-all-the-groups"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CollapseAllGroup">
            <summary>
            Collapses all the groups in SfDataGrid.
            </summary>
            <remarks>This method collapses all the groups in SfDataGrid programmatically.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#expand-or-collapse-all-the-groups"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ExpandGroupsAtLevel(System.Int32)">
            <summary>
            Expands the group based on its level.
            </summary>
            <param name="groupLevel">Specifies the group level to expand the group.</param>       
            <example><code lang="C#"><![CDATA[        
             this.dataGrid.ExpandGroupsAtLevel(2);
            ]]></code></example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CollapseGroupsAtLevel(System.Int32)">
            <summary>
            Collapses the group based on its level.
            </summary>
            <param name="groupLevel">Specifies the group level to collapse the group.</param>
            <example><code lang="C#"><![CDATA[        
             this.dataGrid.CollapseGroupsAtLevel(2);
            ]]></code></example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ExpandGroup(Syncfusion.Data.Group)">
            <summary>
            Expands the specified group in SfDataGrid.
            </summary>
            <param name="group">Specifies the group to expand it from view.</param>   
            <example><code lang="C#"><![CDATA[        
             var group = (dataGrid.View.Groups[0] as Group);
             this.dataGrid.ExpandGroup(group);
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#expand-or-collapse-the-specific-group"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CollapseGroup(Syncfusion.Data.Group)">
            <summary>
            Collapses the specified group in SfDataGrid.
            </summary>
            <param name="group">Specifies the group to collapse it from view.</param>       
            <example><code lang="C#"><![CDATA[        
             var group = (dataGrid.View.Groups[0] as Group);
             this.dataGrid.CollapseGroup(group);
            ]]></code></example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/grouping#expand-or-collapse-the-specific-group"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InvalidateRowHeight(System.Int32,System.Boolean)">
            <summary>
            Invalidates the height of the specified row to raise in the <see cref="E:Syncfusion.SfDataGrid.XForms.SfDataGrid.QueryRowHeight"/> event programmatically.
            </summary>
            <param name="rowIndex">Specifies the corresponding row index to invalidate its row height.</param>
            <param name="canInvalidate">Specifies whether to invalidate the row height or not</param>
            <remarks>Resets the particular row height. 
            Once row heights are reset, need to call the InvalidateMeasureInfo method of <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.VisualContainer"/> to refresh the view.</remarks>
            <example><code lang="C#"><![CDATA[        
            dataGrid.InvalidateRowHeight(2, true);
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.BeginEdit(System.Int32,System.Int32)">
            <summary>
            Begins editing of the grid cell in the specified row and column index.
            </summary>
            <param name="rowIndex">The row index in which editing should be done.</param>
            <param name="columnIndex">The column index in which editing should be done.</param>
            <remarks>The user can edit the required cell programmatically by using this 
            method, specifying the row and column index of the cell to be edited.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing#begin-editing"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.EndEdit">
            <summary>
            Ends the editing of the grid cell which is currently being edited.
            </summary>
            <remarks>The user can end editing in the current cell programmatically by using this method. 
            Edited values will be committed to the GridCell.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing#end-editing"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CancelEdit">
            <summary>
            Cancels the editing of the grid cell which is currently being edited.
            </summary>
            <remarks>The user can cancel the editing in the current cell programmatically by using this method. 
            Edited values will not be committed to the GridCell.</remarks>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/editing#cancel-editing"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.Refresh">
            <summary>
            Refresh the view in runtime.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAllowEditingPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the AllowEditing property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnEditTapActionChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the EditTapAction property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnEditorSelectionBehaviorChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the EditorSelectionBehavior property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAllowPullToRefreshChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the AllowPullToRefresh property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.AllowEditingChanged">
            <summary>
            Allows or disallows the toggle of the check boxes in the view based on the AllowEditing property value.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CanQueryRowHeight">
            <summary>
            Determines whether this instance can query row height.
            </summary>
            <returns><b>true</b> if this instance can query row height; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.SetSourceList(System.Object)">
            <summary>
            View is created and the source is set to the view. The events in the GridModel is wired in this method.
            </summary>
            <param name="source">The items source of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.EnsureViewProperties">
            <summary>
            Ensures the View properties once the view is created.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CreateCollectionView(System.Object)">
            <summary>
            The SfDataGrid's view is created and the columns are generated if the AutoGenerateColumns property is set.
            </summary>
            <param name="source">The items source of the SfDataGrid.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CreateCollectionViewAdv(System.Collections.IEnumerable,Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            The QueryableCollectionViewWrapper is created and the SourceType is set.
            </summary>
            <param name="source">The items source of the SfDataGrid as IEnumerable collection.</param>
            <param name="dataGrid">The SfDataGrid.</param>
            <returns>The View.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CheckColumnNameinItemProperties(System.String)">
            <summary>
            Checks the property name in item properties.
            </summary>
            <param name="property">Property value.</param>
            <returns><b>true</b>, if property name in item properties was checked, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.GetSourceList(System.Object)">
            <summary>
            Returns the passed items source as IEnumerable collection.
            </summary>
            <param name="source">The ItemsSource of the SfDataGrid.</param>
            <returns>The source list.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.GenerateGridColumns">
            <summary>
            Generates the GridColumns when the SfDataGrid's AutoGenerateColumns property is set.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateRowAndColumnCount(System.Boolean)">
            <summary>
            Updates the row and column count of the SfDataGrid.
            </summary>
            <param name="canGenerateVisibleColumns">A boolean value based on which the GridColumns will be generated while updating the column count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateIndentColumnWidths">
            <summary>
            Set width for indent columns
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateFreezePaneRows">
            <summary>
            Sets the number of rows to be in Frozen state in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateFreezePaneColumns">
            <summary>
            Sets the number of columns to be in Frozen state in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateRowCountAndScrollBars">
            <summary>
            Updates the row count and scroll bars.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateColumnCount(System.Boolean)">
            <summary>
            Updates the columnCount of the in the SfDataGrid in runtime.
            </summary>
            <param name="canGenerateVisibleColumns">A boolean value based on which the GridColumns will be generated while updating the column count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateRowCount">
            <summary>
            Updates the RowCount of the SfDataGrid in runtime.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.DeferRefresh">
            <summary>
            The SfDataGrid's View is refreshed by calling this method.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitialGroup">
            <summary>
            Initials the group.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitialSort">
            <summary>
            Initials the sort. Called when SortColumndescriptions is set from the user side.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InsertRow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts the given number of row lines at the given index in the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <param name="insertAt">The index to insert the lines.</param>
            <param name="count">The count.</param>
            <param name="recordStartIndex">Record start index.</param>
            <param name="recordCount">Record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RemoveRow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the given number of row lines from the given index in the <see cref="T:Syncfusion.GridCommon.ScrollAxis.LineSizeCollection"/>.
            </summary>
            <param name="removeAt">The index to remove the lines.</param>
            <param name="count">The count.</param>
            <param name="recordStartIndex">Record start index.</param>
            <param name="recordCount">Record count.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSortColumnsChanged(System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changed.
            </summary>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSortColumnsChanged(Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangedEventArgs)">
            <summary>
            Raises the sort columns changed. Checks whether SortColumnChanged Event is handled or not
            </summary>
            <param name="args">The DataGridSortColumnsChangedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSortColumnsChanging(System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.SfDataGrid.XForms.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Raises the sort columns changing.
            </summary>
            <param name="addedColumns">Added columns.</param>
            <param name="removedColumns">Removed columns.</param>
            <param name="action">The action.</param>
            <returns><b>true</b>, if sort columns changing was raised, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSortColumnsChanging(Syncfusion.SfDataGrid.XForms.DataGridSortColumnsChangingEventArgs)">
            <summary>
            Raises the sort columns changing. Checks whether SortColumnChanging Event is handled or not
            </summary>
            <param name="args">The DataGridSortColumnsChangingEventArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSelectionChagingEvent(Syncfusion.SfDataGrid.XForms.GridSelectionChangingEventArgs)">
            <summary>
            Raises the SelectionChanging event.
            </summary>
            <param name="args">GridSelectionChangingEvent argument</param>
            <returns><b>true</b>, if selection changing was raised, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSelectionChangedEvent(Syncfusion.SfDataGrid.XForms.GridSelectionChangedEventArgs)">
            <summary>
            Raises the SelectionChanged event.
            </summary>
            <param name="args">The GridSelectionChangedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseQueryRowHeight(Syncfusion.SfDataGrid.XForms.QueryRowHeightEventArgs)">
            <summary>
            Raises the QueryRowHeight event.
            </summary>
            <param name="e">The QueryRowHeightEventArgs.</param>
            <returns><b>true</b>, if query row height was raised, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseAutoGeneratingEvent(Syncfusion.SfDataGrid.XForms.AutoGeneratingColumnEventArgs)">
            <summary>
            Raises the AutoGeneratingColumn event.
            </summary>
            <param name="args">The AutoGeneratingColumnArgs.</param>
            <returns>The auto generating event.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGridViewCreated(Syncfusion.SfDataGrid.XForms.GridViewCreatedEventArgs)">
            <summary>
            Raises the GridViewCreated event.
            </summary>
            <param name="e">The GridViewCreatedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGridInitialized(Syncfusion.SfDataGrid.XForms.GridLoadedEventArgs)">
            <summary>
            Raise the GridLoaded event.
            </summary>
            <param name="e">GridLoadedEvent argument</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGridTapped(Syncfusion.SfDataGrid.XForms.GridTappedEventArgs)">
            <summary>
            Raises the GridTapped event.
            </summary>
            <param name="e">The GridTappedEventsArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGridDoubleTapped(Syncfusion.SfDataGrid.XForms.GridDoubleTappedEventArgs)">
            <summary>
            Raises the GridDoubleTapped event.
            </summary>
            <param name="e">The GridDoubleTappedEventsArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGridLongPressed(Syncfusion.SfDataGrid.XForms.GridLongPressedEventArgs)">
            <summary>
            Raises the GridLongPressed event.
            </summary>
            <param name="e">The GridLongPressedArgs.The data for the <see cref="!:Syncfusion.SfDataGrid.SfDataGrid.GridLongPressed"/> event.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSwipeStartedEvent(Syncfusion.SfDataGrid.XForms.SwipeStartedEventArgs)">
            <summary>
            Raises the swipe started event.
            </summary>
            <param name="args">SwipeStartedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSwipingEvent(Syncfusion.SfDataGrid.XForms.SwipingEventArgs)">
            <summary>
            Raises the swiping event.
            </summary>
            <param name="args">SwipingEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseSwipeEndedEvent(Syncfusion.SfDataGrid.XForms.SwipeEndedEventArgs)">
            <summary>
            Raise the swipe ended event.
            </summary>
            <param name="args">SwipeEndedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseQueryColumnDraggingEvent(Syncfusion.SfDataGrid.XForms.QueryColumnDraggingEventArgs)">
            <summary>
            Raise the Query column dragging event
            </summary>
            <param name="args">QueryColumnDraggingEvent argument</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseQueryRowDraggingEvent(Syncfusion.SfDataGrid.XForms.QueryRowDraggingEventArgs)">
            <summary>
            Raise the Query row dragging event
            </summary>
            <param name="args">QueryRowDraggingEvent argument</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseQueryUnboundValue(Syncfusion.SfDataGrid.XForms.UnboundActions,System.Object,Syncfusion.SfDataGrid.XForms.GridColumn,System.Object)">
            <summary>
            Helper method to raise UnboundColumn initializing and updating
            </summary>
            <param name="action">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="value">Specifies the current column value</param>
            <param name="column">Specifies the current column</param>
            <param name="record">Specifies the current row data</param>
            <returns>Returns the GridUnboundColumnEventArgs</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseQueryUnboundValue(Syncfusion.SfDataGrid.XForms.GridUnboundColumnEventArgs)">
            <summary>
            Raise the QueryUnboundColumnValue event
            </summary>
            <param name="args">GridUnboundColumnEvent argument</param>
            <returns>Returns the GridUnboundColumnEvent argument</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseColumnResizingEvent(Syncfusion.SfDataGrid.XForms.ProgressStates)">
            <summary>
            Raise the ColumnResizing event
            </summary>
            <param name="state">Defines the posiible progressing state of resizing operation</param>
            <returns>Returns the boolean value</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseBeginEditingEvent">
            <summary>
            Raise the BeginEditing event
            </summary>
            <returns>Returns the boolean value</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseEndEditingEvent(System.Boolean)">
            <summary>
            Raise the EndEditing event
            </summary>
            <param name="cancelEdit">boolean value</param>
            <returns>Returns the boolean value indicating whether to handle EndEditing event.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseQueryCellStyleEvent(Syncfusion.SfDataGrid.XForms.QueryCellStyleEventArgs)">
            <summary>
            Raises the query cell style event.
            </summary>
            <param name="e">QueryCellStyleEvent arguments</param>
            <returns><b>true</b>, if query cell style event was raised, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseQueryRowStyleEvent(Syncfusion.SfDataGrid.XForms.QueryRowStyleEventArgs)">
            <summary>
            Raises the query row style event.
            </summary>
            <param name="e">QueryRowStyleEvent arguments</param>
            <returns><b>true</b>, if query row style event was raised, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdatePullToRefreshViewVisibility">
            <summary>
            Collapses the pull to refresh view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateLoadMoreViewVisibility">
            <summary>
            Collapses load more view if it does not meet the LoadMore enabling condition.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateLoadMoreView(System.Double)">
            <summary>
            Updates the load more visibility based on the VerticalOffset value.
            </summary>
            <param name="value">The VerticalOffset.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGroupExpandingEvent(Syncfusion.SfDataGrid.XForms.GroupChangingEventArgs)">
            <summary>
            Helper method to raise the Group Expanding Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GroupChangingEventArgs">GroupChangingEventArgs</see> that contains the event data.</param>
            <returns>Returns boolean value indicating whether to cancel the grouping or not</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGroupExpandedEvent(Syncfusion.SfDataGrid.XForms.GroupChangedEventArgs)">
            <summary>
            Helper method to raise the Group Expanded Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GroupChangedEventArgs">GroupChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGroupCollapsingEvent(Syncfusion.SfDataGrid.XForms.GroupChangingEventArgs)">
            <summary>
            Helper method to raise the Group Collapsing Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GroupChangingEventArgs">GroupChangingEventArgs</see> that contains the event data.</param>
            <returns>Returns boolean value indicating whether to handle the grouping or not</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RaiseGroupCollapsedEvent(Syncfusion.SfDataGrid.XForms.GroupChangedEventArgs)">
            <summary>
            Helper method to raise the Group Collapsed Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GroupChangedEventArgs">GroupChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ScrollToPosition(System.Double,System.Double,System.UInt32)">
            <summary>
            Scrolls the grid to given x and y position.
            </summary>
            <param name="x">The X poisition.</param>
            <param name="y"> The Y position.</param>
            <param name="duration">duration value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RemoveDragViewMeasureInValidate">
            <summary>
            Unwire the MeasureInvalidate method for remove drag view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RemoveResizingIndicatorMeasureInValidate">
            <summary>
            Unwire the MeasureInvalidate method for remove resizing indicator.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeGroupSummaryRows">
            <summary>
            Method which helps to initiate the Group Summary rows.
            </summary>        
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeTableSummaries">
            <summary>
            Method which helps to initialize the Table Summary rows
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RefreshContainerAndView">
            <summary>
            The VisualContainer and the SfDataGrid's view is refreshed for the first time after the ItemsSource is set. 
            The HeaderLineCount, row and column count is updated in this method.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RefreshHeaderLineCount">
            <summary>
            The HeaderLineCount for SfDataGrid is set.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnLiveDataUpdateModePropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the LiveDataUpdateMode property is changed.
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAllowLoadMorePropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the AllowLoadMore property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnGridThemeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the grid theme is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnCaptionSummaryRowChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the caption summary row is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnGroupSummaryRowsPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the group summary rows property is changed.
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnTableSummaryRowsPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the table summary row property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSummaryCalculationModePropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the summary calculation mode property is changed.
            </summary>
            <param name="obj"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnItemsSourceChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the ItemsSource property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnColumnsPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the Columns property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnColumnSizerChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the ColumnSizer property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnHeaderRowHeightChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the HeaderRowHeight property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnRowHeightChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the RowHeight property is changed
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnDefaultColumnWidthChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the DefaultColumnWidth property is changed
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnRowHeaderWidthChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the RowHeaderWidth property is changed
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnIndentColumnWidthChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the IndentColumnWidth property is changed
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnShowRowHeaderChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the ShowRowHeader property is changed
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSortColumnDescriptionChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the SortColummnDescriptions is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnGroupColumnDescriptionChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the GroupColumnDescriptions is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnFrozenRowsCountPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the FrozenRowsCount property is changed
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnFrozenColumnsCountPropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the FrozenRowsCount property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSelectedItemChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the SelectedItem property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSelectedItemsChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the SelectedItems property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSelectionModeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the SelectionMode property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSelectionControllerChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Callback for the selection controller changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSelectedIndexChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the SelectedIndex property is changed
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnCurrentItemChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the CurrentItem property is changed
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAllowMultiSortingChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the AllowMultiSorting property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAlternationCountChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the AlternationCount property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnLoadMoreCommandChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the LoadMoreCommand property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnLoadMorePositionChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the LoadMorePosition property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnLoadMoreViewChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the LoadMoreView property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnPullToRefreshCommandChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the PullToRefreshCommmand property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnPullToRefreshViewChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the PullToRefreshView property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnScrollingModeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the ScrollingMode property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnIsBusyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the IsBusy property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAutoGenerateColumnsModeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the AutoGenerateColumnsMode property is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAllowSwipingChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when allow swiping is changed.
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnNotificationSubscriptionModeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for the NotificationSubscriptionMode Property
            </summary>
            <param name="bindable">The GridColumn as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.FrozeGroupHeaderChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Callback for FreezeGroupHeader Property
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAllowGroupExpandCollapsedChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Callback for AllowGroupExpandCollapse Property
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnGroupingModeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Callback for GroupingMode Property
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnAutoExpandGroupsChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Callback for AutoExpandGroups Property
            </summary>
            <param name="bindable">The SfDataGrid as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnMaxSwipeOffSetChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the MaxSwipeOffSet property is changed.
            </summary>
            <param name="bindable">The Gridcommon as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnLoadMorePostionChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Occurs when the LoadMorePosition property is changed.
            </summary>
            <param name="bindable">The Gridcommon as bindable object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.SetItemsSource(System.Object)">
            <summary>
            Sets the ItemsSource property of the grid. This method is exposed to the customer to set the ItemsSource of the grid.
            </summary>
            <param name="source">The source collection that is passed by the user to be set as SfDataGrid's ItemsSource.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ResetswipeOffset">
            <summary>
            Reset the swipe offset of SfDataGrid. This method will reset the swiping offset programmatically when we no need to maintain the swiping after navigating to another page.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnSelectedItemsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Occurs when the SelectedItems property is changed
            </summary>
            <param name="sender">The SfDataGrid.</param>
            <param name="e">The NotifyCollectionChangedEventArgs.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CheckForUnboundColumns(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Checks whether the SfDataGrid's column collection contains any UnboundColumns
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnGridThemeChanged">
            <summary>
            Occurs when the grid theme is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnGridColumnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raised when the Columns collection gets changed.
            </summary>
            <param name="sender">The SfDataGrid.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RefreshGroups(System.Boolean)">
            <summary>
            Refresh GroupColumnDescriptions based on <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupingMode"/>.
            </summary>
            <param name="removeIndents">Removes all the indents when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.GroupingMode"/> is  <see cref="F:Syncfusion.SfDataGrid.XForms.GroupingMode.Multiple"/> by uisng this optional parameter.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnFooterRowsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the FooterRowsCount property is changed
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnFooterColumnsCountPropertyChanged(System.Int32,System.Int32)">
            <summary>
            Occurs when the FooterColumnsCount property is changed
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.OnShowSortNumberChanged(System.Boolean,System.Boolean)">
            <summary>
            Occurs when the ShowSortNumber property is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">the new value.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ResetColumns">
            <summary>
            Resets the Columns collection based on the AutoGenerateColumnsMode.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RemoveAutoGeneratedColumns">
            <summary>
            Removes the column that were auto generated.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.RemoveChildMeasureInValidate">
            <summary>
            Unwire the remove child method.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitPullToRefreshView">
            <summary>
            Initializes a new instance of PullToRefreshView with the required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.gridLoaded">
            <summary>
            Loads the grid when the it comes to view for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.Setup">
            <summary>
            Initializes the required collections and properties when creating instance for SfDataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateRowStyle">
            <summary>
            Updates the row style.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateScrollViewAndGridBackground">
            <summary>
            Update the background color for scroll view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeCollections">
            <summary>
            Initializes the required collections in the dataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.GenerateGridColumns(Syncfusion.SfDataGrid.XForms.Columns,Syncfusion.Data.ICollectionViewAdv)">
            <summary>
            Generates the GridColumns in the SfDataGrid if the AutoGenerateColumns property is set.
            </summary>
            <param name="gridColumns">The Columns collection.</param>
            <param name="view">The SfDataGrid's view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CreateColumn(System.Reflection.PropertyInfo,System.Boolean@)">
            <summary>
            Creates a new <see cref="T:Syncfusion.SfDataGrid.XForms.GridColumn"/> for the properties in the data model if the SfDataGrid's AutoGenerateColumns property is set.
            </summary>
            <param name="propertyInfo"> The property information of the column to be created.</param>
            <param name="cancelArgs">The cancel args.</param>
            <returns>Returns the current column value</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.GenerateGridColumnsForDynamic(Syncfusion.SfDataGrid.XForms.Columns,Syncfusion.Data.ICollectionViewAdv)">
            <summary>
            Generates the GridColumns for Dynamic ItemsSource in the SfDataGrid if the AutoGenerateColumns property is set as true.
            </summary>
            <param name="gridColumns">The Columns collection.</param>
            <param name="view">The SfDataGrid's view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeCellRendererCollection">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.GridCellRendererCollection"/> class and adds all the renderer used in a SfDataGrid control to it.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeLoadMore">
            <summary>
            Initializes a new instance of LoadMoreView with the required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.ArrangeLoadMoreView(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Arranges the load more view in the DataGrid.
            </summary>
            <param name="x">The horizontal start position.</param>
            <param name="y">The vertical start position.</param>
            <param name="width">The width for the load more view.</param>
            <param name="height">The height for the load more view.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeSwipeView">
            <summary>
            Initialize a new instance of swipe view with required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeDragViews">
            <summary>
            Initialize a new instance of drag view with required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UpdateColumnResizingIndicator">
            <summary>
            Update the backgroundcolor, visibility and input transparent property for column resizing indicator.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeIndicatorView">
            <summary>
            Initialize a new instance of indicator view with required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeResizingIndicatorView">
            <summary>
            Initialize a new instance of resizing indicator view with required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CreateDragIndicatorView(Xamarin.Forms.ImageSource,Xamarin.Forms.ImageSource)">
            <summary>
            Creates a drag indicator view.
            </summary>
            <param name="dragDownImage">instance for dragdown image</param>
            <param name="dragUpImage">instance for dragup image</param>
            <returns>Returns the drag indicator view</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.CreateColumnResizingIndicatorView(Xamarin.Forms.ImageSource)">
            <summary>
            Creates the view for the column resizing indicator.
            </summary>
            <param name="resizingIcon">the resizing icon as image source</param>
            <returns>Returns the column resizing indicator view</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeColumnDragView">
            <summary>
            Initializes a new instance of the column drag view with required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.InitializeRowDragView">
            <summary>
            Initialize a new instance of row drag view with required properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the component and optionally releases the managed resources.
            </summary>
            <param name="disposing"> if true - release both managed and unmanaged resources; 
            if false - release only unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.Pulling(System.Double,System.Boolean@)">
            <summary>
            Raises when the pulling gesture action is started.
            </summary>
            <param name="progress"> Indicates the value of the progress indicator in agreement to the PullingThreshold. </param>
            <param name="cancel"> Gets or sets a value indicating whether pulling should be handled. </param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.Refreshing">
            <summary>
            Raises when the refreshing action is in progress once the pulling meets the PullingThreshold constraint.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.Refreshed">
            <summary>
            Raises when the view gets refreshed.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.PullingCancelled">
            <summary>
            Raises when the pulling is cancelled.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.CanCustomizeContentLayout">
            <summary>
            Gets or sets a value to indicate whether to bounce SfDataGrid body region only with TransitionMode-Push or SfDataGrid to bounce with HeaderRow also. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.UnWireEvents">
            <summary>
            UnWires the events in the GridModel.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.SfDataGrid.WireEvents">
            <summary>
            Wires the events in the GridModel.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager">
            <summary>
            Class which customize the appearance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.NumericButtonSelectionBackground">
            <summary>
            Gets or sets the selection background color for numeric button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.NumericButtonSelectionForeground">
            <summary>
            Gets or sets the selection foreground color for numeric button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.NumericButtonForegroundColor">
            <summary>
            Gets or sets the foreground color for numeric button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.NumericButtonBackgroundColor">
            <summary>
            Gets or sets the background color for numeric button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.NavigationButtonColor">
            <summary>
            Gets or sets the color for navigation button
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.PagerButtonBorderColor">
            <summary>
            Gets or sets the border color for pager button
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetNumericButtonSelectionBackgroundColor">
            <summary>
            Gets the background color of the selection numeric button.
            </summary>
            <returns>The background color of the selection numeric button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetNumericButtonSelectionForegroundColor">
            <summary>
            Gets the foreground color of the selection numeric button.
            </summary>
            <returns>The foreground color of the selection numeric button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetNumericButtonBackgroundColor">
            <summary>
            Gets the background color of the numeric button.
            </summary>
            <returns>The background color of numeric button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetNumericButtonForegroundColor">
            <summary>
            Gets the foreground color of the numeric button.
            </summary>
            <returns>The foreground color of the numeric button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetNavigationButtonBackgroundColor">
            <summary>
            Gets the background color of the navigation button.
            </summary>
            <returns>The background color of the navigation button.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetPagerButtonBorderColor">
            <summary>
            Gets the border color of all the pager buttons.
            </summary>
            <returns>The border color of the pager buttons.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetFirstPageIcon">
            <summary>
            Gets the ImageSource of the FirstPage icon.
            </summary>
            <returns>The imagesource of the FirstPageIcon</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetLastPageIcon">
            <summary>
            Gets the ImageSource of the LastPage icon.
            </summary>
            <returns>The imagesource of the LastPage icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetNextPageIcon">
            <summary>
            Gets the ImageSource of the NextPage icon.
            </summary>
            <returns>The imagesource  of the NextPage icon.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager.GetPreviousPageIcon">
            <summary>
             Gets the ImageSource of the PreviousPage icon.
            </summary>
            <returns>The image source of the PreviousPage icon.</returns>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.IScrollableElement">
            <summary>
            Defines properties to be implemented when the NumericButtons in SfDataPager generated/created
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.IScrollableElement.Element">
            <summary>
            Gets the reference of the panel element.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PanelElement"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.IScrollableElement.Index">
            <summary>
            Gets the index of the numeric button.
            </summary>
            <value>The index of the numeric button.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.IScrollableElement.IsEllipsisElement">
            <summary>
            Gets a value indicating whether the current element is ellipsised
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton">
            <summary>
            A customized <see cref="T:Xamarin.Forms.View"/> that reacts to touch events.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.BorderColorProperty">
            <summary>
            Identifies the BorderColor bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.ClipProperty">
            <summary>
            Identifies the Clip bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.HighlightingBackgroundColorProperty">
            <summary>
            Identifies the HighlightingBackgroundColor bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.IsEllipsisElementProperty">
            <summary>
            Identifies the IsEllipsisElement bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.EllipsisPositionProperty">
            <summary>
            Identifies the EllipsisPosition bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.PageIndexProperty">
            <summary>
            Identifies the PageIndex bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.IsCurrentPageProperty">
            <summary>
            Identifies the IsCurrentPage bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.#ctor">
            <summary>
            Initializes a new instance of the NumericButton class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.NavigationButtons">
            <summary>
            Gets or sets the navigation buttons, which are used to navigate through pages.
            </summary>
            <value>The navigation buttons, which are used to navigate through pages.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.IsButtonEnabled">
            <summary>
            Gets or sets a value indicating whether to enable/disable the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/>.
            </summary>
            <value><b>True</b>, if the button is enabled, otherwise <b>false</b>. The default value is true.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.DataPager">
            <summary>
            Gets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.PageIndex">
            <summary>
            Gets or sets the current page index of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
            <value>The current page index of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.IsCurrentPage">
            <summary>
            Gets or sets a value indicating whether the page is current page or not.
            </summary>
            <value>The boolean value denoting whether the page is current page or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.IsEllipsisElement">
            <summary>
            Gets or sets a value indicating whether the numeric button is a ellipsis element or not. By default, all the numeric buttons in the 
            page will be in view. However, the user can set auto ellipsis mode by using <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode"/> property, by which 
            the numeric button will be displayed as the ellipsis element.
            </summary>
            <value>The boolean value indicating whether the numeric button is a ellipsis element or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.EllipsisPosition">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.EllipsisPosition"/> of the numeric button, the ellipsis position may be in the left or 
            right or both ends of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> based on the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode"/>.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.EllipsisPosition"/> of the numeric button.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.HighlightingBackgroundColor">
            <summary>
            Gets or sets the highlighting background color used to highlight numeric button when selected. 
            </summary>
            <value>The highlighting background color used to highlight numeric button when selected.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.Clip">
            <summary>
            Gets or sets the clip value of the numeric button.
            </summary>
            <value>The clip value of the numeric button.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.BorderColor">
            <summary>
            Gets or sets the border color used to highlight numeric button.
            </summary>
            <value>The border color used to highlight the numeric button.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.OnCurrentPageChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for current page property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">The Content of the NumericButton.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">The Content of the NumericButton.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.SetAsCurrentPage">
            <summary>
            Sets the current page based on selection and whether the selected element is ellipsis or numeric button.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the Content of the NumericButton.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.PanelElement">
            <summary>
            Serves as a base class for the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> providing the required properties in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PanelElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PanelElement"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.PanelElement.Visibility">
            <summary>
            Gets or sets a value indicating whether the visibility of the panel element
            </summary>
            <value>The boolean value indicating the visibility of the panel element.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement">
            <summary>
            Represents a class that implements <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.IScrollableElement"/> interface to provide the required information for a <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.#ctor">
            <summary>
            Initializes a new instance of the ScrollableElement class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.IsEllipsisElement">
            <summary>
            Gets or sets a value indicating whether the current element is ellipsised
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.EllipsisPosition">
            <summary>
            Gets or sets the ellipsis position
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.Element">
            <summary>
            Gets or sets the reference of the panel element.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PanelElement"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.Index">
            <summary>
            Gets or sets the index of the numeric button.
            </summary>
            <value>The index of the numeric button.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.IsEnsured">
            <summary>
            Gets or sets a value indicating whether the ellipsis is ensured.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.Syncfusion#SfDataGrid#XForms#DataPager#IScrollableElement#IsEllipsisElement">
            <summary>
            Gets a value indicating whether the current element is ellipsis element
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.InitializeElement(Xamarin.Forms.Style,System.String)">
            <summary>
            Initializes the views inside the scroll view.
            </summary>
            <param name="numericButtonStyle">style of the numeric button</param>
            <param name="elipsisContent">The elipsis Content</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.UpdateElement">
            <summary>
            Update the elements in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.SetBinding">
            <summary>
            Sets the binding for EllipsisPositionProperty and IsEllipsisElementProperty
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.SfPagerLabel">
            <summary>
            A customized <see cref="T:Xamarin.Forms.View"/> that displays text in single-line as well as multi-lines.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfPagerLabel.TextProperty">
            <summary>
            Identifies the Text bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfPagerLabel.#ctor">
            <summary>
            Initializes a new instance of the SfPagerLabel class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfPagerLabel.Text">
            <summary>
            Gets or sets the text for the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfPagerLabel"/>.
            </summary>
            <value>The text for the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfPagerLabel"/>.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper">
            <summary>
            Represents the wrapper class that implements the <see cref="T:Syncfusion.Data.PagedCollectionView"/> to create a queryable collection based on which data 
            manipulation is performed.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.#ctor">
            <summary>
            Initializes a new instance of the GridPagedCollectionViewWrapper class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the GridPagedCollectionViewWrapper class using the specified source.
            </summary>
            <param name="sender">The <see cref="T:System.Linq.Enumerable"/> collection.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.MoveToPage(System.Int32)">
            <summary>
            Moves to the given page index. This method can be used to move to the desired page.
            </summary>
            <param name="pageIndex">The destination page index to be reached.</param>
            <returns>A boolean value denoting whether the page is moved or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.NestedGridValidation(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            To be added
            </summary>
            <param name="sfdatagrid">SfDataGrid instance</param>
            <returns>Returns the nested grid validation</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.GetFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Func for the given property, data operation and the reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.GetExpressionFunc(System.String,Syncfusion.Data.DataOperation,Syncfusion.Data.DataReflectionMode)">
            <summary>
            Returns Expression Func for the property, data operation and reflection mode.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <param name="reflectionMode">The <see cref="T:Syncfusion.Data.DataReflectionMode"/> which indicates the mode of data change specifying either in display mode,
             value mode or mapping name.</param>
            <returns>Expression Func for the given property, data operation and the reflection mode.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.GetDynamicFunc">
            <summary>
            Gets the dynamic func
            </summary>
            <returns>Returns the dynamic func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.GetDynamicExpressionFunc">
            <summary>
            Gets the dynamic expression func
            </summary>
            <returns>Returns the dynamic expression func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.GetBindingFunc">
            <summary>
            Gets the binding func
            </summary>
            <returns>Returns the binding func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.GetBindingExpressionFunc">
            <summary>
            Gets the binding expression func
            </summary>
            <returns>Returns the binding expression func</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.GetDisplayValueFunc(System.String,Syncfusion.Data.DataOperation)">
            <summary>
            Returns a Func for getting the display value for the given property and data operation.
            </summary>
            <param name="propertyName">The property name which has changed.</param>
            <param name="operation">The <see cref="T:Syncfusion.Data.DataOperation"/> which indicates the data operations (sorting, grouping, etc) performed in the underlying collection.</param>
            <returns>Func for getting the display value for the given property and data operation.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.GetDataGrid">
            <summary>
            Gets the SfDataGrid present in the view.
            </summary>
            <returns>The reference of the SfDataGrid present in the view.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.CreateItemPropertiesProvider">
            <summary>
            Creates ItemPropertiesProvider based on the binded data source.
            </summary>
            <returns>Returns the collection of property descriptor.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.CreateRecords">
            <summary>
            Create records list based on the source provided by view.
            </summary>
            <returns>
            Returns RecordsList.
            </returns>
            <remarks>
            Creates <see cref="T:Syncfusion.Data.VirtualRecordsList"/> when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.CreateTopLevelGroup">
            <summary>
            Creates TopLevelGroup while grouping for view.
            </summary>
            <returns>Returns TopLevelGroup.</returns>
            <remarks>
            Creates <see cref="T:Syncfusion.SfDataGrid.XForms.GridVirtualizingTopLevelGroup"/> when <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.EnableDataVirtualization"/> is true.
            </remarks>        
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.RemoveRecord(System.Object)">
            <summary>
            Removes the given record.
            </summary>
            <param name="record">The record.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.DetachGridView">
            <summary>
            Method to unwire the SfDataGrid from the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.SetDataGrid(Syncfusion.SfDataGrid.XForms.SfDataGrid)">
            <summary>
            The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> is updated. When view is reused, need to update the grid.
            </summary>    
            <param name="grid">SfDataGrid instance</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper.Dispose(System.Boolean)">
            <summary>
            Disposes all the resources used by the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper"/> class.
            </summary>
            <param name="isDisposing">Indicates whether the call is from Dispose method or from a finalizer.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode">
            <summary>
            Defines constants that describes the possible display mode for <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.None">
            <summary>
            Do not display any page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.First">
            <summary>
            Displays only the first page button.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.Last">
            <summary>
            Displays only the last page button.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.Previous">
            <summary>
            Displays only the previous page button.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.Next">
            <summary>
            Displays only the next page button.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.Numeric">
            <summary>
            Displays only the numeric page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.FirstLast">
            <summary>
            Displays the first and last page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.PreviousNext">
            <summary>
            Displays the previous and next page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.FirstLastNumeric">
            <summary>
            Displays the first, last and numeric page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.PreviousNextNumeric">
            <summary>
            Displays the previous, next and numeric page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.FirstLastPreviousNext">
            <summary>
            Displays the first, last, previous and next page buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode.FirstLastPreviousNextNumeric">
            <summary>
            Displays the first, last, numeric, previous and next page buttons.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode">
            <summary>
            Defines constants that describes the possible ellipsis mode for a <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the scrollable panel of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode.None">
            <summary>
            Specifies that ellipsis mode is not applied to the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/>, all numeric buttons will be in view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode.Before">
            <summary>
            Specifies that the first <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> of the pager will be displayed as ellipsis Content, which upon clicking navigates to a page based 
            on <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumericButtonCount"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode.After">
            <summary>
            Specifies that the last <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in view will be displayed as ellipsis Content, which upon clicking navigates to a page based on 
            <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumericButtonCount"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode.Both">
            <summary>
            Specifies that the first and last <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the view is displayed as ellipsis Content, which upon clicking navigates to a page 
            based on <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumericButtonCount"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.EllipsisPosition">
            <summary>
            Defines constants that describes the possible position of the ellipsis button in the view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.EllipsisPosition.None">
            <summary>
            Specifies that no ellipsis button is in view.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.EllipsisPosition.Left">
            <summary>
            Specifies that the ellipsis button is in left.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.EllipsisPosition.Right">
            <summary>
            Specifies that the ellipsis button is in right.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.NavigationButtons">
            <summary>
            Defines constants that describes the types of numeric buttons available in the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NavigationButtons.FirstPageButton">
            <summary>
            Specifies the numeric button at the left extreme position which upon clicking always navigates to the first page.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NavigationButtons.PreviousPageButton">
            <summary>
            Specifies the numeric button at the second left extreme position which upon clicking always navigates to the previous page.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NavigationButtons.NextPageButton">
            <summary>
            Specifies the numeric button at the second right extreme position which upon clicking always navigates to the next page.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NavigationButtons.LastPageButton">
            <summary>
            Specifies the numeric button at the right extreme position which upon clicking always navigates to the last page.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.NavigationButtons.NumericButton">
            <summary>
            Specifies the numeric buttons in the scrolling region which navigates to the appropriate page upon clicking based on its index.
            </summary>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventHandler">
            <summary>
            Delegate for <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageIndexChanged"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventHandler">
            <summary>
            Delegate for <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageIndexChanging"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.OnDemandLoadingEventHandler">
            <summary>
            Delegate for <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.OnDemandLoadingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventArgs">
            <summary>
            Class which contains the arguments for <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageIndexChanging"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventArgs.OldPageIndex">
            <summary>
            Gets the current page index <b>from</b> which the page is navigating.
            </summary>
            <value>
            The current page index <b>from</b> which the page is navigating.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventArgs.NewPageIndex">
            <summary>
            Gets or sets the new page index <b>to</b> which the page is navigating.
            </summary>
            <value>The new page index <b>to</b> which the page is navigating.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventArgs">
            <summary>
            Class which contains the arguments for <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageIndexChanged"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventArgs.OldPageIndex">
            <summary>
            Gets the current page index <b>from</b> which the page is navigated.
            </summary>
            <value>
            The current page index <b>from</b> which the page is navigated.
            </value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventArgs.NewPageIndex">
            <summary>
            Gets the new page index <b>to</b> which the page is navigated.
            </summary>
            <value>
            The new page index <b>to</b> which the page is navigated.
            </value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.OnDemandLoadingEventArgs">
            <summary>
            Class which contains the arguments for <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.OnDemandLoadingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.OnDemandLoadingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.OnDemandLoadingEventArgs.StartIndex">
            <summary>
            Gets the start index of the corresponding page.
            </summary>
            <value>The start index of the corresponding page.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.OnDemandLoadingEventArgs.PageSize">
            <summary>
            Gets the number of items to be loaded for that page.
            </summary>
            <value>The number of items to be loaded for that page.</value>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.NotifyPropertyChangeHelper">
            <summary>
            Represents a class that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> to notify clients that a property value has changed.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NotifyPropertyChangeHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NotifyPropertyChangeHelper"/> class.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.DataPager.NotifyPropertyChangeHelper.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NotifyPropertyChangeHelper.OnPropertyChanged(System.String)">
            <summary>
            Method that handles the property changes. This method will be fired when the value of the property changes.
            </summary>
            <param name="propertyName">The property name whose value is changed.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.IItemGenerator">
            <summary>
            To regenerate and integrate the data pager’s item source.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.IItemGenerator.PreGenerateItems(System.Int32,System.Int32)">
            <summary>
            Generates the items that occupy the view space for the first time.
            </summary>
            <param name="startIndex">start index</param>
            <param name="endIndex">end index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.IItemGenerator.EnsureItems(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Ensures whether all the child elements in the view are arranged properly.
            </summary>
            <param name="startIndex">start index</param>
            <param name="endIndex">end index</param>
            <param name="isInternalOffset">The boolean value indicating whether it is internal offset or not.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator">
            <summary>
            Genarates the items to be loaded in the view 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.#ctor(Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator"/> class.
            </summary>
            <param name="pager">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.HighlightBackground">
            <summary>
            Gets or sets the background color for hightlight
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.Items">
            <summary>
            Gets and maintains the list of items currently in view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.PreGenerateItems(System.Int32,System.Int32)">
            <summary>
            Generates the numeric buttons to be loaded in the view for the first time.
            </summary>
            <param name="startIndex">The start index of the numeric buttons to be generated.</param>
            <param name="endIndex">The end index of the numeric buttons to be generated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.EnsureItems(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Ensures the numeric buttons that are available in the view.
            </summary>
            <param name="startIndex">The start index of the numeric buttons to be ensured.</param>
            <param name="endIndex">The end index of the numeric buttons to be ensured.</param>
            <param name="isInternalOffset">The boolean value indicating whether it is internal offset or not.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.CreateItem(System.Int32)">
            <summary>
            Initializes a new instance for ScrollableElement class
            </summary>
            <param name="index">current index</param>
            <returns>Returns the collection of property descriptor.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.GenerateEllipsisElement(Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode)">
            <summary>
            Creates and add, ellipsisElement  to the panel.
            </summary>
            <param name="mode">Defines constants that describes the possible ellipsis mode for a <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the scrollable panel of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.CreateEllipsisElement(Syncfusion.SfDataGrid.XForms.DataPager.EllipsisPosition,System.Int32)">
            <summary>
            Creates Ellipsis element
            </summary>
            <param name="position">current position</param>
            <param name="index">current index</param>
            <returns>Returns the created ellipsis element</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.UpdateItems(System.Collections.Generic.List{Syncfusion.SfDataGrid.XForms.DataPager.ScrollableElement},System.Int32)">
            <summary>
            Updates the NumericButton's PageIndex
            </summary>
            <param name="elements">scrollable element</param>
            <param name="index">current index</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.GetActualStartIndex(System.Int32)">
            <summary>
            Gets the actual start index.
            </summary>
            <param name="startIndex">starting index.</param>
            <returns>Returns the actual start index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.GetActualEndIndex(System.Int32)">
            <summary>
            Gets the actual end index.
            </summary>
            <param name="endIndex">End index</param>
            <returns>Returns the actual end index.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.ChangeVirtualIndexes">
            <summary>
            Changes the index based on the current offset value of the scroll viewer
            </summary>
            <returns>Returns a boolean value indicating whether the index value is changed.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.ItemGenerator.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController">
            <summary>
            Initializes the PageNavigationController class
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.#ctor(Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController"/> class.
            </summary>
            <param name="pager">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.MoveToPage(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Moves to the given page index. This method can be used to move to the desired page.
            </summary>
            <param name="pageIndex">The destination page index to be reached.</param>
            <param name="isElipsisClicked">boolean value</param>
            <param name="animateScrolling">animate scrolling</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.HideCurrentPage(System.Int32)">
            <summary>
            Hides the current page.
            </summary>
            <param name="pageIndex">current page index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.ShowCurrentPage(System.Int32)">
            <summary>
            Shows the current page
            </summary>
            <param name="pageIndex">current page index.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.CheckNewPageIsInView(System.Int32)">
            <summary>
            Gets a value indicating whether new page is in view or not.
            </summary>
            <param name="pageIndex">current page index</param>
            <returns>Returns a value indicating whether new page is in view or not.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.ScrollToCurrentPage(System.Int32,System.Boolean)">
            <summary>
            Used to scroll to the current page.
            </summary>
            <param name="pageIndex">current page index</param>
            <param name="animateScrolling">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.ScrollThePager(System.Int32,System.Boolean)">
            <summary>
            Used to scroll to the current page.
            </summary>
            <param name="pageIndex">current page index</param>
            <param name="animateScrolling">boolean value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PageNavigationController.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.PagerScrollView">
            <summary>
            Represents a customized <see cref="T:Xamarin.Forms.View"/> that is capable of scrolling if its Content requires.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PagerScrollView.#ctor">
            <summary>
            Initializes a new instance of the PagerScrollView class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.PagerScrollView.Visibility">
            <summary>
            Gets or sets a value indicating whether to enable/disable the visibility of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the scrollable panel.
            </summary>
            <value>The boolean value indicating whether to enable/disable the visibility of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the scrollable panel.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PagerScrollView.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">The Content of the PagerScrollView.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PagerScrollView.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">The Content of the PagerScrollView.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PagerScrollView.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control.
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PagerScrollView.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layouts Children of the NumericButtonPanel
            </summary>
            <param name="x">XPosition of the NumericButtonPanel</param>
            <param name="y">YPosition of the NumericButtonPanel</param>
            <param name="width">Width of the NumericButtonPanel</param>
            <param name="height">Height of the NumericButtonPanel</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.PagerScrollView.ScrollToPosition(System.Double,System.Boolean)">
            <summary>
            Scroll the pager to the cuurent position
            </summary>
            <param name="offSet">The value to be scrolled to</param>
            <param name="animate">value indicates whether the animate scrolling is applied to the view.</param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.Footer">
            <summary>
            Represents a class that holds the numeric buttons in the footer region in a <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Footer.#ctor(Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.Footer"/> class.
            </summary>
            <param name="pager">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.Footer.Visibility">
            <summary>
            Gets or sets a value indicating whether to enable/disable the visibility of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the footer region.
            </summary>
            <value>The boolean value indicating whether to enable/disable the visibility of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the footer region.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.Footer.Datapager">
            <summary>
            Gets an instance for <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.Footer.DefaultItemSize">
            <summary>
            Gets or sets the size of the item
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.Footer.FooterPadding">
            <summary>
            Gets or sets the footer padding value.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Footer.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control.
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Footer.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the children of the Footer.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Footer.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">A child added to the Footer.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Footer.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">A child removed from the Footer.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Footer.CreateFooterContent">
            <summary>
            Creates the footer Content
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Footer.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Footer.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.Header">
            <summary>
            Represents a class that holds the numeric buttons in the header region in a <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Header.#ctor(Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.Header"/> class.
            </summary>
            <param name="pager">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.Header.Visibility">
            <summary>
            Gets or sets a value indicating whether to enable/disable the visibility of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the header region.
            </summary>
            <value>The boolean value indicating whether to enable/disable the visibility of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> in the header region.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.Header.Datapager">
            <summary>
            Gets an instance for <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.Header.HeaderPadding">
            <summary>
            Gets or sets the header padding value.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.Header.DefaultItemSize">
            <summary>
            Gets or sets the size of the item
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Header.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control.
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Header.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Positions and sizes the children of the Footer.
            </summary>
            <param name="x">A value that represents the x coordinate of the child.</param>
            <param name="y">A value that represents the y coordinate of the child.</param>
            <param name="width">A value that represents the width of the child.</param>
            <param name="height">A value that represents the height of the child.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Header.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">A child added to the Header.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Header.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">A child removed from the Header.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Header.CreateHeaderContent">
            <summary>
            Creates the header Content
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Header.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.Header.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel">
            <summary>
            Represents a container that holds the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButton"/> views in a <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.#ctor(Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel"/> class.
            </summary>
            <param name="pager">The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.DataPager">
            <summary>
            Gets the reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> control.
            </summary>
            <value>The reference of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> control.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.ItemGenerator">
            <summary>
            Gets the ItemGenerator class to generate the data's for SfDataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.ScrollViewer">
            <summary>
            Gets the scroll viewer
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.DefaultItemSize">
            <summary>
            Gets or sets the default item size.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.NumericButtonPadding">
            <summary>
            Gets or sets the padding for Numeric button.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.InternalOffset">
            <summary>
            Gets or sets a value indicating whether the offset value.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">A child added to the NumericButtonPanel.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">A child removed from the NumericButtonPanel.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layouts Children of the NumericButtonPanel
            </summary>
            <param name="x">XPosition of the NumericButtonPanel</param>
            <param name="y">YPosition of the NumericButtonPanel</param>
            <param name="width">Width of the NumericButtonPanel</param>
            <param name="height">Height of the NumericButtonPanel</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.OnMeasure(System.Double,System.Double)">
            <summary>
            This method is called during the measure pass of a layout cycle to get the desired size of an element.
            </summary>
            <param name="widthConstraint">The available width for the element to use.</param>
            <param name="heightConstraint">The available height for the element to use.</param>
            <returns> A <see cref="T:Xamarin.Forms.SizeRequest"/> which contains the desired size of the element.</returns>
            <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control.
            Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.OnSizeAllocated(System.Double,System.Double)">
            <summary>
            This method is called when the size of the element is set during a layout cycle. This method is called directly 
            before the <see cref="E:Xamarin.Forms.VisualElement.SizeChanged"/> event is emitted.
            </summary>
            <param name="width">The new width of the element.</param>
            <param name="height">The new height of the element.</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.CanHorizontallyScroll">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel"/> can be scrolled horizontally or not.
            </summary>
            <value>A boolean value indicating whether the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel"/> can be scrolled horizontally or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.CanVerticallyScroll">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel"/> can be scrolled vertically or not.
            </summary>
            <value>A boolean value indicating whether the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel"/> can be scrolled vertically or not.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.HorizontalOffset">
            <summary>
            Gets the horizontal offset of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
            <value>The horizontal offset of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.VerticalOffset">
            <summary>
            Gets the vertical offset of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
            <value>The vertical offset of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.PreGenerateItems">
            <summary>
            Generates the numeric buttons to be loaded in the view for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.EnsureItems">
            <summary>
            Ensures the numeric buttons that are available in the view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.ArrangeItems(System.Double,System.Double)">
            <summary>
            Arrange the items in the view
            </summary>
            <param name="width">current width</param>
            <param name="height">current height</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.GetSize(Xamarin.Forms.View,Xamarin.Forms.Size@,System.Double@,System.Double@)">
            <summary>
            Gets the size of the line at the given index.
            </summary>
            <param name="originalSize">original size</param>
            <param name="elementSize">element size</param>
            <param name="newViewPortWidth">width value</param>
            <param name="newViewPortHeight">height value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.GetExtentValue(Xamarin.Forms.ScrollOrientation,System.Double)">
            <summary>
            Gets the extend width and height value
            </summary>
            <param name="orientation">scroll orientation</param>
            <param name="extentSpace">extend space</param>
            <returns>Returns the extend width and height value</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.ScrollView_Scrolled(System.Object,Xamarin.Forms.ScrolledEventArgs)">
            <summary>
            Call Back for the Scrolled event of the ScrollView in a <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> control.
            </summary>
            <param name="sender">SfDataPager instance</param>
            <param name="e">ScrolledEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.GetExtentWidthWithoutPadding">
            <summary>
            Gets the extent width without padding
            </summary>
            <returns>Returns the extent width without padding</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.GetExtentHeightWithoutPadding">
            <summary>
            Gets the extent height without padding
            </summary>
            <returns>Returns the extent height without padding</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.GetSize(System.Double,System.Double)">
            <summary>
            Gets the size of the line at the given index.
            </summary>
            <param name="width">width value</param>
            <param name="height">height value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.Dispose">
            <summary>
            Releases the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.NumericButtonPanel.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager">
            <summary>
            Provides paging functionality for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> that displays records in a paged view.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.#ctor">
            <summary>
            Initializes a new instance of the SfDataPager class.
            </summary>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageIndexChanged">
            <summary>
            Occurs when PageIndexChanged. This event fires when the user navigates form one page to another page.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.PageIndexChanged += sfPager_PageIndexChanged;
            
            private void sfPager_PageIndexChanged (object sender, PageIndexChangedEventArgs args)
            {
            // The user can get the old page index and the new page index here.
            }
            ]]></code>
            </example>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventArgs"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageIndexChanging">
            <summary>
            Occurs when PageIndexChanging. This event fires when the user navigation form one page to another page begins.
            </summary>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.PageIndexChanging += sfPager_PageIndexChanging;
            
            private void sfPager_PageIndexChanging (object sender, PageIndexChangingEventArgs args)
            {
            // The user can get the old page index and get or set the new page index here.
            }
            ]]></code>
            </example>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventArgs"/>
        </member>
        <member name="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading">
            <summary>
            Occurs when loading the page on demand. This event fires only when <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.UseOnDemandPaging"/> is enabled.
            </summary>
            <remarks>
            In normal Paging, data collection is entirely loaded initially to the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>. However, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> also 
            allows the user to load the data for the current page dynamically by setting the setting this property to true. To load current page item 
            dynamically you must hook the <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/> event. In the <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/> event, use the 
            <see cref="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.LoadDynamicItems(System.Int32,System.Collections.IEnumerable)"/> method to load the data for the corresponding page in <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.UseOnDemandPaging = true;
            sfPager.OnDemandLoading += sfPager_OnDemandLoading;
            
            private void OnDemandPageLoading(object sender, OnDemandLoadingEventArgs args)
            {
            sfDataPager.LoadDynamicItems(args.StartIndex, source.Skip(args.StartIndex).Take(args.PageSize));
            }
            ]]></code> 
            </example>
            <seealso cref="T:Syncfusion.SfDataGrid.XForms.DataPager.OnDemandLoadingEventArgs"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#on-demand-paging"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.ItemGenerator">
            <summary>
            Gets the ItemGenerator class to generate the data's for SfDataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.ItemsPanel">
            <summary>
            Gets the instance of the container holding the numeric buttons
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NavigationController">
            <summary>
            Gets the instance of the navigation buttons
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.ScrollView">
            <summary>
            Gets the current scroll view.
            </summary>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.EnableGridPaging">
            <summary>
            Gets or sets a value indicating whether to create source from <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper"/> or <see cref="T:Syncfusion.Data.PagedCollectionView"/>.
            </summary>
            <value><b>True</b>, if the source is created from <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper"/>, otherwise <b>false</b>.
            The default value is true.</value>
            <remarks>
            The items can be loaded in the datapager by two ways: normal paging and on demand paging. 
            In normal paging, all the items are loaded initially when the grid is loaded. In on demand paging, the items are loaded to the grid only 
            when navigating to the page i.e. items are loaded dynamically on demand.
            <para/>
            When <b>Normal paging</b> is used, the source is created from <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.GridPagedCollectionViewWrapper"/>, since it has to load all the 
            items to the grid. When <b>on demand paging</b> is used, the source is created from <see cref="T:Syncfusion.Data.PagedCollectionView"/>, since it has to 
            load the items to the grid for the current page only.
            <para/>
            When <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.EnableGridPaging"/> is set as true, it is necessary to hook the <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/> event to load the items 
            dynamically to the grid and set <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.UseOnDemandPaging"/> to true.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.EnableGridPaging = false;
            sfPager.UseOnDemandPaging = true;
            sfPager.OnDemandLoading += sfPager_OnDemandLoading;
            
            private void OnDemandPageLoading(object sender, OnDemandLoadingEventArgs args)
            {
            sfDataPager.LoadDynamicItems(args.StartIndex, source.Skip(args.StartIndex).Take(args.PageSize));
            }
            ]]></code>
            </example>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumbericButtonSpacing">
            <summary>
            Gets or sets Spacing between NumbericButton.
            </summary>
            <value>NumericButton Width.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumbericButtonSpacingProperty">
            <summary>
            Identifies the NumbericButtonSpacing bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumbericButtonHeight">
            <summary>
            Gets or sets Height of the NumbericButton.
            </summary>
            <value>NumericButton Height.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumbericButtonHeightProperty">
            <summary>
            Identifies the NumbericButtonHeight bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumbericButtonWidth">
            <summary>
            Gets or sets NumericButtonWidth.
            </summary>
            <value>NumericButton Width.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumbericButtonWidthProperty">
            <summary>
            Identifies the NumbericButtonWidth bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.Source">
            <summary>
            Gets or sets the items source of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>. <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> is bind to the observable collection of data.
            This property is set only when normal paging is used, since setting this property loads all the items to the grid initially.
            </summary>
            <value>The items source of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
            <remarks>
            The items source of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> is set to the collection, based on which <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PagedSource"/> is 
            created internally. The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> is set as <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PagedSource"/>.
            <para/>
            The items can be loaded in the datapager by two ways: normal paging and on demand paging. 
            In normal paging, all the items are loaded initially when the grid is loaded. In on demand paging, the items are loaded to the grid only 
            when navigating to the page i.e. items are loaded dynamically on demand. <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.Source"/> property should not be assigned when 
            on demand paging is used.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#normal-paging"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#on-demand-paging"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.SourceProperty">
            <summary>
            Identifies the Source bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PagedSource">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PagedSource"/> of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>, which is assigned to the item source of the datagrid.
            </summary>
            <value>The <see cref="T:Syncfusion.Data.PagedCollectionView"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
            <remarks>
            The items source of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> is set to the collection, based on which <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PagedSource"/> is 
            created internally. The <see cref="P:Syncfusion.SfDataGrid.XForms.SfDataGrid.ItemsSource"/> is set as <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PagedSource"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#normal-paging"/>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#on-demand-paging"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PagedSourceProperty">
            <summary>
            Identifies the PagedSource bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageCount">
            <summary>
            Gets or sets the page count, which returns the total number of pages in <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
            <value>The total number of pages in the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageCountProperty">
            <summary>
            Identifies the PageCount bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageSize">
            <summary>
            Gets or sets the page size, used to set total number of rows to be displayed in the grid.
            </summary>
            <value>The total number of rows to be displayed in the grid.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            sfPager.PageSize = 15;
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#normal-paging"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageSizeProperty">
            <summary>
            Identifies the PageSize bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumericButtonCount">
            <summary>
            Gets or sets the number of buttons to be displayed in the view in <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </summary>
            <value>
            The number of buttons to be displayed in the view in <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </value>
            <remarks> if NumericButtonCount is greater than View size, then number of button need to be displayed is calculated based on view size.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            sfPager.PageSize = 15;
            sfPager.NumericButtonCount = 4;
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumericButtonCountProperty">
            <summary>
            Identifies the NumericButtonCount bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageIndex">
            <summary>
            Gets or sets the page index, which indicates the current page index.
            </summary>
            <value>The current page index of SfDataPager.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Source = viewModel.Info;
            sfGrid.ItemsSource = sfPager.PagedSource;
            sfPager.PageIndex = 3;
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PageIndexProperty">
            <summary>
            Identifies the PageIndex bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumericButtonStyle">
            <summary>
            Gets or sets the NumericButtonStyle, that is used to customize the NumericButton.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.NumericButtonStyleProperty">
            <summary>
            Identifies the NumericButtonStyle bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AutoEllipsisMode">
            <summary>
            Gets or sets <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode"/>, which indicates the possible ellipsis mode for the numeric 
            button in the scrollable panel of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>. By default, all the numeric buttons in the page will be in view. However, 
            the user can set auto ellipsis mode by using <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode"/> property. 
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode"/> for the numeric button in the SfDataPager.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.AutoEllipsisMode = AutoEllipsisMode.After;
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AutoEllipsisModeProperty">
            <summary>
            Identifies the AutoEllipsisMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.UseOnDemandPaging">
            <summary>
            Gets or sets a value indicating whether to enable/disable OnDemandPaging. <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> enables the user to generate the items for 
            the current page dynamically by using this property.  When on demand paging is enabled, the generation of items is handled by the 
            <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/> event, hence it is necessary to hook the <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/>. The user cannot assign a value to the 
            <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.Source"/> when using on demand paging, since the items for the current page is generated only when navigated to that page.
            </summary>
            <value><b>True</b> if on demand paging is enabled, otherwise <b>false</b>. The default value is false.</value>
            <remarks>
            In normal Paging, data collection is entirely loaded initially to the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>. However, <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> also 
            allows the user to load the data for the current page dynamically by setting the setting this property to true. To load current page item 
            dynamically you must hook the <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/> event. In the <see cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/> event, use the 
            <see cref="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.LoadDynamicItems(System.Int32,System.Collections.IEnumerable)"/> method to load the data for the corresponding page in <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.
            </remarks>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.UseOnDemandPaging = true;
            sfPager.OnDemandLoading += sfPager_OnDemandLoading;
            
            private void OnDemandPageLoading(object sender, OnDemandLoadingEventArgs args)
            {
            sfDataPager.LoadDynamicItems(args.StartIndex, source.Skip(args.StartIndex).Take(args.PageSize));
            }
            ]]></code> 
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#on-demand-paging"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.UseOnDemandPagingProperty">
            <summary>
            Identifies the UseOnDemandPaging bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnUseOnDemandPagingChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for UseOnDemandPaging property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AppearanceManager">
            <summary>
            Gets or sets the appearance manager, <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> enables the user to customize the appearance of the pager by writing a Style 
            class overriding from <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager"/> and assigning the customized class to this property.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AppearanceManager"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfDataPager.AppearanceManager = new CustomAppearance();
            
            //CustomAppearance.cs
            public class CustomAppearance : AppearanceManager
            {
            
            }
            ]]></code>
            </example>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#appearancemanager"/>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AppearanceManagerProperty">
            <summary>
            Identifies the AppearanceManager bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AutoEllipsisText">
            <summary>
            Gets or sets the text for the numeric button in auto ellipsis mode. By default, all the numeric buttons in the page will be in view. However, 
            the user can set auto ellipsis mode by using <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.AutoEllipsisMode"/> property. <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> allows the user 
            to customize the text to be displayed in the auto ellipsis mode by using this property.
            </summary>
            <value>The text for the numeric button in auto ellipsis button. 
            The default value is <b>"..."</b>.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.AutoEllipsisMode = AutoEllipsisMode.After;
            sfPager.AutoEllipsisText = "~~~";
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AutoEllipsisTextProperty">
            <summary>
            Identifies the AutoEllipsisText bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.DisplayMode">
            <summary>
            Gets or sets the page display mode for the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>. The user can customize the buttons to be displayed in the pager, 
            by using this property. By default all the buttons (first, last, next, previous and numeric buttons) will be in view.
            </summary>
            <value>The <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode"/> of <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.DisplayMode = PagerDisplayMode.FirstLastNumeric;
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.DisplayModeProperty">
            <summary>
            Identifies the DisplayMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.Orientation">
            <summary>
            Gets or sets the scroll orientation of the DataPager. By default, <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> will scroll horizontally, the user can 
            customize the pager to be scrolled vertically or in both horizontal and vertical directions by using this property.
            </summary>
            <value>The <see cref="T:Xamarin.Forms.ScrollOrientation"/> of the SfDataPager. 
            The default value is <see cref="F:Xamarin.Forms.ScrollOrientation.Horizontal"/>.</value>
            <example>
            <code lang="C#"><![CDATA[
            sfPager.Orientation = ScrollOrientation.Both;
            ]]></code>
            </example>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OrientationProperty">
            <summary>
            Identifies the Orientation bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnAutoElipsisModeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for auto elipsis mode property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnNumericButtonHeightChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for numeric button height property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnNumericButtonWidthChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for numeric button width property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnNumericButtonSpacingChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for numeric button spacing property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newvalue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnPageIndexChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for page index changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnSourcePropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for source property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnAccentBackgroundChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for Accent background property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnPagerAppearanceChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for pager appearance property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnPageSizeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for PageSizeProperty changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnNumericButtonCountChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for numeric button count property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnAutoEllipsisModeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for Auto ellipse mode property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnAutoEllipsisTextChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for Auto ellipse text property changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnPageCountChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for Page count Changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnOrientationChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for Orientation property
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDisplayModeChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>
            Call back for DisplayMode Changed
            </summary>
            <param name="bindable">SfDataPager instance</param>
            <param name="oldValue">The old value</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.EnsureViewProperties">
            <summary>
            Initializes paged collection view properties.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.SetDisplayMode(Syncfusion.SfDataGrid.XForms.DataPager.PagerDisplayMode)">
            <summary>
            Sets the specified display mode to the pager and numeric buttons
            </summary>
            <param name="displayMode">Defines constants that describes the possible display mode for <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.SetAppearance">
            <summary>
            Sets the given style to the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> elements
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.SetScrollOrientationMode">
            <summary>
            Sets the scroll direction of the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.SetVisualState">
            <summary>
            Sets the appearance based on the chosen visual state
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.GoToState(Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager,System.String)">
            <summary>
            Changes the properties of the buttons based on the visual state
            </summary>
            <param name="sfDataPager">SfDataPager instance</param>
            <param name="disableButtonState">state of the disable button</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.InitiatePageSource(System.Collections.IEnumerable)">
            <summary>
            Initialize the item source for the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>
            </summary>
            <param name="source">The source</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.InitializePageCount(System.Collections.IEnumerable)">
            <summary>
            Initialize the page count
            </summary>
            <param name="source">The source</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.WireEvents">
            <summary>
            Hooks the required event
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.UnWireEvents">
            <summary>
            Unhooks the specified event
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.RefreshView">
            <summary>
            Refresh the view
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.GetScrollerViewSize(System.Double,System.Double)">
            <summary>
            Gets the size of the ScrollView based on, total view size, numeric button count and page count.
            </summary>
            <param name="totalWidth"> Available Width</param>
            <param name="totalHeight">Available Height</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.GetHeaderSize">
            <summary>
            Gets the size of the Header
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.GetFooterSize">
            <summary>
            Gets the size of the Footer
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.UpdateIcon">
            <summary>
            Updates the image source of the navigation buttons.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnSizeAllocated(System.Double,System.Double)">
            <summary>
            This method is called when the size of the element is set during a layout cycle. This method is called directly 
            before the <see cref="E:Xamarin.Forms.VisualElement.SizeChanged"/> event is emitted.
            </summary>
            <param name="width">The new width of the element.</param>
            <param name="height">The new height of the element.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.ShouldInvalidateOnChildAdded(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">A child added to the SfDataPager.</param>
            <returns>A boolean value do decide whether to invalidate when adding a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.ShouldInvalidateOnChildRemoved(Xamarin.Forms.View)">
            <summary>
            Method to decide whether to call <see cref="M:Xamarin.Forms.VisualElement.InvalidateMeasure"/> or not.
            </summary>
            <param name="child">A child removed from the SfDataPager.</param>
            <returns>A boolean value do decide whether to invalidate when removing a child.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.LayoutChildren(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Layouts Children of the NumericButtonPanel
            </summary>
            <param name="x">XPosition of the NumericButtonPanel</param>
            <param name="y">YPosition of the NumericButtonPanel</param>
            <param name="width">Width of the NumericButtonPanel</param>
            <param name="height">Height of the NumericButtonPanel</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.MoveToPage(System.Int32,System.Boolean)">
            <summary>
            Moves to the given page index. This method is used to navigate to the desired page programmatically.
            </summary>
            <param name="pageIndex">The page index to move to.</param>
            <param name="isElipsisElementClicked">The boolean value indicating whether the Ellipsis element is clicked.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.MoveToFirstPage">
            <summary>
            Moves to the first page. This method is used to navigate to the first page programmatically.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.MoveToLastPage">
            <summary>
            Moves to the last page. This method is used to navigate to the last page programmatically.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.MoveToNextPage">
            <summary>
            Moves to the next page. This method is used to navigate to the next page programmatically.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.MoveToPreviousPage">
            <summary>
            Moves to the previous page. This method is used to navigate to the previous page programmatically.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.MoveToPage(System.Int32)">
            <summary>
            Moves to the given page index. This method is used to navigate to the desired page programmatically.
            </summary>
            <param name="pageIndex">The page index to move to.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.MoveToPage(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Moves to the given page index. This method is used to navigate to the desired page programmatically from the current page.
            </summary>
            <param name="oldPageIndex">The old page index which represents the current page index.</param>
            <param name="pageIndex">The page index to move to.</param>
            <param name="animateScrolling">The value indicating whether scrolling can animated.</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.LoadDynamicItems(System.Int32,System.Collections.IEnumerable)">
            <summary>
            This method dynamically loads items into the <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.PagedSource"/> on demand. This method is used when <see cref="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.UseOnDemandPaging"/> is 
            enabled to load the items dynamically to the page only when navigating to the page.
            </summary>
            <param name="startIndex">The start index of the items to be loaded.</param>
            <param name="items">The items to be loaded in the page.</param>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging#on-demand-paging"/>
            <seealso cref="E:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandLoading"/>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnPagedSourcePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Call back for Paged source property changed.
            </summary>
            <param name="sender">SfDataGrid instance</param>
            <param name="e">PropertyChangedEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.OnDemandItemsLoading(System.Object,Syncfusion.Data.OnDemandItemsLoadingEventArgs)">
            <summary>
            Callback for loading items for the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> class.
            </summary>
            <param name="sender">SfdataGrid instance</param>
            <param name="args">OnDemandItemsLoadingEvent arguments</param>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.RaisePageIndexChangingEvent(Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangingEventArgs)">
            <summary>
            Raises the event handler for the pageindexchanging event
            </summary>
            <param name="args">PageIndexChangingEvent arguments</param>
            <returns>Returns a boolean value indicates whether page index changing event is called.</returns>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.RaisePageIndexChangedEvent(Syncfusion.SfDataGrid.XForms.DataPager.PageIndexChangedEventArgs)">
            <summary>
            Raises the event handler for the pageindexchanged event
            </summary>
            <param name="args">PageIndexChangedEvent arguments</param>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AutoElipsisModeProperty">
            <summary>
            Identifies the AutoEllipsisMode bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="P:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AccentBackground">
            <summary>
            Gets or sets a Color, which is set as selection color of the NumericButtons.
            </summary>
        </member>
        <member name="F:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.AccentBackgroundProperty">
            <summary>
            Identifies the AccentBackground bindable property.
            </summary>
            <remarks>This bindable property is read-only.</remarks>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.Dispose">
            <summary>
            Perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="M:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager.Dispose(System.Boolean)">
             <summary>
             Releases the unmanaged resources used by the component and optionally releases the managed resources.
             </summary>
             <param name="disposing"> if true - release both managed and unmanaged resources; 
             if false - release only unmanaged resources.
            </param>
        </member>
        <member name="T:Syncfusion.SfDataGrid.XForms.DataPager.NamespaceDoc">
            <summary>
            Provides classes, interfaces and enumerators to create <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/> which enable a user with paging functionality for data-bound controls. 
            The user can load the <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/> in the <see cref="T:Syncfusion.SfDataGrid.XForms.DataPager.SfDataPager"/>, which gives a paging support for <see cref="T:Syncfusion.SfDataGrid.XForms.SfDataGrid"/>. 
            </summary>
            <seealso cref="!:https://help.syncfusion.com/xamarin/sfdatagrid/paging"/>
            <exclude/>
        </member>
    </members>
</doc>
